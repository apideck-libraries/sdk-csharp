//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace ApiDeckSdk.Models.Components
{
    using ApiDeckSdk.Models.Components;
    using ApiDeckSdk.Utils;
    using Newtonsoft.Json;
    using NodaTime;
    using System.Collections.Generic;
    using System;
    
    public class Company
    {

        /// <summary>
        /// Unique identifier for the company
        /// </summary>
        [JsonProperty("id")]
        public string? Id { get; set; }

        /// <summary>
        /// Name of the company
        /// </summary>
        [JsonProperty("name", NullValueHandling = NullValueHandling.Include)]
        public string? Name { get; set; }

        /// <summary>
        /// Number of interactions
        /// </summary>
        [JsonProperty("interaction_count")]
        public long? InteractionCount { get; set; } = null;

        /// <summary>
        /// Owner ID
        /// </summary>
        [JsonProperty("owner_id")]
        public string? OwnerId { get; set; } = null;

        /// <summary>
        /// The Image URL of the company
        /// </summary>
        [JsonProperty("image")]
        public string? Image { get; set; } = null;

        /// <summary>
        /// A description of the company
        /// </summary>
        [JsonProperty("description")]
        public string? Description { get; set; } = null;

        /// <summary>
        /// The VAT number of the company
        /// </summary>
        [JsonProperty("vat_number")]
        public string? VatNumber { get; set; } = null;

        /// <summary>
        /// Indicates the associated currency for an amount of money. Values correspond to <a href="https://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a>.
        /// </summary>
        [JsonProperty("currency")]
        public Currency? Currency { get; set; } = null;

        /// <summary>
        /// The status of the company
        /// </summary>
        [JsonProperty("status")]
        public string? Status { get; set; } = null;

        /// <summary>
        /// The fax number of the company
        /// </summary>
        [JsonProperty("fax")]
        public string? Fax { get; set; } = null;

        /// <summary>
        /// The annual revenue of the company
        /// </summary>
        [JsonProperty("annual_revenue")]
        public string? AnnualRevenue { get; set; } = null;

        /// <summary>
        /// Number of employees
        /// </summary>
        [JsonProperty("number_of_employees")]
        public string? NumberOfEmployees { get; set; } = null;

        /// <summary>
        /// The industry represents the type of business the company is in.
        /// </summary>
        [JsonProperty("industry")]
        public string? Industry { get; set; } = null;

        /// <summary>
        /// The ownership indicates the type of ownership of the company.
        /// </summary>
        [JsonProperty("ownership")]
        public string? Ownership { get; set; } = null;

        /// <summary>
        /// A sales tax number is a unique number that identifies a company for tax purposes.
        /// </summary>
        [JsonProperty("sales_tax_number")]
        public string? SalesTaxNumber { get; set; } = null;

        /// <summary>
        /// A payee number is a unique number that identifies a payee for tax purposes.
        /// </summary>
        [JsonProperty("payee_number")]
        public string? PayeeNumber { get; set; } = null;

        /// <summary>
        /// An ABN is necessary for operating a business, while a TFN (Tax File Number) is required for any person working in Australia.
        /// </summary>
        [JsonProperty("abn_or_tfn")]
        public string? AbnOrTfn { get; set; } = null;

        /// <summary>
        /// An ABN Branch (also known as a GST Branch) is used if part of your business needs to account for GST separately from its parent entity.
        /// </summary>
        [JsonProperty("abn_branch")]
        public string? AbnBranch { get; set; } = null;

        /// <summary>
        /// The Australian Company Number (ACN) is a nine digit number with the last digit being a check digit calculated using a modified modulus 10 calculation. ASIC has adopted a convention of always printing and displaying the ACN in the format XXX XXX XXX; three blocks of three characters, each block separated by a blank.
        /// </summary>
        [JsonProperty("acn")]
        public string? Acn { get; set; } = null;

        /// <summary>
        /// The first name of the person.
        /// </summary>
        [JsonProperty("first_name")]
        public string? FirstName { get; set; } = null;

        /// <summary>
        /// The last name of the person.
        /// </summary>
        [JsonProperty("last_name")]
        public string? LastName { get; set; } = null;

        /// <summary>
        /// Parent ID
        /// </summary>
        [JsonProperty("parent_id")]
        public string? ParentId { get; set; } = null;

        [JsonProperty("bank_accounts")]
        public List<BankAccount>? BankAccounts { get; set; }

        [JsonProperty("websites")]
        public List<Website>? Websites { get; set; }

        [JsonProperty("addresses")]
        public List<Address>? Addresses { get; set; }

        [JsonProperty("social_links")]
        public List<SocialLink>? SocialLinks { get; set; }

        [JsonProperty("phone_numbers")]
        public List<PhoneNumber>? PhoneNumbers { get; set; }

        [JsonProperty("emails")]
        public List<Email>? Emails { get; set; }

        [JsonProperty("row_type")]
        public CompanyRowType? RowType { get; set; }

        [JsonProperty("custom_fields")]
        public List<CustomField>? CustomFields { get; set; }

        [JsonProperty("tags")]
        public List<string>? Tags { get; set; } = null;

        /// <summary>
        /// Whether the company is read-only or not
        /// </summary>
        [JsonProperty("read_only")]
        public bool? ReadOnly { get; set; } = null;

        /// <summary>
        /// Last activity date
        /// </summary>
        [JsonProperty("last_activity_at")]
        public DateTime? LastActivityAt { get; set; } = null;

        /// <summary>
        /// Whether the company is deleted or not
        /// </summary>
        [JsonProperty("deleted")]
        public bool? Deleted { get; set; }

        /// <summary>
        /// A formal salutation for the person. For example, &apos;Mr&apos;, &apos;Mrs&apos;
        /// </summary>
        [JsonProperty("salutation")]
        public string? Salutation { get; set; } = null;

        /// <summary>
        /// The date of birth of the person.
        /// </summary>
        [JsonProperty("birthday")]
        public LocalDate? Birthday { get; set; } = null;

        /// <summary>
        /// When custom mappings are configured on the resource, the result is included here.
        /// </summary>
        [JsonProperty("custom_mappings")]
        public Models.Components.CustomMappings? CustomMappings { get; set; } = null;

        /// <summary>
        /// Updated by user ID
        /// </summary>
        [JsonProperty("updated_by")]
        public string? UpdatedBy { get; set; } = null;

        /// <summary>
        /// Created by user ID
        /// </summary>
        [JsonProperty("created_by")]
        public string? CreatedBy { get; set; } = null;

        /// <summary>
        /// Last updated date
        /// </summary>
        [JsonProperty("updated_at")]
        public DateTime? UpdatedAt { get; set; } = null;

        /// <summary>
        /// Creation date
        /// </summary>
        [JsonProperty("created_at")]
        public DateTime? CreatedAt { get; set; } = null;

        /// <summary>
        /// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
        /// </summary>
        [JsonProperty("pass_through")]
        public List<PassThroughBody>? PassThrough { get; set; }
    }
}