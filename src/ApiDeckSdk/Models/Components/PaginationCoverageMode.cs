//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace ApiDeckSdk.Models.Components
{
    using ApiDeckSdk.Utils;
    using Newtonsoft.Json;
    using System;
    
    /// <summary>
    /// How pagination is implemented on this connector. Native mode means Apideck is using the pagination parameters of the connector. With virtual pagination, the connector does not support pagination, but Apideck emulates it.
    /// </summary>
    public enum PaginationCoverageMode
    {
        [JsonProperty("native")]
        Native,
        [JsonProperty("virtual")]
        Virtual,
    }

    public static class PaginationCoverageModeExtension
    {
        public static string Value(this PaginationCoverageMode value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static PaginationCoverageMode ToEnum(this string value)
        {
            foreach(var field in typeof(PaginationCoverageMode).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is PaginationCoverageMode)
                    {
                        return (PaginationCoverageMode)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum PaginationCoverageMode");
        }
    }

}