//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Unify.Models.Components
{
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using Unify.Models.Components;
    using Unify.Utils;
    
    public class CustomerInput
    {

        /// <summary>
        /// Display ID
        /// </summary>
        [JsonProperty("display_id")]
        public string? DisplayId { get; set; } = null;

        /// <summary>
        /// Display name
        /// </summary>
        [JsonProperty("display_name")]
        public string? DisplayName { get; set; } = null;

        /// <summary>
        /// The name of the company.
        /// </summary>
        [JsonProperty("company_name")]
        public string? CompanyName { get; set; } = null;

        /// <summary>
        /// The company or subsidiary id the transaction belongs to
        /// </summary>
        [JsonProperty("company_id")]
        public string? CompanyId { get; set; } = null;

        /// <summary>
        /// The job title of the person.
        /// </summary>
        [JsonProperty("title")]
        public string? Title { get; set; } = null;

        /// <summary>
        /// The first name of the person.
        /// </summary>
        [JsonProperty("first_name")]
        public string? FirstName { get; set; } = null;

        /// <summary>
        /// Middle name of the person.
        /// </summary>
        [JsonProperty("middle_name")]
        public string? MiddleName { get; set; } = null;

        /// <summary>
        /// The last name of the person.
        /// </summary>
        [JsonProperty("last_name")]
        public string? LastName { get; set; } = null;

        [JsonProperty("suffix")]
        public string? Suffix { get; set; } = null;

        /// <summary>
        /// Is this an individual or business customer
        /// </summary>
        [JsonProperty("individual")]
        public bool? Individual { get; set; } = null;

        /// <summary>
        /// If true, indicates this is a Project.
        /// </summary>
        [JsonProperty("project")]
        public bool? Project { get; set; } = null;

        [JsonProperty("addresses")]
        public List<Address>? Addresses { get; set; }

        [JsonProperty("phone_numbers")]
        public List<PhoneNumber>? PhoneNumbers { get; set; }

        [JsonProperty("emails")]
        public List<Email>? Emails { get; set; }

        [JsonProperty("websites")]
        public List<Website>? Websites { get; set; }

        [JsonProperty("bank_accounts")]
        public List<BankAccount>? BankAccounts { get; set; }

        /// <summary>
        /// Some notes about this customer
        /// </summary>
        [JsonProperty("notes")]
        public string? Notes { get; set; } = null;

        [JsonProperty("tax_rate")]
        public LinkedTaxRateInput? TaxRate { get; set; }

        [JsonProperty("tax_number")]
        public string? TaxNumber { get; set; } = null;

        /// <summary>
        /// Indicates the associated currency for an amount of money. Values correspond to <a href="https://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a>.
        /// </summary>
        [JsonProperty("currency")]
        public Currency? Currency { get; set; } = null;

        [JsonProperty("account")]
        public LinkedLedgerAccountInput? Account { get; set; } = null;

        /// <summary>
        /// The parent customer this entity is linked to.
        /// </summary>
        [JsonProperty("parent")]
        public LinkedParentCustomer? Parent { get; set; } = null;

        /// <summary>
        /// Customer status
        /// </summary>
        [JsonProperty("status")]
        public CustomerStatusStatus? Status { get; set; } = null;

        /// <summary>
        /// Payment method used for the transaction, such as cash, credit card, bank transfer, or check
        /// </summary>
        [JsonProperty("payment_method")]
        public string? PaymentMethod { get; set; } = null;

        /// <summary>
        /// The channel through which the transaction is processed.
        /// </summary>
        [JsonProperty("channel")]
        public string? Channel { get; set; } = null;

        /// <summary>
        /// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
        /// </summary>
        [JsonProperty("row_version")]
        public string? RowVersion { get; set; } = null;

        /// <summary>
        /// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
        /// </summary>
        [JsonProperty("pass_through")]
        public List<PassThroughBody>? PassThrough { get; set; }
    }
}