//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace ApideckUnifySdk.Models.Components
{
    using ApideckUnifySdk.Models.Components;
    using ApideckUnifySdk.Utils;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System;
    
    public class UnifiedFile
    {

        /// <summary>
        /// A unique identifier for an object.
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; } = default!;

        /// <summary>
        /// The third-party API ID of original entity
        /// </summary>
        [JsonProperty("downstream_id")]
        public string? DownstreamId { get; set; } = null;

        /// <summary>
        /// The name of the file
        /// </summary>
        [JsonProperty("name", NullValueHandling = NullValueHandling.Include)]
        public string? Name { get; set; }

        /// <summary>
        /// Optional description of the file
        /// </summary>
        [JsonProperty("description")]
        public string? Description { get; set; } = null;

        /// <summary>
        /// The type of resource. Could be file, folder or url
        /// </summary>
        [JsonProperty("type", NullValueHandling = NullValueHandling.Include)]
        public FileType? Type { get; set; }

        /// <summary>
        /// The full path of the file or folder (includes the file name)
        /// </summary>
        [JsonProperty("path")]
        public string? Path { get; set; } = null;

        /// <summary>
        /// The MIME type of the file.
        /// </summary>
        [JsonProperty("mime_type")]
        public string? MimeType { get; set; } = null;

        /// <summary>
        /// Whether the current user can download this file
        /// </summary>
        [JsonProperty("downloadable")]
        public bool? Downloadable { get; set; }

        /// <summary>
        /// The size of the file in bytes
        /// </summary>
        [JsonProperty("size")]
        public long? Size { get; set; } = null;

        [JsonProperty("owner")]
        public Owner? Owner { get; set; }

        /// <summary>
        /// The parent folders of the file, starting from the root
        /// </summary>
        [JsonProperty("parent_folders")]
        public List<LinkedFolder>? ParentFolders { get; set; }

        /// <summary>
        /// Whether the list of parent folders is complete. Some connectors only return the direct parent of a file
        /// </summary>
        [JsonProperty("parent_folders_complete")]
        public bool? ParentFoldersComplete { get; set; }

        /// <summary>
        /// Permissions the current user has on this file.
        /// </summary>
        [JsonProperty("permissions")]
        public Permissions? Permissions { get; set; }

        /// <summary>
        /// Whether the current file is exportable to other file formats. This property is relevant for proprietary file formats such as Google Docs or Dropbox Paper.
        /// </summary>
        [JsonProperty("exportable")]
        public bool? Exportable { get; set; }

        /// <summary>
        /// The available file formats when exporting this file.
        /// </summary>
        [JsonProperty("export_formats")]
        public List<string>? ExportFormats { get; set; } = null;

        /// <summary>
        /// When custom mappings are configured on the resource, the result is included here.
        /// </summary>
        [JsonProperty("custom_mappings")]
        public Models.Components.CustomMappings? CustomMappings { get; set; } = null;

        /// <summary>
        /// The user who last updated the object.
        /// </summary>
        [JsonProperty("updated_by")]
        public string? UpdatedBy { get; set; } = null;

        /// <summary>
        /// The user who created the object.
        /// </summary>
        [JsonProperty("created_by")]
        public string? CreatedBy { get; set; } = null;

        /// <summary>
        /// The date and time when the object was last updated.
        /// </summary>
        [JsonProperty("updated_at")]
        public DateTime? UpdatedAt { get; set; } = null;

        /// <summary>
        /// The date and time when the object was created.
        /// </summary>
        [JsonProperty("created_at")]
        public DateTime? CreatedAt { get; set; } = null;
    }
}