//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace ApideckUnifySdk.Models.Components
{
    using ApideckUnifySdk.Models.Components;
    using ApideckUnifySdk.Utils;
    using Newtonsoft.Json;
    using NodaTime;
    using System;
    using System.Collections.Generic;
    
    public class Quote
    {

        /// <summary>
        /// A unique identifier for an object.
        /// </summary>
        [JsonProperty("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The third-party API ID of original entity
        /// </summary>
        [JsonProperty("downstream_id")]
        public string? DownstreamId { get; set; } = null;

        /// <summary>
        /// Quote number.
        /// </summary>
        [JsonProperty("number")]
        public string? Number { get; set; } = null;

        /// <summary>
        /// The customer this entity is linked to.
        /// </summary>
        [JsonProperty("customer")]
        public LinkedCustomer? Customer { get; set; } = null;

        /// <summary>
        /// The unique identifier for the invoice.
        /// </summary>
        [JsonProperty("invoice_id")]
        public string? InvoiceId { get; set; }

        /// <summary>
        /// The unique identifier for the sales order.
        /// </summary>
        [JsonProperty("sales_order_id")]
        public string? SalesOrderId { get; set; } = null;

        /// <summary>
        /// The company or subsidiary id the transaction belongs to
        /// </summary>
        [JsonProperty("company_id")]
        public string? CompanyId { get; set; } = null;

        /// <summary>
        /// The unique identifier for the linked project.
        /// </summary>
        [JsonProperty("project_id")]
        public string? ProjectId { get; set; }

        /// <summary>
        /// Date quote was issued - YYYY-MM-DD.
        /// </summary>
        [JsonProperty("quote_date")]
        public LocalDate? QuoteDate { get; set; } = null;

        /// <summary>
        /// The date until which the quote is valid - YYYY-MM-DD.
        /// </summary>
        [JsonProperty("expiry_date")]
        public LocalDate? ExpiryDate { get; set; } = null;

        /// <summary>
        /// Terms of the quote.
        /// </summary>
        [JsonProperty("terms")]
        public string? Terms { get; set; } = null;

        /// <summary>
        /// Optional reference identifier for the transaction.
        /// </summary>
        [JsonProperty("reference")]
        public string? Reference { get; set; } = null;

        /// <summary>
        /// Quote status
        /// </summary>
        [JsonProperty("status")]
        public QuoteStatus? Status { get; set; } = null;

        /// <summary>
        /// Indicates the associated currency for an amount of money. Values correspond to <a href="https://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a>.
        /// </summary>
        [JsonProperty("currency")]
        public Currency? Currency { get; set; } = null;

        /// <summary>
        /// Currency Exchange Rate at the time entity was recorded/generated.
        /// </summary>
        [JsonProperty("currency_rate")]
        public double? CurrencyRate { get; set; } = null;

        /// <summary>
        /// Amounts are including tax
        /// </summary>
        [JsonProperty("tax_inclusive")]
        public bool? TaxInclusive { get; set; } = null;

        /// <summary>
        /// Sub-total amount, normally before tax.
        /// </summary>
        [JsonProperty("sub_total")]
        public double? SubTotal { get; set; } = null;

        /// <summary>
        /// Total tax amount applied to this quote.
        /// </summary>
        [JsonProperty("total_tax")]
        public double? TotalTax { get; set; } = null;

        /// <summary>
        /// Applicable tax id/code override if tax is not supplied on a line item basis.
        /// </summary>
        [JsonProperty("tax_code")]
        public string? TaxCode { get; set; } = null;

        /// <summary>
        /// Discount percentage applied to this quote.
        /// </summary>
        [JsonProperty("discount_percentage")]
        public double? DiscountPercentage { get; set; } = null;

        /// <summary>
        /// Discount amount applied to this quote.
        /// </summary>
        [JsonProperty("discount_amount")]
        public double? DiscountAmount { get; set; } = null;

        /// <summary>
        /// Total amount of quote, including tax.
        /// </summary>
        [JsonProperty("total")]
        public double? Total { get; set; } = null;

        /// <summary>
        /// Customer memo
        /// </summary>
        [JsonProperty("customer_memo")]
        public string? CustomerMemo { get; set; } = null;

        [JsonProperty("line_items")]
        public List<QuoteLineItem>? LineItems { get; set; }

        [JsonProperty("billing_address")]
        public Address? BillingAddress { get; set; }

        [JsonProperty("shipping_address")]
        public Address? ShippingAddress { get; set; }

        /// <summary>
        /// A list of linked tracking categories.
        /// </summary>
        [JsonProperty("tracking_categories")]
        public List<LinkedTrackingCategory?>? TrackingCategories { get; set; } = null;

        /// <summary>
        /// Optional quote template
        /// </summary>
        [JsonProperty("template_id")]
        public string? TemplateId { get; set; } = null;

        /// <summary>
        /// URL link to a source document - shown as &apos;Go to [appName]&apos; in the downstream app.
        /// </summary>
        [JsonProperty("source_document_url")]
        public string? SourceDocumentUrl { get; set; } = null;

        [JsonProperty("custom_fields")]
        public List<CustomField>? CustomFields { get; set; }

        /// <summary>
        /// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
        /// </summary>
        [JsonProperty("row_version")]
        public string? RowVersion { get; set; } = null;

        /// <summary>
        /// The user who last updated the object.
        /// </summary>
        [JsonProperty("updated_by")]
        public string? UpdatedBy { get; set; } = null;

        /// <summary>
        /// The user who created the object.
        /// </summary>
        [JsonProperty("created_by")]
        public string? CreatedBy { get; set; } = null;

        /// <summary>
        /// The date and time when the object was last updated.
        /// </summary>
        [JsonProperty("updated_at")]
        public DateTime? UpdatedAt { get; set; } = null;

        /// <summary>
        /// The date and time when the object was created.
        /// </summary>
        [JsonProperty("created_at")]
        public DateTime? CreatedAt { get; set; } = null;

        /// <summary>
        /// The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.
        /// </summary>
        [JsonProperty("pass_through")]
        public List<PassThroughBody>? PassThrough { get; set; }
    }
}