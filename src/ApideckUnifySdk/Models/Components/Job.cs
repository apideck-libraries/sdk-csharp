//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace ApideckUnifySdk.Models.Components
{
    using ApideckUnifySdk.Models.Components;
    using ApideckUnifySdk.Utils;
    using Newtonsoft.Json;
    using NodaTime;
    using System;
    using System.Collections.Generic;
    
    public class Job
    {

        /// <summary>
        /// A unique identifier for an object.
        /// </summary>
        [JsonProperty("id")]
        public string? Id { get; set; }

        [JsonProperty("slug")]
        public string? Slug { get; set; } = null;

        /// <summary>
        /// The job title of the person.
        /// </summary>
        [JsonProperty("title")]
        public string? Title { get; set; } = null;

        /// <summary>
        /// Sequence in relation to other jobs.
        /// </summary>
        [JsonProperty("sequence")]
        public long? Sequence { get; set; }

        /// <summary>
        /// The visibility of the job
        /// </summary>
        [JsonProperty("visibility")]
        public Visibility? Visibility { get; set; }

        /// <summary>
        /// The status of the job.
        /// </summary>
        [JsonProperty("status")]
        public JobStatus? Status { get; set; }

        /// <summary>
        /// The code of the job.
        /// </summary>
        [JsonProperty("code")]
        public string? Code { get; set; }

        /// <summary>
        /// language code according to ISO 639-1. For the United States - EN
        /// </summary>
        [JsonProperty("language")]
        public string? Language { get; set; } = null;

        [JsonProperty("employment_terms")]
        public EmploymentTerms? EmploymentTerms { get; set; } = null;

        /// <summary>
        /// Level of experience required for the job role.
        /// </summary>
        [JsonProperty("experience")]
        public string? Experience { get; set; }

        /// <summary>
        /// Specifies the location for the job posting.
        /// </summary>
        [JsonProperty("location")]
        public string? Location { get; set; } = null;

        /// <summary>
        /// Specifies whether the posting is for a remote job.
        /// </summary>
        [JsonProperty("remote")]
        public bool? Remote { get; set; } = null;

        /// <summary>
        /// A job&apos;s Requisition ID (Req ID) allows your organization to identify and track a job based on alphanumeric naming conventions unique to your company&apos;s internal processes.
        /// </summary>
        [JsonProperty("requisition_id")]
        public string? RequisitionId { get; set; }

        [JsonProperty("department")]
        public Department? Department { get; set; }

        /// <summary>
        /// Details of the branch for which the job is created.
        /// </summary>
        [JsonProperty("branch")]
        public Branch? Branch { get; set; }

        /// <summary>
        /// The recruiter is generally someone who is tasked to help the hiring manager find and screen qualified applicant
        /// </summary>
        [JsonProperty("recruiters")]
        public List<string>? Recruiters { get; set; } = null;

        [JsonProperty("hiring_managers")]
        public List<string>? HiringManagers { get; set; }

        [JsonProperty("followers")]
        public List<string>? Followers { get; set; } = null;

        /// <summary>
        /// A description of the object.
        /// </summary>
        [JsonProperty("description")]
        public string? Description { get; set; } = null;

        /// <summary>
        /// The job description in HTML format
        /// </summary>
        [JsonProperty("description_html")]
        public string? DescriptionHtml { get; set; } = null;

        [JsonProperty("blocks")]
        public List<Blocks>? Blocks { get; set; }

        [JsonProperty("closing")]
        public string? Closing { get; set; } = null;

        /// <summary>
        /// The closing section of the job description in HTML format
        /// </summary>
        [JsonProperty("closing_html")]
        public string? ClosingHtml { get; set; } = null;

        [JsonProperty("closing_date")]
        public LocalDate? ClosingDate { get; set; } = null;

        [JsonProperty("salary")]
        public Salary? Salary { get; set; }

        /// <summary>
        /// URL of the job description
        /// </summary>
        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible")]
        [JsonProperty("url")]
        public string? Url { get; set; } = null;

        /// <summary>
        /// URL of the job portal
        /// </summary>
        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible")]
        [JsonProperty("job_portal_url")]
        public string? JobPortalUrl { get; set; } = null;

        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible")]
        [JsonProperty("record_url")]
        public string? RecordUrl { get; set; } = null;

        [JsonProperty("links")]
        public List<JobLinks>? Links { get; set; }

        [JsonProperty("confidential")]
        public bool? Confidential { get; set; }

        /// <summary>
        /// Specifies whether an employee of the organization can apply for the job.
        /// </summary>
        [JsonProperty("available_to_employees")]
        public bool? AvailableToEmployees { get; set; }

        [JsonProperty("tags")]
        public List<string>? Tags { get; set; } = null;

        [JsonProperty("addresses")]
        public List<Address>? Addresses { get; set; }

        [JsonProperty("custom_fields")]
        public List<CustomField>? CustomFields { get; set; }

        /// <summary>
        /// Flag to indicate if the object is deleted.
        /// </summary>
        [JsonProperty("deleted")]
        public bool? Deleted { get; set; } = null;

        [JsonProperty("owner_id")]
        public string? OwnerId { get; set; } = null;

        [JsonProperty("published_at")]
        public DateTime? PublishedAt { get; set; } = null;

        /// <summary>
        /// When custom mappings are configured on the resource, the result is included here.
        /// </summary>
        [JsonProperty("custom_mappings")]
        public Models.Components.CustomMappings? CustomMappings { get; set; } = null;

        /// <summary>
        /// The user who last updated the object.
        /// </summary>
        [JsonProperty("updated_by")]
        public string? UpdatedBy { get; set; } = null;

        /// <summary>
        /// The user who created the object.
        /// </summary>
        [JsonProperty("created_by")]
        public string? CreatedBy { get; set; } = null;

        /// <summary>
        /// The date and time when the object was last updated.
        /// </summary>
        [JsonProperty("updated_at")]
        public DateTime? UpdatedAt { get; set; } = null;

        /// <summary>
        /// The date and time when the object was created.
        /// </summary>
        [JsonProperty("created_at")]
        public DateTime? CreatedAt { get; set; } = null;
    }
}