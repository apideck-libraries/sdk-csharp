//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace ApideckUnifySdk.Models.Components
{
    using ApideckUnifySdk.Models.Components;
    using ApideckUnifySdk.Utils;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System;
    
    public class EcommerceProduct
    {

        /// <summary>
        /// A unique identifier for an object.
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; } = default!;

        /// <summary>
        /// The name of the product as it should be displayed to customers.
        /// </summary>
        [JsonProperty("name")]
        public string? Name { get; set; } = null;

        /// <summary>
        /// A detailed description of the product.
        /// </summary>
        [JsonProperty("description")]
        public string? Description { get; set; } = null;

        /// <summary>
        /// The current status of the product (active or archived).
        /// </summary>
        [JsonProperty("status")]
        public ProductStatus? Status { get; set; } = null;

        /// <summary>
        /// The price of the product.
        /// </summary>
        [JsonProperty("price")]
        public string? Price { get; set; } = null;

        /// <summary>
        /// The stock keeping unit of the product.
        /// </summary>
        [JsonProperty("sku")]
        public string? Sku { get; set; } = null;

        /// <summary>
        /// The quantity of the product in stock.
        /// </summary>
        [JsonProperty("inventory_quantity")]
        public string? InventoryQuantity { get; set; } = null;

        /// <summary>
        /// An array of image URLs for the product.
        /// </summary>
        [JsonProperty("images")]
        public List<Images>? Images { get; set; } = null;

        /// <summary>
        /// The weight of the product.
        /// </summary>
        [JsonProperty("weight")]
        public string? Weight { get; set; } = null;

        /// <summary>
        /// The unit of measurement for the weight of the product.
        /// </summary>
        [JsonProperty("weight_unit")]
        public string? WeightUnit { get; set; } = null;

        /// <summary>
        /// An array of options for the product.
        /// </summary>
        [JsonProperty("options")]
        public List<EcommerceProductOptions>? Options { get; set; }

        [JsonProperty("variants")]
        public List<Variants>? Variants { get; set; }

        /// <summary>
        /// An array of tags for the product, used for organization and searching.
        /// </summary>
        [JsonProperty("tags")]
        public List<string>? Tags { get; set; }

        /// <summary>
        /// An array of categories for the product, used for organization and searching.
        /// </summary>
        [JsonProperty("categories")]
        public List<EcommerceProductCategories>? Categories { get; set; }

        /// <summary>
        /// When custom mappings are configured on the resource, the result is included here.
        /// </summary>
        [JsonProperty("custom_mappings")]
        public Models.Components.CustomMappings? CustomMappings { get; set; } = null;

        /// <summary>
        /// The date and time when the object was created.
        /// </summary>
        [JsonProperty("created_at")]
        public DateTime? CreatedAt { get; set; } = null;

        /// <summary>
        /// The date and time when the object was last updated.
        /// </summary>
        [JsonProperty("updated_at")]
        public DateTime? UpdatedAt { get; set; } = null;
    }
}