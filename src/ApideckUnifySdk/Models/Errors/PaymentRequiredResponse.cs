//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace ApideckUnifySdk.Models.Errors
{
    using ApideckUnifySdk.Utils;
    using Newtonsoft.Json;
    using System;
    using System.Net.Http;

    public class PaymentRequiredResponsePayload
    {
        /// <summary>
        /// HTTP status code
        /// </summary>
        [JsonProperty("status_code")]
        public double? StatusCode { get; set; }

        /// <summary>
        /// Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
        /// </summary>
        [JsonProperty("error")]
        public string? Error { get; set; }

        /// <summary>
        /// The type of error returned
        /// </summary>
        [JsonProperty("type_name")]
        public string? TypeName { get; set; }

        /// <summary>
        /// A human-readable message providing more details about the error.
        /// </summary>
        [JsonProperty("message")]
        public string? Message { get; set; }

        /// <summary>
        /// Contains parameter or domain specific information related to the error and why it occurred.
        /// </summary>
        [JsonProperty("detail")]
        public string? Detail { get; set; }

        /// <summary>
        /// Link to documentation of error type
        /// </summary>
        [JsonProperty("ref")]
        public string? Ref { get; set; }
    }

    /// <summary>
    /// Payment Required
    /// </summary>
    public class PaymentRequiredResponse : ApideckError
    {
        /// <summary>
        ///  The original data that was passed to this exception.
        /// </summary>
        public PaymentRequiredResponsePayload Payload { get; }

        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible. Use PaymentRequiredResponse.Payload.StatusCode instead.")]
        public double? StatusCode { get; set; }

        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible. Use PaymentRequiredResponse.Payload.Error instead.")]
        public string? Error { get; set; }

        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible. Use PaymentRequiredResponse.Payload.TypeName instead.")]
        public string? TypeName { get; set; }

        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible. Use PaymentRequiredResponse.Payload.Message instead.")]
        private string? _message { get; set; }

        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible. Use PaymentRequiredResponse.Payload.Detail instead.")]
        public string? Detail { get; set; }

        [Obsolete("This field will be removed in a future release, please migrate away from it as soon as possible. Use PaymentRequiredResponse.Payload.Ref instead.")]
        public string? Ref { get; set; }

        private static string ErrorMessage(PaymentRequiredResponsePayload payload, string body)
        {
            string? message = payload.Message;
            if (!string.IsNullOrEmpty(message))
            {
                return message;
            }

            return "API error occurred";
        }

        public PaymentRequiredResponse(
            PaymentRequiredResponsePayload payload,
            HttpRequestMessage request,
            HttpResponseMessage response,
            string body
        ): base(ErrorMessage(payload, body), request, response, body)
        {
           Payload = payload;

           #pragma warning disable CS0618
           StatusCode = payload.StatusCode;
           Error = payload.Error;
           TypeName = payload.TypeName;
           _message = payload.Message;
           Detail = payload.Detail;
           Ref = payload.Ref;
           #pragma warning restore CS0618
        }
    }

}