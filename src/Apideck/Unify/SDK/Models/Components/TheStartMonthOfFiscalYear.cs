//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Apideck.Unify.SDK.Models.Components
{
    using Apideck.Unify.SDK.Utils;
    using Newtonsoft.Json;
    using System;
    
    /// <summary>
    /// The start month of fiscal year.
    /// </summary>
    public enum TheStartMonthOfFiscalYear
    {
        [JsonProperty("January")]
        January,
        [JsonProperty("February")]
        February,
        [JsonProperty("March")]
        March,
        [JsonProperty("April")]
        April,
        [JsonProperty("May")]
        May,
        [JsonProperty("June")]
        June,
        [JsonProperty("July")]
        July,
        [JsonProperty("August")]
        August,
        [JsonProperty("September")]
        September,
        [JsonProperty("October")]
        October,
        [JsonProperty("November")]
        November,
        [JsonProperty("December")]
        December,
    }

    public static class TheStartMonthOfFiscalYearExtension
    {
        public static string Value(this TheStartMonthOfFiscalYear value)
        {
            return ((JsonPropertyAttribute)value.GetType().GetMember(value.ToString())[0].GetCustomAttributes(typeof(JsonPropertyAttribute), false)[0]).PropertyName ?? value.ToString();
        }

        public static TheStartMonthOfFiscalYear ToEnum(this string value)
        {
            foreach(var field in typeof(TheStartMonthOfFiscalYear).GetFields())
            {
                var attributes = field.GetCustomAttributes(typeof(JsonPropertyAttribute), false);
                if (attributes.Length == 0)
                {
                    continue;
                }

                var attribute = attributes[0] as JsonPropertyAttribute;
                if (attribute != null && attribute.PropertyName == value)
                {
                    var enumVal = field.GetValue(null);

                    if (enumVal is TheStartMonthOfFiscalYear)
                    {
                        return (TheStartMonthOfFiscalYear)enumVal;
                    }
                }
            }

            throw new Exception($"Unknown value {value} for enum TheStartMonthOfFiscalYear");
        }
    }

}