//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
namespace Apideck.Unify.SDK.Models.Components
{
    using Apideck.Unify.SDK.Models.Components;
    using Apideck.Unify.SDK.Utils;
    using Newtonsoft.Json;
    using System.Collections.Generic;
    using System;
    
    public class EcommerceOrder
    {

        /// <summary>
        /// A unique identifier for an object.
        /// </summary>
        [JsonProperty("id")]
        public string Id { get; set; } = default!;

        /// <summary>
        /// Order number, if any.
        /// </summary>
        [JsonProperty("order_number")]
        public string? OrderNumber { get; set; } = null;

        /// <summary>
        /// Indicates the associated currency for an amount of money. Values correspond to <a href="https://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a>.
        /// </summary>
        [JsonProperty("currency")]
        public Currency? Currency { get; set; } = null;

        [JsonProperty("discounts")]
        public List<EcommerceDiscount>? Discounts { get; set; }

        /// <summary>
        /// Sub-total amount, normally before tax.
        /// </summary>
        [JsonProperty("sub_total")]
        public string? SubTotal { get; set; } = null;

        /// <summary>
        /// Shipping cost, if any.
        /// </summary>
        [JsonProperty("shipping_cost")]
        public string? ShippingCost { get; set; } = null;

        /// <summary>
        /// Coupon discount, if any.
        /// </summary>
        [JsonProperty("coupon_discount")]
        public string? CouponDiscount { get; set; } = null;

        /// <summary>
        /// Total discount, if any.
        /// </summary>
        [JsonProperty("total_discount")]
        public string? TotalDiscount { get; set; } = null;

        /// <summary>
        /// Total tax, if any.
        /// </summary>
        [JsonProperty("total_tax")]
        public string? TotalTax { get; set; } = null;

        /// <summary>
        /// Total amount due.
        /// </summary>
        [JsonProperty("total_amount")]
        public string? TotalAmount { get; set; } = null;

        /// <summary>
        /// Refunded amount, if any.
        /// </summary>
        [JsonProperty("refunded_amount")]
        public string? RefundedAmount { get; set; } = null;

        /// <summary>
        /// Current status of the order.
        /// </summary>
        [JsonProperty("status")]
        public EcommerceOrderStatus? Status { get; set; } = null;

        /// <summary>
        /// Current payment status of the order.
        /// </summary>
        [JsonProperty("payment_status")]
        public EcommerceOrderPaymentStatus? PaymentStatus { get; set; } = null;

        /// <summary>
        /// Current fulfillment status of the order.
        /// </summary>
        [JsonProperty("fulfillment_status")]
        public FulfillmentStatus? FulfillmentStatus { get; set; } = null;

        /// <summary>
        /// Payment method used for this order.
        /// </summary>
        [JsonProperty("payment_method")]
        public string? PaymentMethod { get; set; } = null;

        /// <summary>
        /// The customer this entity is linked to.
        /// </summary>
        [JsonProperty("customer")]
        public LinkedEcommerceCustomer? Customer { get; set; }

        /// <summary>
        /// An object representing a shipping or billing address.
        /// </summary>
        [JsonProperty("billing_address")]
        public EcommerceAddress? BillingAddress { get; set; }

        /// <summary>
        /// An object representing a shipping or billing address.
        /// </summary>
        [JsonProperty("shipping_address")]
        public EcommerceAddress? ShippingAddress { get; set; }

        [JsonProperty("tracking")]
        public List<TrackingItem>? Tracking { get; set; }

        [JsonProperty("line_items")]
        public List<EcommerceOrderLineItem>? LineItems { get; set; }

        /// <summary>
        /// Note for the order.
        /// </summary>
        [JsonProperty("note")]
        public string? Note { get; set; } = null;

        /// <summary>
        /// When custom mappings are configured on the resource, the result is included here.
        /// </summary>
        [JsonProperty("custom_mappings")]
        public Models.Components.CustomMappings? CustomMappings { get; set; } = null;

        /// <summary>
        /// The date and time when the object was created.
        /// </summary>
        [JsonProperty("created_at")]
        public DateTime? CreatedAt { get; set; } = null;

        /// <summary>
        /// The date and time when the object was last updated.
        /// </summary>
        [JsonProperty("updated_at")]
        public DateTime? UpdatedAt { get; set; } = null;
    }
}