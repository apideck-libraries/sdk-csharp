openapi: 3.0.3
info:
  title: Apideck
  description: 'The Apideck OpenAPI Spec: SDK Optimized'
  version: 10.8.1
  contact:
    name: Apideck
    url: 'https://apideck.com'
    email: support@apideck.com
servers:
  - url: 'https://unify.apideck.com'
paths:
  /accounting/tax-rates:
    get:
      operationId: accounting.taxRatesAll
      summary: List Tax Rates
      description: |
        List Tax Rates. Note: Not all connectors return the actual rate/percentage value. In this case, only the tax code or reference is returned. Connectors Affected: Quickbooks
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/taxRatesFilter'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetTaxRatesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
        - connector: quickbooks
          description: |
            In quickbooks, the tax rates resource does not support pagination.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.taxRatesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.taxRates
      x-speakeasy-name-override: list
    post:
      operationId: accounting.taxRatesAdd
      summary: Create Tax Rate
      description: Create Tax Rate
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRate'
      responses:
        '201':
          $ref: '#/components/responses/CreateTaxRateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: quickbooks
          description: |
            To create a tax rate, `effective_tax_rate`, `tax_payable_account_id`, `name` and a `component` is required. If `tax_payable_account_id` is unknown, make a proxy call to get list of TaxAgency. [TaxAgency doc](https://developer.intuit.com/app/developer/qbo/docs/api/accounting/all-entities/taxagency#query-a-taxagency)
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              taxRate: {
                id: '1234',
                name: 'GST on Purchases',
                code: 'ABN',
                description: 'Reduced rate GST Purchases',
                effective_tax_rate: 10,
                total_tax_rate: 10,
                tax_payable_account_id: '123456',
                tax_remitted_account_id: '123456',
                components: [
                  {
                    id: '10',
                    name: 'GST',
                    rate: 10,
                    compound: true
                  }
                ],
                type: 'NONE',
                report_tax_type: 'NONE',
                original_tax_rate_id: '12345',
                status: 'active',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.taxRatesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.taxRates
      x-speakeasy-name-override: create
  '/accounting/tax-rates/{id}':
    get:
      operationId: accounting.taxRatesOne
      summary: Get Tax Rate
      description: |
        Get Tax Rate. Note: Not all connectors return the actual rate/percentage value. In this case, only the tax code or reference is returned. Support will soon be added to return the actual rate/percentage by doing additional calls in the background to provide the full view of a given tax rate. Connectors Affected: Quickbooks
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetTaxRateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.taxRatesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.taxRates
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.taxRatesUpdate
      summary: Update Tax Rate
      description: Update Tax Rate
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRate'
      responses:
        '200':
          $ref: '#/components/responses/UpdateTaxRateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              taxRate: {
                id: '1234',
                name: 'GST on Purchases',
                code: 'ABN',
                description: 'Reduced rate GST Purchases',
                effective_tax_rate: 10,
                total_tax_rate: 10,
                tax_payable_account_id: '123456',
                tax_remitted_account_id: '123456',
                components: [
                  {
                    id: '10',
                    name: 'GST',
                    rate: 10,
                    compound: true
                  }
                ],
                type: 'NONE',
                report_tax_type: 'NONE',
                original_tax_rate_id: '12345',
                status: 'active',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.taxRatesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.taxRates
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.taxRatesDelete
      summary: Delete Tax Rate
      description: Delete Tax Rate
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteTaxRateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.taxRatesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.taxRates
      x-speakeasy-name-override: delete
  /accounting/bills:
    get:
      operationId: accounting.billsAll
      summary: List Bills
      description: List Bills
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/billsFilter'
        - $ref: '#/components/parameters/billsSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetBillsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: clearbooks-uk
          description: Clearbooks does not support setting the pagination size.
        - connector: freshbooks
          description: The Freshbooks Bills api is currently in beta.
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
        - connector: exact-online
          description: |
            Limit parameter for pagination is not supported for this resource.
        - connector: exact-online-nl
          description: |
            Limit parameter for pagination is not supported for this resource.
        - connector: exact-online-uk
          description: |
            Limit parameter for pagination is not supported for this resource.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.bills
      x-speakeasy-name-override: list
    post:
      operationId: accounting.billsAdd
      summary: Create Bill
      description: Create Bill
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '201':
          $ref: '#/components/responses/CreateBillResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: procountor-fi
          description: ''
          Procountor only accepts the following values for the language field: 'EN, FI, SV, ET, NO, and DA.'
          Procountor only accepts the following values for the payment_method field: 'BANK_TRANSFER, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR, DKLMPKRE, NETS.'
          Procountor only accepts the following values for the channel field: 'EMAIL, MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING.'
        - connector: quickbooks
          description: |
            When creating a bill in QuickBooks, each line item must be accompanied by a type designation. If the type is set to "expense_item," an item ID is required. Conversely, if the type is "expense_account," a ledger account ID must be provided.
            Additionally, multicurrency needs to be enabled in your QBO account. If creating a bill in your default currency, you do not need to send the currency value as long as the supplier uses the same currency. For bills with suppliers using a different currency than your default, you must include the currency value, matching the supplier's configured currency. To change the currency of a customer or vendor, a new one must be created with the desired currency. Foreign currencies can only be sent to suppliers configured with that currency.
        - connector: netsuite
          description: |
            For creating or updating a bill in Netsuite, its required to provide the line type.
        - connector: microsoft-dynamics-365-business-central
          description: |
            If you encounter a '400 Bad Request' error indicating "Control 'fieldName' is read-only" it means the 'editable' property for this field in Microsoft Dynamics 365 Business Central is currently set to false. To resolve this issue and make the field writable, simply update the 'editable' property to true in Microsoft Dynamics 365 Business Central.
        - connector: zoho-books
          description: |
            The status of the bill will be "submitted" by default when creating a bill.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              bill: {
                bill_number: '10001',
                supplier: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                },
                company_id: '12345',
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                bill_date: '2020-09-30',
                due_date: '2020-10-30',
                paid_date: '2020-10-30',
                po_number: '90000117',
                reference: '123456',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'expense_account',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    discount_amount: 19.99,
                    location_id: '1234',
                    department_id: '1234',
                    item: {
                      id: '12344',
                      code: '120-C',
                      name: 'Model Y'
                    },
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    row_version: '1-12345'
                  }
                ],
                terms: 'Net 30 days',
                balance: 27500,
                deposit: 0,
                sub_total: 27500,
                total_tax: 2500,
                total: 27500,
                tax_code: '1234',
                notes: 'Some notes about this bill.',
                status: 'draft',
                ledger_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                payment_method: 'cash',
                channel: 'email',
                language: 'EN',
                accounting_by_row: false,
                bank_account: {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                },
                discount_percentage: 5.5,
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ],
                accounting_period: '01-24'
              }
            }

            try {
              const { data } = await apideck.accounting.billsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.bills
      x-speakeasy-name-override: create
  '/accounting/bills/{id}':
    get:
      operationId: accounting.billsOne
      summary: Get Bill
      description: Get Bill
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetBillResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: freshbooks
          description: The Freshbooks Bills api is currently in beta.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.bills
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.billsUpdate
      summary: Update Bill
      description: Update Bill
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '200':
          $ref: '#/components/responses/UpdateBillResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: procountor-fi
          description: ''
          Procountor only accepts the following values for the language field: 'EN, FI, SV, ET, NO, and DA.'
          Procountor only accepts the following values for the payment_method field: 'BANK_TRANSFER, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR, DKLMPKRE, NETS.'
          Procountor only accepts the following values for the channel field: 'EMAIL, MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING.'
        - connector: Quickbooks
          description: Quickbooks requires the supplier.id to be sent in order to make update operations.
        - connector: zoho-books
          description: |
            The allowed values for the status field are "draft", "submitted" and "void" when using the update method.
            Please send status updates separately from other bill updates.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              bill: {
                bill_number: '10001',
                supplier: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                },
                company_id: '12345',
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                bill_date: '2020-09-30',
                due_date: '2020-10-30',
                paid_date: '2020-10-30',
                po_number: '90000117',
                reference: '123456',
                line_items: [
                  {
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'expense_account',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    discount_amount: 19.99,
                    location_id: '1234',
                    department_id: '1234',
                    item: {
                      id: '12344',
                      code: '120-C',
                      name: 'Model Y'
                    },
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    row_version: '1-12345'
                  }
                ],
                terms: 'Net 30 days',
                balance: 27500,
                deposit: 0,
                sub_total: 27500,
                total_tax: 2500,
                total: 27500,
                tax_code: '1234',
                notes: 'Some notes about this bill.',
                status: 'draft',
                ledger_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                payment_method: 'cash',
                channel: 'email',
                language: 'EN',
                accounting_by_row: false,
                bank_account: {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                },
                discount_percentage: 5.5,
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ],
                accounting_period: '01-24'
              }
            }

            try {
              const { data } = await apideck.accounting.billsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.bills
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.billsDelete
      summary: Delete Bill
      description: Delete Bill
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteBillResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: freshbooks
          description: |
            Delete will set the bill to inactive and will soft delete it, meaning it will stop appearing in the list API call. However, it can still be found via the get by id call.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.bills
      x-speakeasy-name-override: delete
  /accounting/invoices:
    get:
      operationId: accounting.invoicesAll
      summary: List Invoices
      description: List Invoices
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/invoicesFilter'
        - $ref: '#/components/parameters/invoicesSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetInvoicesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: clearbooks-uk
          description: Clearbooks does not support setting the pagination size.
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoicesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.invoices
      x-speakeasy-name-override: list
    post:
      operationId: accounting.invoicesAdd
      summary: Create Invoice
      description: Create Invoice
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '201':
          $ref: '#/components/responses/CreateInvoiceResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: quickbooks
          description: Quickbooks offers limited (regional) support for applying discount on a Line Item. Including discount_percentage or discount_amount applies to entire invoice. The default type for a Line Item is a sales item if no type has been provided.
        - connector: procountor-fi
          description: ''
          Procountor only accepts the following values for the language field: 'EN, FI, SV, ET, NO, and DA.'
          Procountor only accepts the following values for the payment_method field: 'BANK_TRANSFER, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR, DKLMPKRE, NETS.'
          Procountor only accepts the following values for the channel field: 'EMAIL, MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING.'
        - connector: microsoft-dynamics-365-business-central
          description: |
            If you encounter a '400 Bad Request' error indicating "Control 'fieldName' is read-only" it means the 'editable' property for this field in Microsoft Dynamics 365 Business Central is currently set to false. To resolve this issue and make the field writable, simply update the 'editable' property to true in Microsoft Dynamics 365 Business Central.
        - connector: freshbooks
          description: |
            The status field can be set to either "submitted", "partially_paid", "paid" or "draft". The due_date and invoice_date fields are required for the invoice to be created.
        - connector: zoho-books
          description: |
            By default, the status of the invoice will be set to "draft".
        - connector: netsuite
          description: Netsuite only supports one tracking category at a time so only the first item in the tracking_categories list will be used.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              invoice: {
                type: 'service',
                number: 'OIT00546',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop',
                  email: 'boring@boring.com'
                },
                company_id: '12345',
                invoice_date: '2020-09-30',
                due_date: '2020-09-30',
                terms: 'Net 30 days',
                po_number: '90000117',
                reference: '123456',
                status: 'draft',
                invoice_sent: true,
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                sub_total: 27500,
                total_tax: 2500,
                tax_code: '1234',
                discount_percentage: 5.5,
                discount_amount: 25,
                total: 27500,
                balance: 27500,
                deposit: 0,
                customer_memo: 'Thank you for your business and have a great day!',
                tracking_category: {
                  id: '123456',
                  name: 'New York'
                },
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                line_items: [
                  {
                    id: '12345',
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    discount_amount: 19.99,
                    location_id: '1234',
                    department_id: '1234',
                    item: {
                      id: '12344',
                      code: '120-C',
                      name: 'Model Y'
                    },
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    custom_fields: [
                      {
                        id: '2389328923893298',
                        name: 'employee_level',
                        description: 'Employee Level',
                        value: 'Uses Salesforce and Marketo'
                      }
                    ],
                    row_version: '1-12345'
                  }
                ],
                billing_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                shipping_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                template_id: '123456',
                source_document_url: 'https://www.invoicesolution.com/invoice/123456',
                payment_method: 'cash',
                channel: 'email',
                language: 'EN',
                accounting_by_row: false,
                bank_account: {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                },
                ledger_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.invoicesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.invoices
      x-speakeasy-name-override: create
  '/accounting/invoices/{id}':
    get:
      operationId: accounting.invoicesOne
      summary: Get Invoice
      description: Get Invoice
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetInvoiceResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoicesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.invoices
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.invoicesUpdate
      summary: Update Invoice
      description: Update Invoice
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
      responses:
        '200':
          $ref: '#/components/responses/UpdateInvoiceResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: quickbooks
          description: |
            Quickbooks offers limited (regional) support for applying discount on a Line Item.  Including discount_percentage or discount_amount applies to entire invoice.  The default type for a Line Item is a sales item if no type has been provided. When setting status to `void`, do not include any other fields in the request body.
        - connector: procountor-fi
          description: ''
          Procountor only accepts the following values for the language field: 'EN, FI, SV, ET, NO, and DA.'
          Procountor only accepts the following values for the payment_method field: 'BANK_TRANSFER, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR, DKLMPKRE, NETS.'
          Procountor only accepts the following values for the channel field: 'EMAIL, MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING.'
        - connector: exact-online
          description: 'To configure the shipping address for invoices, it is recommended to update the customer resource. If there is a need to change this property, modifying the customer information is advised.'
        - connector: xero
          description: 'For updating invoices, there are some limitations. Check out [here](https://developers.apideck.com/connectors/xero/docs/application_owner+oauth_credentials#1-limitations-and-rules-for-updating-xero-invoices)'
        - connector: freshbooks
          description: |
            The status field can be set to either "submitted" or "draft". The other available statuses are set by the Freshbooks API and cannot be updated manually. The due_date and invoice_date fields are required for the due date to be updated.
        - connector: zoho-books
          description: |
            The allowed values for the status field are "draft", "submitted", and "void" when using the update method.
            Please ensure that status updates are sent separately from other invoice updates.
        - connector: netsuite
          description: Netsuite only supports one tracking category at a time so only the first item in the tracking_categories list will be used.
        - connector: sage-business-cloud-accounting
          description: |
            To fetch service items, you must include filter[type]=service in your request parameters
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              invoice: {
                type: 'service',
                number: 'OIT00546',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop',
                  email: 'boring@boring.com'
                },
                company_id: '12345',
                invoice_date: '2020-09-30',
                due_date: '2020-09-30',
                terms: 'Net 30 days',
                po_number: '90000117',
                reference: '123456',
                status: 'draft',
                invoice_sent: true,
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                sub_total: 27500,
                total_tax: 2500,
                tax_code: '1234',
                discount_percentage: 5.5,
                discount_amount: 25,
                total: 27500,
                balance: 27500,
                deposit: 0,
                customer_memo: 'Thank you for your business and have a great day!',
                tracking_category: {
                  id: '123456',
                  name: 'New York'
                },
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                line_items: [
                  {
                    id: '12345',
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    discount_amount: 19.99,
                    location_id: '1234',
                    department_id: '1234',
                    item: {
                      id: '12344',
                      code: '120-C',
                      name: 'Model Y'
                    },
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    custom_fields: [
                      {
                        id: '2389328923893298',
                        name: 'employee_level',
                        description: 'Employee Level',
                        value: 'Uses Salesforce and Marketo'
                      }
                    ],
                    row_version: '1-12345'
                  }
                ],
                billing_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                shipping_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                template_id: '123456',
                source_document_url: 'https://www.invoicesolution.com/invoice/123456',
                payment_method: 'cash',
                channel: 'email',
                language: 'EN',
                accounting_by_row: false,
                bank_account: {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                },
                ledger_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.invoicesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.invoices
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.invoicesDelete
      summary: Delete Invoice
      description: Delete Invoice
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteInvoiceResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: freshbooks
          description: |
            Delete will set the invoice to inactive and will soft delete it, meaning it will stop appearing in the list API call. However, it can still be found via the get by id call.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoicesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.invoices
      x-speakeasy-name-override: delete
  /accounting/ledger-accounts:
    get:
      operationId: accounting.ledgerAccountsAll
      summary: List Ledger Accounts
      description: List Ledger Accounts
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/ledgerAccountsFilter'
        - $ref: '#/components/parameters/ledgerAccountsSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetLedgerAccountsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
        - connector: clearbooks-uk
          description: Clearbooks does not support setting the pagination size.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.ledgerAccountsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.ledgerAccounts
      x-speakeasy-name-override: list
    post:
      operationId: accounting.ledgerAccountsAdd
      summary: Create Ledger Account
      description: Create Ledger Account
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LedgerAccount'
      responses:
        '201':
          $ref: '#/components/responses/CreateLedgerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              ledgerAccount: {
                display_id: '1-12345',
                nominal_code: 'N091',
                code: '453',
                classification: 'asset',
                type: 'bank',
                sub_type: 'CHECKING_ACCOUNT',
                name: 'Bank account',
                fully_qualified_name: 'Asset.Bank.Checking_Account',
                description: 'Main checking account',
                opening_balance: 75000,
                current_balance: 20000,
                currency: 'USD',
                tax_type: 'NONE',
                tax_rate: {
                  id: '123456',
                  rate: 10
                },
                level: 1,
                active: true,
                status: 'active',
                header: true,
                bank_account: {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                },
                parent_account: {
                  id: '12345',
                  name: 'Bank Accounts',
                  display_id: '1-1100'
                },
                sub_account: false,
                last_reconciliation_date: '2020-09-30',
                subsidiaries: [
                  {
                    id: 'string'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.ledgerAccountsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.ledgerAccounts
      x-speakeasy-name-override: create
  '/accounting/ledger-accounts/{id}':
    get:
      operationId: accounting.ledgerAccountsOne
      summary: Get Ledger Account
      description: Get Ledger Account
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetLedgerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.ledgerAccountsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.ledgerAccounts
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.ledgerAccountsUpdate
      summary: Update Ledger Account
      description: Update Ledger Account
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LedgerAccount'
      responses:
        '200':
          $ref: '#/components/responses/UpdateLedgerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: zoho-books
          description: |
            For ledger accounts, please update the "active" status separately from other updates.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              ledgerAccount: {
                display_id: '1-12345',
                nominal_code: 'N091',
                code: '453',
                classification: 'asset',
                type: 'bank',
                sub_type: 'CHECKING_ACCOUNT',
                name: 'Bank account',
                fully_qualified_name: 'Asset.Bank.Checking_Account',
                description: 'Main checking account',
                opening_balance: 75000,
                current_balance: 20000,
                currency: 'USD',
                tax_type: 'NONE',
                tax_rate: {
                  id: '123456',
                  rate: 10
                },
                level: 1,
                active: true,
                status: 'active',
                header: true,
                bank_account: {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                },
                parent_account: {
                  id: '12345',
                  name: 'Bank Accounts',
                  display_id: '1-1100'
                },
                sub_account: false,
                last_reconciliation_date: '2020-09-30',
                subsidiaries: [
                  {
                    id: 'string'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.ledgerAccountsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.ledgerAccounts
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.ledgerAccountsDelete
      summary: Delete Ledger Account
      description: Delete Ledger Account
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteLedgerAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.ledgerAccountsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.ledgerAccounts
      x-speakeasy-name-override: delete
  /accounting/invoice-items:
    get:
      operationId: accounting.invoiceItemsAll
      summary: List Invoice Items
      description: List Invoice Items
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/invoiceItemsFilter'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetInvoiceItemsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoiceItemsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.invoiceItems
      x-speakeasy-name-override: list
    post:
      operationId: accounting.invoiceItemsAdd
      summary: Create Invoice Item
      description: Create Invoice Item
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceItem'
      responses:
        '201':
          $ref: '#/components/responses/CreateInvoiceItemResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: quickbooks
          description: |
            The `taxable` field is applicable to US companies only and should be sent in the request body if your QuickBooks account is in the US region.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              invoiceItem: {
                name: 'Model Y',
                description:
                  'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                code: '120-C',
                sold: true,
                purchased: true,
                tracked: true,
                taxable: true,
                inventory_date: '2020-10-30',
                type: 'inventory',
                sales_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  }
                },
                purchase_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  }
                },
                quantity: 1,
                unit_price: 27500.5,
                asset_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                income_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                expense_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                tracking_category: {
                  id: '123456',
                  name: 'New York'
                },
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                active: true,
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.invoiceItemsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.invoiceItems
      x-speakeasy-name-override: create
  '/accounting/invoice-items/{id}':
    get:
      operationId: accounting.invoiceItemsOne
      summary: Get Invoice Item
      description: Get Invoice Item
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/invoiceItemFilter'
      responses:
        '200':
          $ref: '#/components/responses/GetInvoiceItemResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: sage-business-cloud-accounting
          description: |
            To fetch service items, you must include filter[type]=service in your request parameters
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoiceItemsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.invoiceItems
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.invoiceItemsUpdate
      summary: Update Invoice Item
      description: Update Invoice Item
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceItem'
      responses:
        '200':
          $ref: '#/components/responses/UpdateInvoiceItemResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: quickbooks
          description: |
            The `taxable` field is applicable to US companies only and should be sent in the request body if your QuickBooks account is in the US region.
        - connector: zoho-books
          description: |
            Please ensure that status updates are sent separately from other invoice item updates.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              invoiceItem: {
                name: 'Model Y',
                description:
                  'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                code: '120-C',
                sold: true,
                purchased: true,
                tracked: true,
                taxable: true,
                inventory_date: '2020-10-30',
                type: 'inventory',
                sales_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  }
                },
                purchase_details: {
                  unit_price: 27500.5,
                  unit_of_measure: 'pc.',
                  tax_inclusive: true,
                  tax_rate: {
                    id: '123456',
                    rate: 10
                  }
                },
                quantity: 1,
                unit_price: 27500.5,
                asset_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                income_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                expense_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                tracking_category: {
                  id: '123456',
                  name: 'New York'
                },
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                active: true,
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.invoiceItemsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.invoiceItems
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.invoiceItemsDelete
      summary: Delete Invoice Item
      description: Delete Invoice Item
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteInvoiceItemResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: freshbooks
          description: |
            Delete will set the invoice item to inactive and will soft delete it, meaning it will stop appearing in the list API call. However, it can still be found via the get by id call.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.invoiceItemsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.invoiceItems
      x-speakeasy-name-override: delete
  /accounting/credit-notes:
    get:
      operationId: accounting.creditNotesAll
      summary: List Credit Notes
      description: List Credit Notes
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/creditNotesFilter'
        - $ref: '#/components/parameters/creditNotesSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCreditNotesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: clearbooks-uk
          description: Clearbooks does not support setting the pagination size.
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.creditNotesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.creditNotes
      x-speakeasy-name-override: list
    post:
      operationId: accounting.creditNotesAdd
      summary: Create Credit Note
      description: Create Credit Note
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNote'
      responses:
        '201':
          $ref: '#/components/responses/CreateCreditNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: xero
          description: 'For adding invoice allocations, use the proxy API. [Know more](https://developers.apideck.com/connectors/xero/docs/application_owner+oauth_credentials#2-curl-requests-for-adding-and-removing-allocations-from-xero-credit-note)'
        - connector: zoho-books
          description: |
            By default, the status of the bill will be set to "authorised".
        - connector: netsuite
          description: Netsuite only supports one tracking category at a time so only the first item in the tracking_categories list will be used.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              creditNote: {
                number: 'OIT00546',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop',
                  email: 'boring@boring.com'
                },
                company_id: '12345',
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                sub_total: 27500,
                total_amount: 49.99,
                total_tax: 2500,
                tax_code: '1234',
                balance: 27500,
                remaining_credit: 27500,
                status: 'authorised',
                reference: '123456',
                date_issued: '2021-05-01T12:00:00.000Z',
                date_paid: '2021-05-01T12:00:00.000Z',
                type: 'accounts_receivable_credit',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                line_items: [
                  {
                    id: '12345',
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    discount_amount: 19.99,
                    location_id: '1234',
                    department_id: '1234',
                    item: {
                      id: '12344',
                      code: '120-C',
                      name: 'Model Y'
                    },
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    custom_fields: [
                      {
                        id: '2389328923893298',
                        name: 'employee_level',
                        description: 'Employee Level',
                        value: 'Uses Salesforce and Marketo'
                      }
                    ],
                    row_version: '1-12345'
                  }
                ],
                allocations: [
                  {
                    id: '123456',
                    type: 'invoice',
                    amount: 49.99,
                    allocation_id: '123456'
                  }
                ],
                note: 'Some notes about this credit note',
                terms: 'Some terms about this credit note',
                billing_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                shipping_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.creditNotesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.creditNotes
      x-speakeasy-name-override: create
  '/accounting/credit-notes/{id}':
    get:
      operationId: accounting.creditNotesOne
      summary: Get Credit Note
      description: Get Credit Note
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCreditNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.creditNotesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.creditNotes
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.creditNotesUpdate
      summary: Update Credit Note
      description: Update Credit Note
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditNote'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCreditNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            - Netsuite doesn't support voiding credit notes via API. Options: 1) Remove allocations and delete, or 2) Create a reversing invoice for the same amount.
        - connector: xero
          description: |
            - Authorised Credit Note can only be updated to voided status and cannot be deleted once authorised.
            - Any invoice allocation and payment must be deleted before updating the authorised Credit Note to status voided.
            - To delete payments, use the payment ID from the raw data and delete it using the Delete Payment endpoint.
            - For adding and removing invoice allocations, use the proxy API. [Know more](https://developers.apideck.com/connectors/xero/docs/application_owner+oauth_credentials#2-curl-requests-for-adding-and-removing-allocations-from-xero-credit-note)
        - connector: zoho-books
          description: |
            Allowed values for the status are "draft", "authorised", and "voided" when using the update method.
            Please send status updates separately from other updates for Credit Notes.
        - connector: netsuite
          description: Netsuite only supports one tracking category at a time so only the first item in the tracking_categories list will be used.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              creditNote: {
                number: 'OIT00546',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop',
                  email: 'boring@boring.com'
                },
                company_id: '12345',
                currency: 'USD',
                currency_rate: 0.69,
                tax_inclusive: true,
                sub_total: 27500,
                total_amount: 49.99,
                total_tax: 2500,
                tax_code: '1234',
                balance: 27500,
                remaining_credit: 27500,
                status: 'authorised',
                reference: '123456',
                date_issued: '2021-05-01T12:00:00.000Z',
                date_paid: '2021-05-01T12:00:00.000Z',
                type: 'accounts_receivable_credit',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                line_items: [
                  {
                    id: '12345',
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    discount_amount: 19.99,
                    location_id: '1234',
                    department_id: '1234',
                    item: {
                      id: '12344',
                      code: '120-C',
                      name: 'Model Y'
                    },
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    custom_fields: [
                      {
                        id: '2389328923893298',
                        name: 'employee_level',
                        description: 'Employee Level',
                        value: 'Uses Salesforce and Marketo'
                      }
                    ],
                    row_version: '1-12345'
                  }
                ],
                allocations: [
                  {
                    id: '123456',
                    type: 'invoice',
                    amount: 49.99,
                    allocation_id: '123456'
                  }
                ],
                note: 'Some notes about this credit note',
                terms: 'Some terms about this credit note',
                billing_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                shipping_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.creditNotesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.creditNotes
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.creditNotesDelete
      summary: Delete Credit Note
      description: Delete Credit Note
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteCreditNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: xero
          description: |
            Xero will only allow deleting a Credit Note if it is in draft status.
            Credit notes with "authorised" status cannot be deleted directly. Instead:
            - If the credit note is empty (i.e., has no invoice allocations and payments), its status can be updated to "voided" by update Credit Note endpoint.
            - If the credit note has invoice allocations and payments, these must be removed first. Once all invoice allocations and payments are deleted, the credit note's status can be updated to "Voided" by update Credit Note endpoint.
              [Know more](https://developers.apideck.com/connectors/xero/docs/application_owner+oauth_credentials#2-curl-requests-for-adding-and-removing-allocations-from-xero-credit-note)
        - connector: freshbooks
          description: |
            Delete will set the credit note to inactive and will soft delete it, meaning it will stop appearing in the list API call. However, it can still be found via the get by id call.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.creditNotesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.creditNotes
      x-speakeasy-name-override: delete
  /accounting/customers:
    get:
      operationId: accounting.customersAll
      summary: List Customers
      description: List Customers
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/customersFilter'
        - $ref: '#/components/parameters/customersSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomersResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
        - connector: clearbooks-uk
          description: Clearbooks does not support setting the pagination size.
        - connector: xero
          description: |
            In Xero, contacts are not specifically identified as customers or suppliers until an associated financial document is linked to them. This means that within the customer data response, you will find contacts in two categories: those who have been linked to an invoice and thus are recognized as customers, and those who have no invoices or bills associated, remaining uncategorized. For example, a contact is only considered a Customer if there is an invoice connected to them. Similarly, a contact is recognized as a Supplier only when a bill has been associated with their account.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.customersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.customers
      x-speakeasy-name-override: list
    post:
      operationId: accounting.customersAdd
      summary: Create Customer
      description: Create Customer
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          $ref: '#/components/responses/CreateCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: procountor-fi
          description: ''
          Procountor only accepts the following values for the payment_method field: 'BANK_TRANSFER, DIRECT_DEBIT, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR, DKLMPKRE, NETS.'
          Procountor only accepts the following values for the channel field: 'EMAIL, MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING.'
        - connector: quickbooks
          description: 'QuickBooks supports only billing and shipping addresses. Therefore, when creating addresses, it is required to specify the type as ''billing'' or ''shipping'' in the address object within the addresses array.'
        - connector: freshbooks
          description: |
            Freshbooks API set status to active by default for new customers. To change the status, you can use the Update Customer endpoint.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              customer: {
                display_id: 'EMP00101',
                display_name: 'Windsurf Shop',
                company_name: 'SpaceX',
                company_id: '12345',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                individual: true,
                project: false,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                bank_accounts: [
                  {
                    bank_name: 'Monzo',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    routing_number: '012345678',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    currency: 'USD'
                  }
                ],
                notes: 'Some notes about this customer',
                tax_rate: {
                  id: '123456',
                  rate: 10
                },
                tax_number: 'US123945459',
                currency: 'USD',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                parent: {
                  id: '12345',
                  name: 'Windsurf Shop'
                },
                status: 'active',
                payment_method: 'cash',
                channel: 'email',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.customersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.customers
      x-speakeasy-name-override: create
  '/accounting/customers/{id}':
    get:
      operationId: accounting.customersOne
      summary: Get Customer
      description: Get Customer
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.customersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.customers
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.customersUpdate
      summary: Update Customer
      description: Update Customer
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: procountor-fi
          description: ''
          Procountor only accepts the following values for the payment_method field: 'BANK_TRANSFER, DIRECT_DEBIT, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR, DKLMPKRE, NETS.'
          Procountor only accepts the following values for the channel field: 'EMAIL, MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING.'
        - connector: quickbooks
          description: 'QuickBooks supports only billing and shipping addresses. Therefore, when creating or updating addresses, it is required to specify the type as ''billing'' or ''shipping'' in the address object within the addresses array.'
        - connector: freshbooks
          description: |
            The status field can be updated to either "active" or "archived".
        - connector: zoho-books
          description: |
            The status field can be updated to either "active" or "inactive".
            Please send status updates separately from other updates for the customer.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              customer: {
                display_id: 'EMP00101',
                display_name: 'Windsurf Shop',
                company_name: 'SpaceX',
                company_id: '12345',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                individual: true,
                project: false,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                bank_accounts: [
                  {
                    bank_name: 'Monzo',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    routing_number: '012345678',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    currency: 'USD'
                  }
                ],
                notes: 'Some notes about this customer',
                tax_rate: {
                  id: '123456',
                  rate: 10
                },
                tax_number: 'US123945459',
                currency: 'USD',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                parent: {
                  id: '12345',
                  name: 'Windsurf Shop'
                },
                status: 'active',
                payment_method: 'cash',
                channel: 'email',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.customersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.customers
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.customersDelete
      summary: Delete Customer
      description: Delete Customer
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: freshbooks
          description: |
            Delete will set the customer to inactive and will soft delete it, meaning it will stop appearing in the list API call. However, it can still be found via the get by id call.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.customersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.customers
      x-speakeasy-name-override: delete
  /accounting/suppliers:
    get:
      operationId: accounting.suppliersAll
      summary: List Suppliers
      description: List Suppliers
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/suppliersFilter'
        - $ref: '#/components/parameters/suppliersSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetSuppliersResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: clearbooks-uk
          description: Clearbooks does not support setting the pagination size.
        - connector: procountor-fi
          description: |
            Procountor only accepts the following values for the payment_method field: BANK_TRANSFER, DIRECT_DEBIT, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR, DKLMPKRE, NETS.
            Procountor only accepts the following values for the channel field: EMAIL, MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING.
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
        - connector: xero
          description: |
            In Xero, contacts are not specifically identified as customers or suppliers until an associated financial document is linked to them. This means that within the customer data response, you will find contacts in two categories: those who have been linked to an invoice and thus are recognized as customers, and those who have no invoices or bills associated, remaining uncategorized. For example, a contact is only considered a Customer if there is an invoice connected to them. Similarly, a contact is recognized as a Supplier only when a bill has been associated with their account.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.suppliersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.suppliers
      x-speakeasy-name-override: list
    post:
      operationId: accounting.suppliersAdd
      summary: Create Supplier
      description: Create Supplier
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '201':
          $ref: '#/components/responses/CreateSupplierResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: quickbooks
          description: 'QuickBooks only supports a single billing address. Therefore, the first item in the addresses array will always be mapped as the billing address, regardless of its original type.'
        - connector: microsoft-dynamics-365-business-central
          description: |
            If you encounter a '400 Bad Request' error indicating "Control 'fieldName' is read-only" it means the 'editable' property for this field in Microsoft Dynamics 365 Business Central is currently set to false. To resolve this issue and make the field writable, simply update the 'editable' property to true in Microsoft Dynamics 365 Business Central.
        - connector: freshbooks
          description: |
            Freshbooks API set status to active by default for new suppliers. To change the status, you can use the Update Supplier endpoint.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              supplier: {
                display_id: 'EMP00101',
                display_name: 'Windsurf Shop',
                company_name: 'SpaceX',
                company_id: '12345',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                individual: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                bank_accounts: [
                  {
                    bank_name: 'Monzo',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    routing_number: '012345678',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    currency: 'USD'
                  }
                ],
                notes: 'Some notes about this supplier',
                tax_rate: {
                  id: '123456',
                  rate: 10
                },
                tax_number: 'US123945459',
                currency: 'USD',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                status: 'active',
                payment_method: 'cash',
                channel: 'email',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.suppliersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.suppliers
      x-speakeasy-name-override: create
  '/accounting/suppliers/{id}':
    get:
      operationId: accounting.suppliersOne
      summary: Get Supplier
      description: Get Supplier
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetSupplierResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.suppliersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.suppliers
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.suppliersUpdate
      summary: Update Supplier
      description: Update Supplier
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '200':
          $ref: '#/components/responses/UpdateSupplierResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: procountor-fi
          description: ''
          Procountor only accepts the following values for the payment_method field: 'BANK_TRANSFER, DIRECT_DEBIT, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR, DKLMPKRE, NETS.'
          Procountor only accepts the following values for the channel field: 'EMAIL, MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING.'
        - connector: quickbooks
          description: 'QuickBooks only supports a single billing address. Therefore, the first item in the addresses array will always be mapped as the billing address, regardless of its original type.'
        - connector: freshbooks
          description: |
            The status field can be updated to either "active" or "archived".
        - connector: zoho-books
          description: |
            The status field can be updated to either "active" or "inactive".
            Please send status updates separately from other updates for the supplier.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              supplier: {
                display_id: 'EMP00101',
                display_name: 'Windsurf Shop',
                company_name: 'SpaceX',
                company_id: '12345',
                title: 'CEO',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                suffix: 'Jr.',
                individual: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                bank_accounts: [
                  {
                    bank_name: 'Monzo',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    routing_number: '012345678',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    currency: 'USD'
                  }
                ],
                notes: 'Some notes about this supplier',
                tax_rate: {
                  id: '123456',
                  rate: 10
                },
                tax_number: 'US123945459',
                currency: 'USD',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                status: 'active',
                payment_method: 'cash',
                channel: 'email',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.suppliersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.suppliers
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.suppliersDelete
      summary: Delete Supplier
      description: Delete Supplier
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteSupplierResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: freshbooks
          description: |
            Delete will set the supplier to inactive and will soft delete it, meaning it will stop appearing in the list API call.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.suppliersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.suppliers
      x-speakeasy-name-override: delete
  /accounting/payments:
    get:
      operationId: accounting.paymentsAll
      summary: List Payments
      description: List Payments
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/paymentsFilter'
        - $ref: '#/components/parameters/paymentsSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetPaymentsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
        - connector: kashflow
          description: 'Kashflow only allows to retrieve payments by invoice, so in order to use this endpoint the filter[invoice_number] parameter is required.'
        - connector: exact-online
          description: |
            Limit parameter for pagination is not supported for this resource.
        - connector: exact-online-nl
          description: |
            Limit parameter for pagination is not supported for this resource.
        - connector: exact-online-uk
          description: |
            Limit parameter for pagination is not supported for this resource.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.paymentsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.payments
      x-speakeasy-name-override: list
    post:
      operationId: accounting.paymentsAdd
      summary: Create Payment
      description: Create Payment
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '201':
          $ref: '#/components/responses/CreatePaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            The number property could be used to override the Netsuite tranId property.
        - connector: xero
          description: |
            Xero supports creating payments against multiple allocation types in a single request. However, the response will provide the ID of the first payment only. To access all payment IDs, inspect the raw data.
        - connector: quickbooks
          description: |
            Payment allocations in QuickBooks are processed asynchronously. While the allocations are included in the request, they may not appear in the immediate response. The allocations will be applied and become visible in subsequent list or get calls.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              payment: {
                currency: 'USD',
                currency_rate: 0.69,
                total_amount: 49.99,
                reference: '123456',
                payment_method: 'cash',
                payment_method_reference: '123456',
                payment_method_id: '12345',
                accounts_receivable_account_type: 'Account',
                accounts_receivable_account_id: '123456',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                transaction_date: '2021-05-01T12:00:00.000Z',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop',
                  email: 'boring@boring.com'
                },
                supplier: {
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                },
                company_id: '12345',
                reconciled: true,
                status: 'authorised',
                type: 'accounts_receivable',
                allocations: [
                  {
                    id: '123456',
                    type: 'invoice',
                    amount: 49.99,
                    allocation_id: '123456'
                  }
                ],
                note: 'Some notes about this transaction',
                number: '123456',
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                row_version: '1-12345',
                display_id: '123456',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.paymentsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.payments
      x-speakeasy-name-override: create
  '/accounting/payments/{id}':
    get:
      operationId: accounting.paymentsOne
      summary: Get Payment
      description: Get Payment
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetPaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.paymentsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.payments
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.paymentsUpdate
      summary: Update Payment
      description: Update Payment
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '200':
          $ref: '#/components/responses/UpdatePaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: xero
          description: |
            Xero doesn't support updating payments. To update a payment, you need to delete the existing payment and create a new one.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              payment: {
                currency: 'USD',
                currency_rate: 0.69,
                total_amount: 49.99,
                reference: '123456',
                payment_method: 'cash',
                payment_method_reference: '123456',
                payment_method_id: '12345',
                accounts_receivable_account_type: 'Account',
                accounts_receivable_account_id: '123456',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                transaction_date: '2021-05-01T12:00:00.000Z',
                customer: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  name: 'Windsurf Shop',
                  email: 'boring@boring.com'
                },
                supplier: {
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                },
                company_id: '12345',
                reconciled: true,
                status: 'authorised',
                type: 'accounts_receivable',
                allocations: [
                  {
                    id: '123456',
                    type: 'invoice',
                    amount: 49.99,
                    allocation_id: '123456'
                  }
                ],
                note: 'Some notes about this transaction',
                number: '123456',
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                row_version: '1-12345',
                display_id: '123456',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.paymentsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.payments
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.paymentsDelete
      summary: Delete Payment
      description: Delete Payment
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeletePaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: freshbooks
          description: |
            Delete will set the payment to inactive and will soft delete it, meaning it will stop appearing in the list API call. However, it can still be found via the get by id call.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.paymentsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.payments
      x-speakeasy-name-override: delete
  /accounting/company-info:
    get:
      operationId: accounting.companyInfoOne
      summary: Get company info
      description: Get company info
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCompanyInfoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.companyInfoOne({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.companyInfo
      x-speakeasy-name-override: get
  /accounting/balance-sheet:
    get:
      operationId: accounting.balanceSheetOne
      summary: Get BalanceSheet
      description: Get BalanceSheet
      parameters:
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/balanceSheetFilter'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/GetBalanceSheetResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: quickbooks
          description: 'When using start and end date filters, QuickBooks requires both to be sent. However, the report only reflects the balance sheet situation as of the end date.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.balanceSheetOne({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.balanceSheet
      x-speakeasy-name-override: get
  /accounting/profit-and-loss:
    get:
      operationId: accounting.profitAndLossOne
      summary: Get Profit and Loss
      description: Get Profit and Loss
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/profitAndLossFilter'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetProfitAndLossResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.profitAndLossOne({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.profitAndLoss
      x-speakeasy-name-override: get
  /accounting/journal-entries:
    get:
      operationId: accounting.journalEntriesAll
      summary: List Journal Entries
      description: List Journal Entries
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/journalEntriesFilter'
        - $ref: '#/components/parameters/journalEntriesSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetJournalEntriesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
        - connector: xero
          description: 'Xero will return 100 items for each call, so the limit parameter is ignored.'
        - connector: exact-online
          description: |
            Limit parameter for pagination is not supported for this resource.
        - connector: exact-online-nl
          description: |
            Limit parameter for pagination is not supported for this resource.
        - connector: exact-online-uk
          description: |
            Limit parameter for pagination is not supported for this resource.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.journalEntriesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.journalEntries
      x-speakeasy-name-override: list
    post:
      operationId: accounting.journalEntriesAdd
      summary: Create Journal Entry
      description: Create Journal Entry
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntry'
      responses:
        '201':
          $ref: '#/components/responses/CreateJournalEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: procountor-fi
          description: |
            Procountor only accepts the following values for the tax_code field: SALES, PURCHASE.
        - connector: xero
          description: 'When creating journal entries, the returned ID is collected from Xero with a maximum of 100 new journal items per day. If more than 100 journal entries are created in a single day, the id returned will be of the manual journal.'
        - connector: netsuite
          description: Netsuite only supports one tracking category at a time so only the first item in the tracking_categories list will be used.
        - connector: mrisoftware
          description: |
            MRI Software does not provide a proper ID for journal line items. Instead, each journal line item is identified by a combination of GLREFERENCE, PERIOD, and ITEM. These fields are mapped to unify with the properties number, accounting_period, and line_number, respectively. Additionally, MRI Software requires a GLSOURCE field, which is not supported by Unify. Therefore, it will be sent statically as "GL" (General Ledger).
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              journalEntry: {
                title: 'Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry',
                currency_rate: 0.69,
                currency: 'USD',
                company_id: '12345',
                line_items: [
                  {
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    tax_amount: 27500,
                    sub_total: 27500,
                    total_amount: 27500,
                    type: 'debit',
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    tracking_category: {
                      id: '123456',
                      name: 'New York'
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    customer: {
                      id: '12345',
                      display_name: 'Windsurf Shop',
                      name: 'Windsurf Shop',
                      email: 'boring@boring.com'
                    },
                    supplier: {
                      id: '12345',
                      display_name: 'Windsurf Shop',
                      address: {
                        id: '123',
                        type: 'primary',
                        string: '25 Spring Street, Blackburn, VIC 3130',
                        name: 'HQ US',
                        line1: 'Main street',
                        line2: 'apt #',
                        line3: 'Suite #',
                        line4: 'delivery instructions',
                        street_number: '25',
                        city: 'San Francisco',
                        state: 'CA',
                        postal_code: '94104',
                        country: 'US',
                        latitude: '40.759211',
                        longitude: '-73.984638',
                        county: 'Santa Clara',
                        contact_name: 'Elon Musk',
                        salutation: 'Mr',
                        phone_number: '111-111-1111',
                        fax: '122-111-1111',
                        email: 'elon@musk.com',
                        website: 'https://elonmusk.com',
                        notes: 'Address notes or delivery instructions.',
                        row_version: '1-12345'
                      }
                    },
                    line_number: 1
                  },
                  {
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    tax_amount: 27500,
                    sub_total: 27500,
                    total_amount: 27500,
                    type: 'debit',
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    tracking_category: {
                      id: '123456',
                      name: 'New York'
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    customer: {
                      id: '12345',
                      display_name: 'Windsurf Shop',
                      name: 'Windsurf Shop',
                      email: 'boring@boring.com'
                    },
                    supplier: {
                      id: '12345',
                      display_name: 'Windsurf Shop',
                      address: {
                        id: '123',
                        type: 'primary',
                        string: '25 Spring Street, Blackburn, VIC 3130',
                        name: 'HQ US',
                        line1: 'Main street',
                        line2: 'apt #',
                        line3: 'Suite #',
                        line4: 'delivery instructions',
                        street_number: '25',
                        city: 'San Francisco',
                        state: 'CA',
                        postal_code: '94104',
                        country: 'US',
                        latitude: '40.759211',
                        longitude: '-73.984638',
                        county: 'Santa Clara',
                        contact_name: 'Elon Musk',
                        salutation: 'Mr',
                        phone_number: '111-111-1111',
                        fax: '122-111-1111',
                        email: 'elon@musk.com',
                        website: 'https://elonmusk.com',
                        notes: 'Address notes or delivery instructions.',
                        row_version: '1-12345'
                      }
                    },
                    line_number: 1
                  }
                ],
                memo: 'Thank you for your business and have a great day!',
                posted_at: '2020-09-30T07:43:32.000Z',
                journal_symbol: 'IND',
                tax_type: 'sales',
                tax_code: '1234',
                number: 'OIT00546',
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                accounting_period: '01-24',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.journalEntriesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.journalEntries
      x-speakeasy-name-override: create
  '/accounting/journal-entries/{id}':
    get:
      operationId: accounting.journalEntriesOne
      summary: Get Journal Entry
      description: Get Journal Entry
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetJournalEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.journalEntriesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.journalEntries
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.journalEntriesUpdate
      summary: Update Journal Entry
      description: Update Journal Entry
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntry'
      responses:
        '200':
          $ref: '#/components/responses/UpdateJournalEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: procountor-fi
          description: |
            Procountor only accepts the following values for the tax_code field: SALES, PURCHASE.
            Procountor requires row_version to be set when updating a journal entry. The row_version should be equivalent to the current row_version of the resource
        - connector: netsuite
          description: Netsuite only supports one tracking category at a time so only the first item in the tracking_categories list will be used.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              journalEntry: {
                title: 'Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry',
                currency_rate: 0.69,
                currency: 'USD',
                company_id: '12345',
                line_items: [
                  {
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    tax_amount: 27500,
                    sub_total: 27500,
                    total_amount: 27500,
                    type: 'debit',
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    tracking_category: {
                      id: '123456',
                      name: 'New York'
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    customer: {
                      id: '12345',
                      display_name: 'Windsurf Shop',
                      name: 'Windsurf Shop',
                      email: 'boring@boring.com'
                    },
                    supplier: {
                      id: '12345',
                      display_name: 'Windsurf Shop',
                      address: {
                        id: '123',
                        type: 'primary',
                        string: '25 Spring Street, Blackburn, VIC 3130',
                        name: 'HQ US',
                        line1: 'Main street',
                        line2: 'apt #',
                        line3: 'Suite #',
                        line4: 'delivery instructions',
                        street_number: '25',
                        city: 'San Francisco',
                        state: 'CA',
                        postal_code: '94104',
                        country: 'US',
                        latitude: '40.759211',
                        longitude: '-73.984638',
                        county: 'Santa Clara',
                        contact_name: 'Elon Musk',
                        salutation: 'Mr',
                        phone_number: '111-111-1111',
                        fax: '122-111-1111',
                        email: 'elon@musk.com',
                        website: 'https://elonmusk.com',
                        notes: 'Address notes or delivery instructions.',
                        row_version: '1-12345'
                      }
                    },
                    line_number: 1
                  },
                  {
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    tax_amount: 27500,
                    sub_total: 27500,
                    total_amount: 27500,
                    type: 'debit',
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    tracking_category: {
                      id: '123456',
                      name: 'New York'
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    customer: {
                      id: '12345',
                      display_name: 'Windsurf Shop',
                      name: 'Windsurf Shop',
                      email: 'boring@boring.com'
                    },
                    supplier: {
                      id: '12345',
                      display_name: 'Windsurf Shop',
                      address: {
                        id: '123',
                        type: 'primary',
                        string: '25 Spring Street, Blackburn, VIC 3130',
                        name: 'HQ US',
                        line1: 'Main street',
                        line2: 'apt #',
                        line3: 'Suite #',
                        line4: 'delivery instructions',
                        street_number: '25',
                        city: 'San Francisco',
                        state: 'CA',
                        postal_code: '94104',
                        country: 'US',
                        latitude: '40.759211',
                        longitude: '-73.984638',
                        county: 'Santa Clara',
                        contact_name: 'Elon Musk',
                        salutation: 'Mr',
                        phone_number: '111-111-1111',
                        fax: '122-111-1111',
                        email: 'elon@musk.com',
                        website: 'https://elonmusk.com',
                        notes: 'Address notes or delivery instructions.',
                        row_version: '1-12345'
                      }
                    },
                    line_number: 1
                  }
                ],
                memo: 'Thank you for your business and have a great day!',
                posted_at: '2020-09-30T07:43:32.000Z',
                journal_symbol: 'IND',
                tax_type: 'sales',
                tax_code: '1234',
                number: 'OIT00546',
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                accounting_period: '01-24',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.journalEntriesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.journalEntries
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.journalEntriesDelete
      summary: Delete Journal Entry
      description: Delete Journal Entry
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteJournalEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.journalEntriesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.journalEntries
      x-speakeasy-name-override: delete
  /accounting/purchase-orders:
    get:
      operationId: accounting.purchaseOrdersAll
      summary: List Purchase Orders
      description: List Purchase Orders
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/purchaseOrdersFilter'
        - $ref: '#/components/parameters/purchaseOrdersSort'
      responses:
        '200':
          $ref: '#/components/responses/GetPurchaseOrdersResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.purchaseOrdersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.purchaseOrders
      x-speakeasy-name-override: list
    post:
      operationId: accounting.purchaseOrdersAdd
      summary: Create Purchase Order
      description: Create Purchase Order
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
      responses:
        '201':
          $ref: '#/components/responses/CreatePurchaseOrderResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: xero
          description: "Xero accepts a shipping address as a string instead of separate fields. Ie: `23 Main Street\r\nCentral City\r\nMarineville\r\n1234\r\n`"
        - connector: procountor-fi
          description: |
            Procountor only accepts the following values for the payment_method field: BANK_TRANSFER, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR, DKLMPKRE, NETS. 
            Procountor only accepts the following values for the channel field: EMAIL, MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING.
        - connector: microsoft-dynamics-365-business-central
          description: |
            If you encounter a '400 Bad Request' error indicating "Control 'fieldName' is read-only" it means the 'editable' property for this field in Microsoft Dynamics 365 Business Central is currently set to false. To resolve this issue and make the field writable, simply update the 'editable' property to true in Microsoft Dynamics 365 Business Central.
        - connector: zoho-books
          description: |
            By default, the status of the purchase order will be set to "draft".
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              purchaseOrder: {
                po_number: '90000117',
                reference: '123456',
                supplier: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                },
                company_id: '12345',
                status: 'open',
                issued_date: '2020-09-30',
                delivery_date: '2020-09-30',
                expected_arrival_date: '2020-09-30',
                currency: 'USD',
                currency_rate: 0.69,
                sub_total: 27500,
                total_tax: 2500,
                total: 27500,
                tax_inclusive: true,
                line_items: [
                  {
                    id: '12345',
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    discount_amount: 19.99,
                    location_id: '1234',
                    department_id: '1234',
                    item: {
                      id: '12344',
                      code: '120-C',
                      name: 'Model Y'
                    },
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    custom_fields: [
                      {
                        id: '2389328923893298',
                        name: 'employee_level',
                        description: 'Employee Level',
                        value: 'Uses Salesforce and Marketo'
                      }
                    ],
                    row_version: '1-12345'
                  }
                ],
                shipping_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                ledger_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                template_id: '123456',
                discount_percentage: 5.5,
                bank_account: {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                },
                accounting_by_row: false,
                due_date: '2020-10-30',
                payment_method: 'cash',
                tax_code: '1234',
                channel: 'email',
                memo: 'Thank you for the partnership and have a great day!',
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.purchaseOrdersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.purchaseOrders
      x-speakeasy-name-override: create
  '/accounting/purchase-orders/{id}':
    get:
      operationId: accounting.purchaseOrdersOne
      summary: Get Purchase Order
      description: Get Purchase Order
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/GetPurchaseOrderResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.purchaseOrdersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.purchaseOrders
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.purchaseOrdersUpdate
      summary: Update Purchase Order
      description: Update Purchase Order
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrder'
      responses:
        '200':
          $ref: '#/components/responses/UpdatePurchaseOrderResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: xero
          description: "Xero accepts a shipping address as a string instead of separate fields. Ie: `23 Main Street\r\nCentral City\r\nMarineville\r\n1234\r\n`"
        - connector: procountor-fi
          description: ''
          Procountor only accepts the following values for the payment_method field: 'BANK_TRANSFER, DIRECT_PAYMENT, CLEARING, CREDIT_CARD_CHARGE, FOREIGN_PAYMENT, OTHER, CASH, DOMESTIC_PAYMENT_PLUSGIRO, DOMESTIC_PAYMENT_BANKGIRO, DOMESTIC_PAYMENT_CREDITOR, DKLMPKRE, NETS.'
          Procountor only accepts the following values for the channel field: 'EMAIL, MAIL, ELECTRONIC_INVOICE, EDIFACT, PAPER_INVOICE, NO_SENDING.'
        - connector: zoho-books
          description: |
            Allowed values for the status are "draft", "open", "billed" and "deleted" when using the update method.
            Please send status updates separately from other updates for the supplier.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              purchaseOrder: {
                po_number: '90000117',
                reference: '123456',
                supplier: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                },
                company_id: '12345',
                status: 'open',
                issued_date: '2020-09-30',
                delivery_date: '2020-09-30',
                expected_arrival_date: '2020-09-30',
                currency: 'USD',
                currency_rate: 0.69,
                sub_total: 27500,
                total_tax: 2500,
                total: 27500,
                tax_inclusive: true,
                line_items: [
                  {
                    id: '12345',
                    row_id: '12345',
                    code: '120-C',
                    line_number: 1,
                    description:
                      'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.',
                    type: 'sales_item',
                    tax_amount: 27500,
                    total_amount: 27500,
                    quantity: 1,
                    unit_price: 27500.5,
                    unit_of_measure: 'pc.',
                    discount_percentage: 0.01,
                    discount_amount: 19.99,
                    location_id: '1234',
                    department_id: '1234',
                    item: {
                      id: '12344',
                      code: '120-C',
                      name: 'Model Y'
                    },
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    ledger_account: {
                      id: '123456',
                      nominal_code: 'N091',
                      code: '453'
                    },
                    custom_fields: [
                      {
                        id: '2389328923893298',
                        name: 'employee_level',
                        description: 'Employee Level',
                        value: 'Uses Salesforce and Marketo'
                      }
                    ],
                    row_version: '1-12345'
                  }
                ],
                shipping_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                ledger_account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                template_id: '123456',
                discount_percentage: 5.5,
                bank_account: {
                  bank_name: 'Monzo',
                  account_number: '123465',
                  account_name: 'SPACEX LLC',
                  account_type: 'credit_card',
                  iban: 'CH2989144532982975332',
                  bic: 'AUDSCHGGXXX',
                  routing_number: '012345678',
                  bsb_number: '062-001',
                  branch_identifier: '001',
                  bank_code: 'BNH',
                  currency: 'USD'
                },
                accounting_by_row: false,
                due_date: '2020-10-30',
                payment_method: 'cash',
                tax_code: '1234',
                channel: 'email',
                memo: 'Thank you for the partnership and have a great day!',
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.purchaseOrdersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.purchaseOrders
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.purchaseOrdersDelete
      summary: Delete Purchase Order
      description: Delete Purchase Order
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeletePurchaseOrderResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.purchaseOrdersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.purchaseOrders
      x-speakeasy-name-override: delete
  /accounting/subsidiaries:
    get:
      operationId: accounting.subsidiariesAll
      summary: List Subsidiaries
      description: List Subsidiaries
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetSubsidiariesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.subsidiariesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.subsidiaries
      x-speakeasy-name-override: list
    post:
      operationId: accounting.subsidiariesAdd
      summary: Create Subsidiary
      description: Create Subsidiary
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subsidiary'
      responses:
        '201':
          $ref: '#/components/responses/CreateSubsidiaryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas: null
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              subsidiary: {
                parent_id: '12345',
                name: 'SpaceX',
                status: 'active',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.subsidiariesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.subsidiaries
      x-speakeasy-name-override: create
  '/accounting/subsidiaries/{id}':
    get:
      operationId: accounting.subsidiariesOne
      summary: Get Subsidiary
      description: Get Subsidiary
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetSubsidiaryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.subsidiariesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.subsidiaries
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.subsidiariesUpdate
      summary: Update Subsidiary
      description: Update Subsidiary
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subsidiary'
      responses:
        '200':
          $ref: '#/components/responses/UpdateSubsidiaryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas: null
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              subsidiary: {
                parent_id: '12345',
                name: 'SpaceX',
                status: 'active',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.subsidiariesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.subsidiaries
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.subsidiariesDelete
      summary: Delete Subsidiary
      description: Delete Subsidiary
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteSubsidiaryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.subsidiariesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.subsidiaries
      x-speakeasy-name-override: delete
  /accounting/locations:
    get:
      operationId: accounting.locationsAll
      summary: List Locations
      description: List Locations
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/accountingLocationsFilter'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountingLocationsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.locationsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.locations
      x-speakeasy-name-override: list
    post:
      operationId: accounting.locationsAdd
      summary: Create Location
      description: Create Location
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountingLocation'
      responses:
        '201':
          $ref: '#/components/responses/CreateAccountingLocationResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas: null
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              location: {
                parent_id: '12345',
                company_name: 'SpaceX',
                display_name: '11 UT - South Jordan',
                status: 'active',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                subsidiaries: [
                  {
                    name: 'SpaceX'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.locationsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.locations
      x-speakeasy-name-override: create
  '/accounting/locations/{id}':
    get:
      operationId: accounting.locationsOne
      summary: Get Location
      description: Get Location
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountingLocationResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.locationsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.locations
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.locationsUpdate
      summary: Update Location
      description: Update Location
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountingLocation'
      responses:
        '200':
          $ref: '#/components/responses/UpdateAccountingLocationResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas: null
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              location: {
                parent_id: '12345',
                company_name: 'SpaceX',
                display_name: '11 UT - South Jordan',
                status: 'active',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                subsidiaries: [
                  {
                    name: 'SpaceX'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.locationsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.locations
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.locationsDelete
      summary: Delete Location
      description: Delete Location
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteAccountingLocationResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.locationsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.locations
      x-speakeasy-name-override: delete
  /accounting/departments:
    get:
      operationId: accounting.departmentsAll
      summary: List Departments
      description: List Departments
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/accountingDepartmentsFilter'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountingDepartmentsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: netsuite
          description: |
            The minimun page size accepted for Netsuite is 5. The cursor for Netsuite expires if they have not been used within 15 minutes after its creation.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.departmentsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.departments
      x-speakeasy-name-override: list
    post:
      operationId: accounting.departmentsAdd
      summary: Create Department
      description: Create Department
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountingDepartment'
      responses:
        '201':
          $ref: '#/components/responses/CreateAccountingDepartmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas: null
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              department: {
                parent_id: '12345',
                name: 'Sales',
                status: 'active',
                subsidiaries: [
                  {
                    name: 'SpaceX'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.departmentsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.departments
      x-speakeasy-name-override: create
  '/accounting/departments/{id}':
    get:
      operationId: accounting.departmentsOne
      summary: Get Department
      description: Get Department
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetAccountingDepartmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.departmentsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.departments
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.departmentsUpdate
      summary: Update Department
      description: Update Department
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountingDepartment'
      responses:
        '200':
          $ref: '#/components/responses/UpdateAccountingDepartmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas: null
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              department: {
                parent_id: '12345',
                name: 'Sales',
                status: 'active',
                subsidiaries: [
                  {
                    name: 'SpaceX'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.departmentsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.departments
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.departmentsDelete
      summary: Delete Department
      description: Delete Department
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteAccountingDepartmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.departmentsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.departments
      x-speakeasy-name-override: delete
  '/accounting/attachments/{reference_type}/{reference_id}':
    get:
      operationId: accounting.attachmentsAll
      summary: List Attachments
      description: List Attachments
      parameters:
        - $ref: '#/components/parameters/referenceType'
        - $ref: '#/components/parameters/referenceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetAttachmentsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              referenceType: 'invoice',
              referenceId: '123456'
            }

            try {
              const { data } = await apideck.accounting.attachmentsAll(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.attachments
      x-speakeasy-name-override: list
  '/accounting/attachments/{reference_type}/{reference_id}/{id}':
    get:
      operationId: accounting.attachmentsOne
      summary: Get Attachment
      description: Get Attachment
      parameters:
        - $ref: '#/components/parameters/referenceType'
        - $ref: '#/components/parameters/referenceId'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetAttachmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              referenceType: 'invoice',
              referenceId: '123456',
              id: 'id_example'
            }

            try {
              const { data } = await apideck.accounting.attachmentsOne(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.attachments
      x-speakeasy-name-override: get
    delete:
      operationId: accounting.attachmentsDelete
      summary: Delete Attachment
      description: Delete Attachment
      parameters:
        - $ref: '#/components/parameters/referenceType'
        - $ref: '#/components/parameters/referenceId'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteAttachmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              referenceType: 'invoice',
              referenceId: '123456',
              id: 'id_example'
            }

            try {
              const { data } = await apideck.accounting.attachmentsDelete(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.attachments
      x-speakeasy-name-override: delete
  '/accounting/attachments/{reference_type}/{reference_id}/{id}/download':
    get:
      operationId: accounting.attachmentsDownload
      summary: Download Attachment
      description: Download Attachment
      parameters:
        - $ref: '#/components/parameters/referenceType'
        - $ref: '#/components/parameters/referenceId'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetAttachmentDownloadResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              referenceType: 'invoice',
              referenceId: '123456',
              id: 'id_example'
            }

            try {
              const { data } = await apideck.accounting.attachmentsDownload(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.attachments
      x-speakeasy-name-override: download
  /accounting/tracking-categories:
    get:
      operationId: accounting.trackingCategoriesAll
      summary: List Tracking Categories
      description: List Tracking Categories
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetTrackingCategoriesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: sage-intacct
          description: The Parent ID field refers to the parent tracking category code.
        - connector: xero
          description: 'Returns tracking category options only. IDs and names are concatenated as "CategoryName - OptionName". The provided ID can be used to link to the correct tracking category to invoices, bills, etc.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.trackingCategoriesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.trackingCategories
      x-speakeasy-name-override: list
    post:
      operationId: accounting.trackingCategoriesAdd
      summary: Create Tracking Category
      description: Create Tracking Category
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingCategory'
      responses:
        '201':
          $ref: '#/components/responses/CreateTrackingCategoryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: sage-intacct
          description: When creating a category with parent ID please use the tracking category code.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              trackingCategory: {
                parent_id: '12345',
                name: 'Department',
                code: '100',
                status: 'active',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.trackingCategoriesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.trackingCategories
      x-speakeasy-name-override: create
  '/accounting/tracking-categories/{id}':
    get:
      operationId: accounting.trackingCategoriesOne
      summary: Get Tracking Category
      description: Get Tracking Category
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetTrackingCategoryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: sage-intacct
          description: The Parent ID field refers to the parent tracking category code.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.trackingCategoriesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.trackingCategories
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.trackingCategoriesUpdate
      summary: Update Tracking Category
      description: Update Tracking Category
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackingCategory'
      responses:
        '200':
          $ref: '#/components/responses/UpdateTrackingCategoryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: sage-intacct
          description: When updating the Parent ID field please use the tracking category code.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              trackingCategory: {
                parent_id: '12345',
                name: 'Department',
                code: '100',
                status: 'active',
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.trackingCategoriesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.trackingCategories
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.trackingCategoriesDelete
      summary: Delete Tracking Category
      description: Delete Tracking Category
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteTrackingCategoryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.trackingCategoriesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.trackingCategories
      x-speakeasy-name-override: delete
  /accounting/bill-payments:
    get:
      operationId: accounting.billPaymentsAll
      summary: List Bill Payments
      description: List Bill Payments
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/paymentsFilter'
        - $ref: '#/components/parameters/paymentsSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetBillPaymentsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billPaymentsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.billPayments
      x-speakeasy-name-override: list
    post:
      operationId: accounting.billPaymentsAdd
      summary: Create Bill Payment
      description: Create Bill Payment
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillPayment'
      responses:
        '201':
          $ref: '#/components/responses/CreateBillPaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: quickbooks
          description: |
            Payment method is required and must be `Check` or `CreditCard`.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              billPayment: {
                currency: 'USD',
                currency_rate: 0.69,
                total_amount: 49.99,
                reference: '123456',
                payment_method: 'cash',
                payment_method_reference: '123456',
                payment_method_id: '12345',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                transaction_date: '2021-05-01T12:00:00.000Z',
                supplier: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                },
                company_id: '12345',
                reconciled: true,
                status: 'authorised',
                type: 'accounts_payable',
                allocations: [
                  {
                    id: '12345',
                    type: 'bill',
                    amount: 49.99,
                    allocation_id: '123456'
                  }
                ],
                note: 'Some notes about this transaction',
                number: '123456',
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                row_version: '1-12345',
                display_id: '123456',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.billPaymentsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.billPayments
      x-speakeasy-name-override: create
  '/accounting/bill-payments/{id}':
    get:
      operationId: accounting.billPaymentsOne
      summary: Get Bill Payment
      description: Get Bill Payment
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetBillPaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billPaymentsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.billPayments
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.billPaymentsUpdate
      summary: Update Bill Payment
      description: Update Bill Payment
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillPayment'
      responses:
        '200':
          $ref: '#/components/responses/UpdateBillPaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: freshbooks
          description: |
            The `transaction_date` field is required.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              billPayment: {
                currency: 'USD',
                currency_rate: 0.69,
                total_amount: 49.99,
                reference: '123456',
                payment_method: 'cash',
                payment_method_reference: '123456',
                payment_method_id: '12345',
                account: {
                  id: '123456',
                  nominal_code: 'N091',
                  code: '453'
                },
                transaction_date: '2021-05-01T12:00:00.000Z',
                supplier: {
                  id: '12345',
                  display_name: 'Windsurf Shop',
                  address: {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                },
                company_id: '12345',
                reconciled: true,
                status: 'authorised',
                type: 'accounts_payable',
                allocations: [
                  {
                    id: '12345',
                    type: 'bill',
                    amount: 49.99,
                    allocation_id: '123456'
                  }
                ],
                note: 'Some notes about this transaction',
                number: '123456',
                tracking_categories: [
                  {
                    id: '123456',
                    name: 'New York'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                row_version: '1-12345',
                display_id: '123456',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.billPaymentsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.billPayments
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.billPaymentsDelete
      summary: Delete Bill Payment
      description: Delete Bill Payment
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteBillPaymentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: freshbooks
          description: |
            Delete will set the payment to inactive and will soft delete it, meaning it will stop appearing in the list API call. However, it can still be found via the get by id call.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.billPaymentsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.billPayments
      x-speakeasy-name-override: delete
  /accounting/expenses:
    get:
      operationId: accounting.expensesAll
      summary: List Expenses
      description: List Expenses
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/GetExpensesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: xero
          description: 'In Xero, both suppliers (also used for employees) and customers are identified using the same contact ID, which maps to both `supplier_id` and `customer_id`. To accurately determine the contact type, use the suppliers and customers endpoints.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.expensesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.expenses
      x-speakeasy-name-override: list
    post:
      operationId: accounting.expensesAdd
      summary: Create Expense
      description: Create Expense
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        '201':
          $ref: '#/components/responses/CreateExpenseResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: xero
          description: 'When creating an expense for Xero, ensure the `account_id` corresponds to a ''bank'' or ''credit_card'' account type. Using other account types may result in errors or unexpected behavior.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              expense: {
                number: 'OIT00546',
                transaction_date: '2021-05-01T12:00:00.000Z',
                account_id: '123456',
                customer_id: '12345',
                supplier_id: '12345',
                company_id: '12345',
                department_id: '12345',
                currency: 'USD',
                currency_rate: 0.69,
                type: 'expense',
                memo: 'For travel expenses incurred on 2024-05-15',
                tax_rate: {
                  id: '123456',
                  rate: 10
                },
                total_amount: 275,
                line_items: [
                  {
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    account_id: '123456',
                    customer_id: '12345',
                    department_id: '12345',
                    location_id: '12345',
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    description: 'Travel US.',
                    total_amount: 275,
                    billable: true
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.expensesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.expenses
      x-speakeasy-name-override: create
  '/accounting/expenses/{id}':
    get:
      operationId: accounting.expensesOne
      summary: Get Expense
      description: Get Expense
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/GetExpenseResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-apideck-gotchas:
        - connector: xero
          description: 'In Xero, both suppliers (also used for employees) and customers are identified using the same contact ID, which maps to both `supplier_id` and `customer_id`. To accurately determine the contact type, use the suppliers and customers endpoints.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.expensesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.expenses
      x-speakeasy-name-override: get
    patch:
      operationId: accounting.expensesUpdate
      summary: Update Expense
      description: Update Expense
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Expense'
      responses:
        '200':
          $ref: '#/components/responses/UpdateExpenseResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              expense: {
                number: 'OIT00546',
                transaction_date: '2021-05-01T12:00:00.000Z',
                account_id: '123456',
                customer_id: '12345',
                supplier_id: '12345',
                company_id: '12345',
                department_id: '12345',
                currency: 'USD',
                currency_rate: 0.69,
                type: 'expense',
                memo: 'For travel expenses incurred on 2024-05-15',
                tax_rate: {
                  id: '123456',
                  rate: 10
                },
                total_amount: 275,
                line_items: [
                  {
                    tracking_categories: [
                      {
                        id: '123456',
                        name: 'New York'
                      }
                    ],
                    account_id: '123456',
                    customer_id: '12345',
                    department_id: '12345',
                    location_id: '12345',
                    tax_rate: {
                      id: '123456',
                      rate: 10
                    },
                    description: 'Travel US.',
                    total_amount: 275,
                    billable: true
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                row_version: '1-12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.accounting.expensesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.expenses
      x-speakeasy-name-override: update
    delete:
      operationId: accounting.expensesDelete
      summary: Delete Expense
      description: Delete Expense
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteExpenseResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - accounting
      x-apideck-api: accounting
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.accounting.expensesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: accounting.expenses
      x-speakeasy-name-override: delete
  /ats/jobs:
    get:
      operationId: ats.jobsAll
      summary: List Jobs
      description: List Jobs
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetJobsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.jobsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.jobs
      x-speakeasy-name-override: list
  '/ats/jobs/{id}':
    get:
      operationId: ats.jobsOne
      summary: Get Job
      description: Get Job
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetJobResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.jobsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.jobs
      x-speakeasy-name-override: get
  /ats/applicants:
    get:
      operationId: ats.applicantsAll
      summary: List Applicants
      description: List Applicants
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/applicantsFilter'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetApplicantsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.applicantsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.applicants
      x-speakeasy-name-override: list
    post:
      operationId: ats.applicantsAdd
      summary: Create Applicant
      description: Create Applicant
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Applicant'
      responses:
        '201':
          $ref: '#/components/responses/CreateApplicantResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              applicant: {
                name: 'Elon Musk',
                first_name: 'Elon',
                last_name: 'Musk',
                middle_name: 'D.',
                initials: 'EM',
                birthday: '2000-08-12',
                cover_letter:
                  'I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...',
                photo_url: 'https://unavatar.io/elon-musk',
                headline: 'PepsiCo, Inc, Central Perk',
                title: 'CEO',
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck',
                    type: 'twitter'
                  }
                ],
                stage_id: '12345',
                recruiter_id: '12345',
                coordinator_id: '12345',
                application_ids: [
                  'a0d636c6-43b3-4bde-8c70-85b707d992f4',
                  'a98lfd96-43b3-4bde-8c70-85b707d992e6'
                ],
                applications: ['a0d636c6-43b3-4bde-8c70-85b707d992f4', 'a98lfd96-43b3-4bde-8c70-85b707d992e6'],
                followers: ['a0d636c6-43b3-4bde-8c70-85b707d992f4', 'a98lfd96-43b3-4bde-8c70-85b707d992e6'],
                sources: ['Job site'],
                confidential: false,
                anonymized: true,
                tags: ['New'],
                archived: false,
                owner_id: '54321',
                record_url: 'https://app.intercom.io/contacts/12345',
                deleted: true,
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.ats.applicantsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.applicants
      x-speakeasy-name-override: create
  '/ats/applicants/{id}':
    get:
      operationId: ats.applicantsOne
      summary: Get Applicant
      description: Get Applicant
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetApplicantResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.applicantsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.applicants
      x-speakeasy-name-override: get
    patch:
      operationId: ats.applicantsUpdate
      summary: Update Applicant
      description: Update Applicant
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Applicant'
      responses:
        '200':
          $ref: '#/components/responses/UpdateApplicantResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              applicant: {
                name: 'Elon Musk',
                first_name: 'Elon',
                last_name: 'Musk',
                middle_name: 'D.',
                initials: 'EM',
                birthday: '2000-08-12',
                cover_letter:
                  'I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...',
                photo_url: 'https://unavatar.io/elon-musk',
                headline: 'PepsiCo, Inc, Central Perk',
                title: 'CEO',
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck',
                    type: 'twitter'
                  }
                ],
                stage_id: '12345',
                recruiter_id: '12345',
                coordinator_id: '12345',
                application_ids: [
                  'a0d636c6-43b3-4bde-8c70-85b707d992f4',
                  'a98lfd96-43b3-4bde-8c70-85b707d992e6'
                ],
                applications: ['a0d636c6-43b3-4bde-8c70-85b707d992f4', 'a98lfd96-43b3-4bde-8c70-85b707d992e6'],
                followers: ['a0d636c6-43b3-4bde-8c70-85b707d992f4', 'a98lfd96-43b3-4bde-8c70-85b707d992e6'],
                sources: ['Job site'],
                confidential: false,
                anonymized: true,
                tags: ['New'],
                archived: false,
                owner_id: '54321',
                record_url: 'https://app.intercom.io/contacts/12345',
                deleted: true,
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.ats.applicantsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.applicants
      x-speakeasy-name-override: update
    delete:
      operationId: ats.applicantsDelete
      summary: Delete Applicant
      description: Delete Applicant
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteApplicantResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.applicantsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.applicants
      x-speakeasy-name-override: delete
  /ats/applications:
    get:
      operationId: ats.applicationsAll
      summary: List Applications
      description: List Applications
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/GetApplicationsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.applicationsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.applications
      x-speakeasy-name-override: list
    post:
      operationId: ats.applicationsAdd
      summary: Create Application
      description: Create Application
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '201':
          $ref: '#/components/responses/CreateApplicationResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              application: {
                applicant_id: '12345',
                job_id: '12345',
                status: 'open',
                stage: {
                  id: '12345',
                  name: '12345'
                },
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.ats.applicationsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.applications
      x-speakeasy-name-override: create
  '/ats/applications/{id}':
    get:
      operationId: ats.applicationsOne
      summary: Get Application
      description: Get Application
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/GetApplicationResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.applicationsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.applications
      x-speakeasy-name-override: get
    patch:
      operationId: ats.applicationsUpdate
      summary: Update Application
      description: Update Application
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        '200':
          $ref: '#/components/responses/UpdateApplicationResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              application: {
                applicant_id: '12345',
                job_id: '12345',
                status: 'open',
                stage: {
                  id: '12345',
                  name: '12345'
                },
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.ats.applicationsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.applications
      x-speakeasy-name-override: update
    delete:
      operationId: ats.applicationsDelete
      summary: Delete Application
      description: Delete Application
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteApplicationResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ats
      x-apideck-api: ats
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ats.applicationsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ats.applications
      x-speakeasy-name-override: delete
  /crm/companies:
    get:
      operationId: crm.companiesAll
      summary: List companies
      description: List companies
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/companiesFilter'
        - $ref: '#/components/parameters/companiesSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCompaniesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: hubspot
          description: 'When using a filter or sorting for companies, Hubspot will only return a maximum of 10.000 companies.'
        - connector: salesforce
          description: 'Salesforce imposes a maximum offset limit of 2000. Exceeding this offset will result in an error from Salesforce. For result sets larger than 2000 items, it is necessary to set the pagination limit to 200, as this will enforce the use of batchSize for pagination. Note that setting a limit lower than 200 will not reduce the batchSize due to Salesforce''s minimum batch size policy of 200, as detailed in their documentation [here](https://developer.salesforce.com/docs/atlas.en-us.250.0.api_rest.meta/api_rest/headers_queryoptions.htm) and will have no effect.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.companiesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.companies
      x-speakeasy-name-override: list
    post:
      operationId: crm.companiesAdd
      summary: Create company
      description: Create company
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '201':
          $ref: '#/components/responses/CreateCompanyResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              company: {
                name: 'SpaceX',
                owner_id: '12345',
                image: 'https://www.spacex.com/static/images/share.jpg',
                description:
                  'Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.',
                vat_number: 'BE0689615164',
                currency: 'USD',
                status: 'Open',
                fax: '+12129876543',
                annual_revenue: '+$35m',
                number_of_employees: '500-1000',
                industry: 'Apparel',
                ownership: 'Public',
                sales_tax_number: '12456EN',
                payee_number: '78932EN',
                abn_or_tfn: '46 115 614 695',
                abn_branch: '123',
                acn: 'XXX XXX XXX',
                first_name: 'Elon',
                last_name: 'Musk',
                bank_accounts: [
                  {
                    bank_name: 'Monzo',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    routing_number: '012345678',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    currency: 'USD'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck',
                    type: 'twitter'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                row_type: {
                  id: '12345',
                  name: 'Customer Account'
                },
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                tags: ['New'],
                read_only: false,
                salutation: 'Mr',
                birthday: '2000-08-12',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.companiesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.companies
      x-speakeasy-name-override: create
  '/crm/companies/{id}':
    get:
      operationId: crm.companiesOne
      summary: Get company
      description: Get company
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCompanyResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.companiesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.companies
      x-speakeasy-name-override: get
    patch:
      operationId: crm.companiesUpdate
      summary: Update company
      description: Update company
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCompanyResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              company: {
                name: 'SpaceX',
                owner_id: '12345',
                image: 'https://www.spacex.com/static/images/share.jpg',
                description:
                  'Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.',
                vat_number: 'BE0689615164',
                currency: 'USD',
                status: 'Open',
                fax: '+12129876543',
                annual_revenue: '+$35m',
                number_of_employees: '500-1000',
                industry: 'Apparel',
                ownership: 'Public',
                sales_tax_number: '12456EN',
                payee_number: '78932EN',
                abn_or_tfn: '46 115 614 695',
                abn_branch: '123',
                acn: 'XXX XXX XXX',
                first_name: 'Elon',
                last_name: 'Musk',
                bank_accounts: [
                  {
                    bank_name: 'Monzo',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    routing_number: '012345678',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    currency: 'USD'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck',
                    type: 'twitter'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                row_type: {
                  id: '12345',
                  name: 'Customer Account'
                },
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                tags: ['New'],
                read_only: false,
                salutation: 'Mr',
                birthday: '2000-08-12',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.companiesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.companies
      x-speakeasy-name-override: update
    delete:
      operationId: crm.companiesDelete
      summary: Delete company
      description: Delete company
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      responses:
        '200':
          $ref: '#/components/responses/DeleteCompanyResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.companiesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.companies
      x-speakeasy-name-override: delete
  /crm/contacts:
    get:
      operationId: crm.contactsAll
      summary: List contacts
      description: List contacts
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/contactsFilter'
        - $ref: '#/components/parameters/contactsSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetContactsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: hubspot
          description: 'When using a filter or sorting for contacts, Hubspot will only return a maximum of 10.000 contacts.'
        - connector: salesforce
          description: 'Salesforce imposes a maximum offset limit of 2000. Exceeding this offset will result in an error from Salesforce. For result sets larger than 2000 items, it is necessary to set the pagination limit to 200, as this will enforce the use of batchSize for pagination. Note that setting a limit lower than 200 will not reduce the batchSize due to Salesforce''s minimum batch size policy of 200, as detailed in their documentation [here](https://developer.salesforce.com/docs/atlas.en-us.250.0.api_rest.meta/api_rest/headers_queryoptions.htm) and will have no effect.'
        - connector: zoho-crm
          description: 'When using the phone_number filter for contacts in Zoho CRM, the filter does not work with numbers containing dashes (e.g., 989-989-989) or their URL-encoded equivalents (e.g., 989%2D989%2D989). It only works with continuous digits (e.g., 9898989898).'
        - connector: microsoft-outlook
          description: 'To get custom fields, make a get contact call with owner_id. If no owner_id is provided, the list call will return the contacts of the authenticated user.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.contactsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.contacts
      x-speakeasy-name-override: list
    post:
      operationId: crm.contactsAdd
      summary: Create contact
      description: Create contact
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '201':
          $ref: '#/components/responses/CreateContactResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: hubspot
          description: 'When creating a contact, it is advised to always include an unique email address since Hubspot uses it to prevent duplicate contacts in HubSpot. More info on the [Hubspot developer docs](https://developers.hubspot.com/docs/api/crm/contacts).'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              contact: {
                name: 'Elon Musk',
                owner_id: '54321',
                type: 'personal',
                company_id: '23456',
                company_name: '23456',
                lead_id: '34567',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                prefix: 'Mr.',
                suffix: 'PhD',
                title: 'CEO',
                department: 'Engineering',
                language: 'EN',
                gender: 'female',
                birthday: '2000-08-12',
                image: 'https://unavatar.io/elon-musk',
                photo_url: 'https://unavatar.io/elon-musk',
                lead_source: 'Cold Call',
                fax: '+12129876543',
                description: 'Internal champion',
                current_balance: 10.5,
                status: 'open',
                active: true,
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck',
                    type: 'twitter'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                email_domain: 'gmail.com',
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                tags: ['New'],
                opportunity_ids: ['12345'],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.contactsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.contacts
      x-speakeasy-name-override: create
  '/crm/contacts/{id}':
    get:
      operationId: crm.contactsOne
      summary: Get contact
      description: Get contact
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/contactsFilter'
      responses:
        '200':
          $ref: '#/components/responses/GetContactResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: microsoft-outlook
          description: 'If no owner_id is provided, the get call will return the contacts of the authenticated user only.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.contactsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.contacts
      x-speakeasy-name-override: get
    patch:
      operationId: crm.contactsUpdate
      summary: Update contact
      description: Update contact
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          $ref: '#/components/responses/UpdateContactResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              contact: {
                name: 'Elon Musk',
                owner_id: '54321',
                type: 'personal',
                company_id: '23456',
                company_name: '23456',
                lead_id: '34567',
                first_name: 'Elon',
                middle_name: 'D.',
                last_name: 'Musk',
                prefix: 'Mr.',
                suffix: 'PhD',
                title: 'CEO',
                department: 'Engineering',
                language: 'EN',
                gender: 'female',
                birthday: '2000-08-12',
                image: 'https://unavatar.io/elon-musk',
                photo_url: 'https://unavatar.io/elon-musk',
                lead_source: 'Cold Call',
                fax: '+12129876543',
                description: 'Internal champion',
                current_balance: 10.5,
                status: 'open',
                active: true,
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck',
                    type: 'twitter'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                email_domain: 'gmail.com',
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                tags: ['New'],
                opportunity_ids: ['12345'],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.contactsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.contacts
      x-speakeasy-name-override: update
    delete:
      operationId: crm.contactsDelete
      summary: Delete contact
      description: Delete contact
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteContactResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: microsoft-outlook
          description: To delete another user's contact use proxy api.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.contactsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.contacts
      x-speakeasy-name-override: delete
  /crm/opportunities:
    get:
      operationId: crm.opportunitiesAll
      summary: List opportunities
      description: List opportunities
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/opportunitiesFilter'
        - $ref: '#/components/parameters/opportunitiesSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetOpportunitiesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: hubspot
          description: 'When using a filter or sorting for opportunities, Hubspot will only return a maximum of 10.000 opportunities and omit the company_id, primary_contact_id, company_id, contact_ids, lead_id and contact_id.'
        - connector: salesforce
          description: 'Salesforce imposes a maximum offset limit of 2000. Exceeding this offset will result in an error from Salesforce. For result sets larger than 2000 items, it is necessary to set the pagination limit to 200, as this will enforce the use of batchSize for pagination. Note that setting a limit lower than 200 will not reduce the batchSize due to Salesforce''s minimum batch size policy of 200, as detailed in their documentation [here](https://developer.salesforce.com/docs/atlas.en-us.250.0.api_rest/api_rest/headers_queryoptions.htm) and will have no effect.'
        - connector: pipedrive
          description: 'Pipedrive supports filtering by either title or company_id, but not both simultaneously.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.opportunitiesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.opportunities
      x-speakeasy-name-override: list
    post:
      operationId: crm.opportunitiesAdd
      summary: Create opportunity
      description: Create opportunity
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
      responses:
        '201':
          $ref: '#/components/responses/CreateOpportunityResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              opportunity: {
                title: 'New Rocket',
                primary_contact_id: '12345',
                description:
                  'Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.',
                type: 'Existing Customer - Upgrade',
                monetary_amount: 75000,
                currency: 'USD',
                win_probability: 40,
                close_date: '2020-10-30',
                loss_reason_id: '12345',
                loss_reason: 'No budget',
                won_reason_id: '12345',
                won_reason: 'Best pitch',
                pipeline_id: '12345',
                pipeline_stage_id: '12345',
                source_id: '12345',
                lead_id: '12345',
                lead_source: 'Website',
                contact_id: '12345',
                contact_ids: ['12345'],
                company_id: '12345',
                company_name: 'Copper',
                owner_id: '12345',
                priority: 'None',
                status: 'Open',
                status_id: '12345',
                tags: ['New'],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                stage_last_changed_at: '2020-09-30T07:43:32.000Z',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.opportunitiesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.opportunities
      x-speakeasy-name-override: create
  '/crm/opportunities/{id}':
    get:
      operationId: crm.opportunitiesOne
      summary: Get opportunity
      description: Get opportunity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetOpportunityResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.opportunitiesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.opportunities
      x-speakeasy-name-override: get
    patch:
      operationId: crm.opportunitiesUpdate
      summary: Update opportunity
      description: Update opportunity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
      responses:
        '200':
          $ref: '#/components/responses/UpdateOpportunityResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              opportunity: {
                title: 'New Rocket',
                primary_contact_id: '12345',
                description:
                  'Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.',
                type: 'Existing Customer - Upgrade',
                monetary_amount: 75000,
                currency: 'USD',
                win_probability: 40,
                close_date: '2020-10-30',
                loss_reason_id: '12345',
                loss_reason: 'No budget',
                won_reason_id: '12345',
                won_reason: 'Best pitch',
                pipeline_id: '12345',
                pipeline_stage_id: '12345',
                source_id: '12345',
                lead_id: '12345',
                lead_source: 'Website',
                contact_id: '12345',
                contact_ids: ['12345'],
                company_id: '12345',
                company_name: 'Copper',
                owner_id: '12345',
                priority: 'None',
                status: 'Open',
                status_id: '12345',
                tags: ['New'],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                stage_last_changed_at: '2020-09-30T07:43:32.000Z',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.opportunitiesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.opportunities
      x-speakeasy-name-override: update
    delete:
      operationId: crm.opportunitiesDelete
      summary: Delete opportunity
      description: Delete opportunity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteOpportunityResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.opportunitiesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.opportunities
      x-speakeasy-name-override: delete
  /crm/leads:
    get:
      operationId: crm.leadsAll
      summary: List leads
      description: List leads
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/leadsFilter'
        - $ref: '#/components/parameters/leadsSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetLeadsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: hubspot
          description: 'When using a filter or sorting for leads, Hubspot will only return a maximum of 10.000 leads.'
        - connector: salesforce
          description: 'Salesforce imposes a maximum offset limit of 2000. Exceeding this offset will result in an error from Salesforce. For result sets larger than 2000 items, it is necessary to set the pagination limit to 200, as this will enforce the use of batchSize for pagination. Note that setting a limit lower than 200 will not reduce the batchSize due to Salesforce''s minimum batch size policy of 200, as detailed in their documentation [here](https://developer.salesforce.com/docs/atlas.en-us.250.0.api_rest.meta/api_rest/headers_queryoptions.htm) and will have no effect.'
        - connector: zoho-crm
          description: 'When using the phone_number filter for leads in Zoho CRM, the filter does not work with numbers containing dashes or plus (e.g., +989-989-989) or their URL-encoded equivalents (e.g., %2B989%2D989%2D989). It only works with continuous digits (e.g., 9898989898).'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.leadsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.leads
      x-speakeasy-name-override: list
    post:
      operationId: crm.leadsAdd
      summary: Create lead
      description: Create lead
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
      responses:
        '201':
          $ref: '#/components/responses/CreateLeadResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: hubspot
          description: 'When creating a lead, it is advised to always include an unique email address since Hubspot uses it to prevent duplicate contacts in HubSpot. More info on the [Hubspot developer docs](https://developers.hubspot.com/docs/api/crm/contacts).'
        - connector: pipedrive
          description: 'When creating a lead, it is required to include an existing `company_id`. More info on the [Pipedrive developer docs](https://pipedrive.readme.io/docs/adding-a-lead).'
        - connector: freshsales
          description: 'When creating a lead, it is required to include a `"company_name": "placeholder"` in the request body.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              lead: {
                name: 'Elon Musk',
                company_name: 'Spacex',
                owner_id: '54321',
                owner_name: 'John Doe',
                company_id: '2',
                lead_id: '2',
                lead_source: 'Cold Call',
                first_name: 'Elon',
                last_name: 'Musk',
                description: 'A thinker',
                prefix: 'Sir',
                title: 'CEO',
                language: 'EN',
                status: 'New',
                monetary_amount: 75000,
                currency: 'USD',
                fax: '+12129876543',
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck',
                    type: 'twitter'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                tags: ['New'],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.leadsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.leads
      x-speakeasy-name-override: create
  '/crm/leads/{id}':
    get:
      operationId: crm.leadsOne
      summary: Get lead
      description: Get lead
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCrmLeadResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.leadsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.leads
      x-speakeasy-name-override: get
    patch:
      operationId: crm.leadsUpdate
      summary: Update lead
      description: Update lead
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lead'
      responses:
        '200':
          $ref: '#/components/responses/UpdateLeadResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              lead: {
                name: 'Elon Musk',
                company_name: 'Spacex',
                owner_id: '54321',
                owner_name: 'John Doe',
                company_id: '2',
                lead_id: '2',
                lead_source: 'Cold Call',
                first_name: 'Elon',
                last_name: 'Musk',
                description: 'A thinker',
                prefix: 'Sir',
                title: 'CEO',
                language: 'EN',
                status: 'New',
                monetary_amount: 75000,
                currency: 'USD',
                fax: '+12129876543',
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck',
                    type: 'twitter'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                tags: ['New'],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.leadsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.leads
      x-speakeasy-name-override: update
    delete:
      operationId: crm.leadsDelete
      summary: Delete lead
      description: Delete lead
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteLeadResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.leadsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.leads
      x-speakeasy-name-override: delete
  /crm/pipelines:
    get:
      operationId: crm.pipelinesAll
      summary: List pipelines
      description: List pipelines
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetPipelinesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.pipelinesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.pipelines
      x-speakeasy-name-override: list
    post:
      operationId: crm.pipelinesAdd
      summary: Create pipeline
      description: Create pipeline
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '201':
          $ref: '#/components/responses/CreatePipelineResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-upcoming: true
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              pipeline: {
                id: 'default',
                name: 'Sales Pipeline',
                currency: 'USD',
                archived: false,
                active: false,
                display_order: 1,
                win_probability_enabled: true,
                stages: [
                  {
                    name: 'Contract Sent',
                    value: 'CONTRACT_SENT',
                    win_probability: 50,
                    display_order: 1
                  }
                ],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.pipelinesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.pipelines
      x-speakeasy-name-override: create
  '/crm/pipelines/{id}':
    get:
      operationId: crm.pipelinesOne
      summary: Get pipeline
      description: Get pipeline
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetPipelineResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-upcoming: true
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.pipelinesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.pipelines
      x-speakeasy-name-override: get
    patch:
      operationId: crm.pipelinesUpdate
      summary: Update pipeline
      description: Update pipeline
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pipeline'
      responses:
        '200':
          $ref: '#/components/responses/UpdatePipelineResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-upcoming: true
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              pipeline: {
                id: 'default',
                name: 'Sales Pipeline',
                currency: 'USD',
                archived: false,
                active: false,
                display_order: 1,
                win_probability_enabled: true,
                stages: [
                  {
                    name: 'Contract Sent',
                    value: 'CONTRACT_SENT',
                    win_probability: 50,
                    display_order: 1
                  }
                ],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.pipelinesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.pipelines
      x-speakeasy-name-override: update
    delete:
      operationId: crm.pipelinesDelete
      summary: Delete pipeline
      description: Delete pipeline
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeletePipelineResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-upcoming: true
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.pipelinesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.pipelines
      x-speakeasy-name-override: delete
  /crm/notes:
    get:
      operationId: crm.notesAll
      summary: List notes
      description: List notes
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetNotesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: salesforce
          description: 'Salesforce imposes a maximum offset limit of 2000. Exceeding this offset will result in an error from Salesforce. For result sets larger than 2000 items, it is necessary to set the pagination limit to 200, as this will enforce the use of batchSize for pagination. Note that setting a limit lower than 200 will not reduce the batchSize due to Salesforce''s minimum batch size policy of 200, as detailed in their documentation [here](https://developer.salesforce.com/docs/atlas.en-us.250.0.api_rest.meta/api_rest/headers_queryoptions.htm) and will have no effect.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.notesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.notes
      x-speakeasy-name-override: list
    post:
      operationId: crm.notesAdd
      summary: Create note
      description: Create note
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '201':
          $ref: '#/components/responses/CreateNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: salesforce
          description: 'When creating a note in Salesforce, you can only associate it with one resource (such as a lead, company or opportunity) at a time. You cannot combine multiple resources or associate the note with more than one resource in a single API call.'
        - connector: close
          description: 'When creating a note in Close, the content of the note should be sent in html surrounded by the <body> tags and at least other inner element. If these tags are not sent, unify will surround the note with <body> and <p> tags.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              note: {
                title: 'Meeting Notes',
                content: 'Office hours are 9AM-6PM',
                owner_id: '12345',
                contact_id: '12345',
                company_id: '12345',
                opportunity_id: '12345',
                lead_id: '12345',
                active: true,
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.notesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.notes
      x-speakeasy-name-override: create
  '/crm/notes/{id}':
    get:
      operationId: crm.notesOne
      summary: Get note
      description: Get note
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.notesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.notes
      x-speakeasy-name-override: get
    patch:
      operationId: crm.notesUpdate
      summary: Update note
      description: Update note
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '200':
          $ref: '#/components/responses/UpdateNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: close
          description: 'When updating a note in Close, the content of the note should be sent in html surrounded by the <body> tags and at least other inner element. If these tags are not sent, unify will surround the note with <body> and <p> tags.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              note: {
                title: 'Meeting Notes',
                content: 'Office hours are 9AM-6PM',
                owner_id: '12345',
                contact_id: '12345',
                company_id: '12345',
                opportunity_id: '12345',
                lead_id: '12345',
                active: true,
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.notesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.notes
      x-speakeasy-name-override: update
    delete:
      operationId: crm.notesDelete
      summary: Delete note
      description: Delete note
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.notesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.notes
      x-speakeasy-name-override: delete
  /crm/users:
    get:
      operationId: crm.usersAll
      summary: List users
      description: List users
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetUsersResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: hubspot
          description: 'HubSpot owners are mapped to CRM users in Apideck. HubSpot owners and HubSpot users (people who can log into HubSpot) aren''t necessarily the same, as you may have owners created through an integration.'
        - connector: salesforce
          description: 'Salesforce imposes a maximum offset limit of 2000. Exceeding this offset will result in an error from Salesforce. For result sets larger than 2000 items, it is necessary to set the pagination limit to 200, as this will enforce the use of batchSize for pagination. Note that setting a limit lower than 200 will not reduce the batchSize due to Salesforce''s minimum batch size policy of 200, as detailed in their documentation [here](https://developer.salesforce.com/docs/atlas.en-us.250.0.api_rest.meta/api_rest/headers_queryoptions.htm) and will have no effect.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.usersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.users
      x-speakeasy-name-override: list
    post:
      operationId: crm.usersAdd
      summary: Create user
      description: Create user
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          $ref: '#/components/responses/CreateUserResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              user: {
                parent_id: '54321',
                username: 'masterofcoin',
                first_name: 'Elon',
                last_name: 'Musk',
                title: 'CEO',
                division: 'Europe',
                department: 'R&D',
                company_name: 'SpaceX',
                employee_number: '123456-AB',
                description: 'A description',
                image: 'https://logo.clearbit.com/spacex.com?s=128',
                language: 'EN',
                status: 'active',
                password: 'supersecretpassword',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.usersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.users
      x-speakeasy-name-override: create
  '/crm/users/{id}':
    get:
      operationId: crm.usersOne
      summary: Get user
      description: Get user
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetUserResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.usersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.users
      x-speakeasy-name-override: get
    patch:
      operationId: crm.usersUpdate
      summary: Update user
      description: Update user
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          $ref: '#/components/responses/UpdateUserResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              user: {
                parent_id: '54321',
                username: 'masterofcoin',
                first_name: 'Elon',
                last_name: 'Musk',
                title: 'CEO',
                division: 'Europe',
                department: 'R&D',
                company_name: 'SpaceX',
                employee_number: '123456-AB',
                description: 'A description',
                image: 'https://logo.clearbit.com/spacex.com?s=128',
                language: 'EN',
                status: 'active',
                password: 'supersecretpassword',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.usersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.users
      x-speakeasy-name-override: update
    delete:
      operationId: crm.usersDelete
      summary: Delete user
      description: Delete user
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteUserResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.usersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.users
      x-speakeasy-name-override: delete
  /crm/activities:
    get:
      operationId: crm.activitiesAll
      summary: List activities
      description: List activities
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/activitiesFilter'
        - $ref: '#/components/parameters/activitiesSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetActivitiesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: hubspot
          description: 'Hubspot will only return activities from the last 30 days when using the `filter[updated_since]` parameter, with a maximum of 10.000 records. More info [here](https://legacydocs.hubspot.com/docs/methods/engagements/get-recent-engagements).'
        - connector: salesforce
          description: 'Salesforce imposes a maximum offset limit of 2000. Exceeding this offset will result in an error from Salesforce. For result sets larger than 2000 items, it is necessary to set the pagination limit to 200, as this will enforce the use of batchSize for pagination. Note that setting a limit lower than 200 will not reduce the batchSize due to Salesforce''s minimum batch size policy of 200, as detailed in their documentation [here](https://developer.salesforce.com/docs/atlas.en-us.250.0.api_rest.meta/api_rest/headers_queryoptions.htm) and will have no effect. In Salesforce, to get list of tasks, calls or emails, please use filter "type": "task" to ensure proper handling.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.activitiesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.activities
      x-speakeasy-name-override: list
    post:
      operationId: crm.activitiesAdd
      summary: Create activity
      description: Create activity
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '201':
          $ref: '#/components/responses/CreateActivityResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: salesforce
          description: 'In Salesforce, when creating tasks, calls, or emails, please specify "type": "task" with correct `event_sub_type` value in the request body to ensure proper handling.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              activity: {
                activity_datetime: '2021-05-01T12:00:00.000Z',
                duration_seconds: 1800,
                user_id: '12345',
                account_id: '12345',
                contact_id: '12345',
                company_id: '12345',
                opportunity_id: '12345',
                lead_id: '12345',
                owner_id: '12345',
                campaign_id: '12345',
                case_id: '12345',
                asset_id: '12345',
                contract_id: '12345',
                product_id: '12345',
                solution_id: '12345',
                custom_object_id: '12345',
                type: 'meeting',
                title: 'Meeting',
                description: 'More info about the meeting',
                note: 'An internal note about the meeting',
                location: 'Space',
                location_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                all_day_event: false,
                private: true,
                group_event: true,
                event_sub_type: 'debrief',
                group_event_type: 'Proposed',
                child: false,
                archived: false,
                deleted: false,
                show_as: 'busy',
                done: false,
                start_datetime: '2021-05-01T12:00:00.000Z',
                end_datetime: '2021-05-01T12:30:00.000Z',
                activity_date: '2021-05-01',
                end_date: '2021-05-01',
                recurrent: false,
                reminder_datetime: '2021-05-01T17:00:00.000Z',
                reminder_set: false,
                video_conference_url: 'https://us02web.zoom.us/j/88120759396',
                video_conference_id: 'zoom:88120759396',
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                attendees: [
                  {
                    name: 'Elon Musk',
                    first_name: 'Elon',
                    middle_name: 'D.',
                    last_name: 'Musk',
                    prefix: 'Mr.',
                    suffix: 'PhD',
                    email_address: 'elon@musk.com',
                    is_organizer: true,
                    status: 'accepted'
                  }
                ],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.activitiesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.activities
      x-speakeasy-name-override: create
  '/crm/activities/{id}':
    get:
      operationId: crm.activitiesOne
      summary: Get activity
      description: Get activity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetActivityResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.activitiesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.activities
      x-speakeasy-name-override: get
    patch:
      operationId: crm.activitiesUpdate
      summary: Update activity
      description: Update activity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        '200':
          $ref: '#/components/responses/UpdateActivityResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: salesforce
          description: 'In Salesforce, when updating tasks, calls, or emails, please specify "type": "task" in the request body to ensure proper handling.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              activity: {
                activity_datetime: '2021-05-01T12:00:00.000Z',
                duration_seconds: 1800,
                user_id: '12345',
                account_id: '12345',
                contact_id: '12345',
                company_id: '12345',
                opportunity_id: '12345',
                lead_id: '12345',
                owner_id: '12345',
                campaign_id: '12345',
                case_id: '12345',
                asset_id: '12345',
                contract_id: '12345',
                product_id: '12345',
                solution_id: '12345',
                custom_object_id: '12345',
                type: 'meeting',
                title: 'Meeting',
                description: 'More info about the meeting',
                note: 'An internal note about the meeting',
                location: 'Space',
                location_address: {
                  id: '123',
                  type: 'primary',
                  string: '25 Spring Street, Blackburn, VIC 3130',
                  name: 'HQ US',
                  line1: 'Main street',
                  line2: 'apt #',
                  line3: 'Suite #',
                  line4: 'delivery instructions',
                  street_number: '25',
                  city: 'San Francisco',
                  state: 'CA',
                  postal_code: '94104',
                  country: 'US',
                  latitude: '40.759211',
                  longitude: '-73.984638',
                  county: 'Santa Clara',
                  contact_name: 'Elon Musk',
                  salutation: 'Mr',
                  phone_number: '111-111-1111',
                  fax: '122-111-1111',
                  email: 'elon@musk.com',
                  website: 'https://elonmusk.com',
                  notes: 'Address notes or delivery instructions.',
                  row_version: '1-12345'
                },
                all_day_event: false,
                private: true,
                group_event: true,
                event_sub_type: 'debrief',
                group_event_type: 'Proposed',
                child: false,
                archived: false,
                deleted: false,
                show_as: 'busy',
                done: false,
                start_datetime: '2021-05-01T12:00:00.000Z',
                end_datetime: '2021-05-01T12:30:00.000Z',
                activity_date: '2021-05-01',
                end_date: '2021-05-01',
                recurrent: false,
                reminder_datetime: '2021-05-01T17:00:00.000Z',
                reminder_set: false,
                video_conference_url: 'https://us02web.zoom.us/j/88120759396',
                video_conference_id: 'zoom:88120759396',
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                attendees: [
                  {
                    name: 'Elon Musk',
                    first_name: 'Elon',
                    middle_name: 'D.',
                    last_name: 'Musk',
                    prefix: 'Mr.',
                    suffix: 'PhD',
                    email_address: 'elon@musk.com',
                    is_organizer: true,
                    status: 'accepted'
                  }
                ],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.crm.activitiesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.activities
      x-speakeasy-name-override: update
    delete:
      operationId: crm.activitiesDelete
      summary: Delete activity
      description: Delete activity
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteActivityResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - crm
      x-apideck-api: crm
      x-apideck-gotchas:
        - connector: salesforce
          description: This endpoint is mapped to Salesforce Events; tasks are not included. As a workaround we recommended using the Proxy API.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.crm.activitiesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: crm.activities
      x-speakeasy-name-override: delete
  /ecommerce/orders:
    get:
      operationId: ecommerce.ordersAll
      summary: List Orders
      description: List Orders
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/ordersFilter'
        - $ref: '#/components/parameters/ordersSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetEcommerceOrdersResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ecommerce
      x-apideck-api: ecommerce
      x-apideck-gotchas:
        - connector: bigcommerce
          description: 'In the pagination, the limit value should be in additions of 10. E.g. 10, 20, 30, etc.'
        - connector: tiktok
          description: 'To retrieve customer details, if they are hidden in the order response, use `seller shipping` instead of the default `TikTok shipping` in Tiktok. Please refer to our [integration guide](https://developers.apideck.com/connectors/tiktok/docs/application_owner+oauth_credentials) for more details.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.ordersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ecommerce.orders
      x-speakeasy-name-override: list
  '/ecommerce/orders/{id}':
    get:
      operationId: ecommerce.ordersOne
      summary: Get Order
      description: Get Order
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetEcommerceOrderResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ecommerce
      x-apideck-api: ecommerce
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.ordersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ecommerce.orders
      x-speakeasy-name-override: get
  /ecommerce/products:
    get:
      operationId: ecommerce.productsAll
      summary: List Products
      description: List Products
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetProductsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ecommerce
      x-apideck-api: ecommerce
      x-apideck-gotchas:
        - connector: prestashop
          description: 'PrestaShop primarily uses an `id` field to identify product associations (Ie: categories, variants etc). To maintain performance on the list endpoint, fewer properties are returned than other connectors.'
        - connector: bigcommerce
          description: 'In the pagination, the limit value should be in additions of 10. E.g. 10, 20, 30, etc.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.productsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ecommerce.products
      x-speakeasy-name-override: list
  '/ecommerce/products/{id}':
    get:
      operationId: ecommerce.productsOne
      summary: Get Product
      description: Get Product
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetProductResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ecommerce
      x-apideck-api: ecommerce
      x-apideck-gotchas:
        - connector: prestashop
          description: Product images for PrestaShop are limited to the default image set on the product.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.productsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ecommerce.products
      x-speakeasy-name-override: get
  /ecommerce/customers:
    get:
      operationId: ecommerce.customersAll
      summary: List Customers
      description: List Customers
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/customersFilter1'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetEcommerceCustomersResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ecommerce
      x-apideck-api: ecommerce
      x-apideck-gotchas:
        - connector: woocommerce
          description: Woocommerce will only return customers that have placed an order and created and account.
        - connector: bigcommerce
          description: 'In the pagination, the limit value should be in additions of 10. E.g. 10, 20, 30, etc.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.customersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ecommerce.customers
      x-speakeasy-name-override: list
  '/ecommerce/customers/{id}':
    get:
      operationId: ecommerce.customersOne
      summary: Get Customer
      description: Get Customer
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetEcommerceCustomerResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ecommerce
      x-apideck-api: ecommerce
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.customersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ecommerce.customers
      x-speakeasy-name-override: get
  /ecommerce/store:
    get:
      operationId: ecommerce.storesOne
      summary: Get Store
      description: Get Store
      parameters:
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetStoreResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - ecommerce
      x-apideck-api: ecommerce
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.ecommerce.storesOne({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: ecommerce.stores
      x-speakeasy-name-override: get
  /file-storage/files:
    get:
      operationId: fileStorage.filesAll
      summary: List Files
      description: List Files
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/filesFilter'
        - $ref: '#/components/parameters/filesSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetFilesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-apideck-gotchas:
        - connector: google-drive
          description: 'Google drive does not provide `previous` cursor information, so the cursors for the previous pages will be empty.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.filesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.files
      x-speakeasy-name-override: list
  /file-storage/files/search:
    post:
      operationId: fileStorage.filesSearch
      summary: Search Files
      description: Search Files
      parameters:
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/filesFilter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilesSearch'
      responses:
        '200':
          $ref: '#/components/responses/GetFilesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.filesSearch({
                filesSearch: {
                  query: 'logo jpg'
                }
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.files
      x-speakeasy-name-override: search
  '/file-storage/files/{id}':
    get:
      operationId: fileStorage.filesOne
      summary: Get File
      description: Get File
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetFileResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.filesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.files
      x-speakeasy-name-override: get
    patch:
      operationId: fileStorage.filesUpdate
      summary: Rename or move File
      description: Rename or move File
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFileRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateFileResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              file: {
                name: 'New Name.pdf',
                description: 'Renamed PDF Document',
                parent_folder_id: '1234',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.fileStorage.filesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.files
      x-speakeasy-name-override: update
    delete:
      operationId: fileStorage.filesDelete
      summary: Delete File
      description: Delete File
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteFileResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.filesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.files
      x-speakeasy-name-override: delete
  '/file-storage/files/{id}/download':
    get:
      operationId: fileStorage.filesDownload
      summary: Download File
      description: Download File
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetFileDownloadResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.filesDownload({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.files
      x-speakeasy-name-override: download
  '/file-storage/files/{id}/export':
    get:
      operationId: fileStorage.filesExport
      summary: Export File
      description: Export File
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: '#/components/responses/GetFileDownloadResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.filesExport({
                id: 'id_example',
                format: 'pdf'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.files
      x-speakeasy-name-override: export
  /file-storage/folders:
    post:
      operationId: fileStorage.foldersAdd
      summary: Create Folder
      description: Create Folder
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/fields'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateFolderResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-apideck-gotchas:
        - connector: dropbox
          description: 'To create a new folder at the top level in Dropbox via its API, use "root" as the parent_folder_id. For a subfolder, use "/ParentFolder" as the parent_folder_id, including the initial "/". Omitting this slash leads to a regex error from Dropbox.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              folder: {
                name: 'Documents',
                description: 'My Personal Documents',
                parent_folder_id: '1234',
                drive_id: '1234',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.fileStorage.foldersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.folders
      x-speakeasy-name-override: create
  '/file-storage/folders/{id}':
    get:
      operationId: fileStorage.foldersOne
      summary: Get Folder
      description: Get Folder
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetFolderResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-apideck-gotchas:
        - connector: dropbox
          description: Dropbox does not support getting metadata for the `root` folder.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.foldersOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.folders
      x-speakeasy-name-override: get
    patch:
      operationId: fileStorage.foldersUpdate
      summary: Rename or move Folder
      description: Rename or move Folder
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolderRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateFolderResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              folder: {
                name: 'Documents',
                description: 'My Personal Documents',
                parent_folder_id: '1234',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.fileStorage.foldersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.folders
      x-speakeasy-name-override: update
    delete:
      operationId: fileStorage.foldersDelete
      summary: Delete Folder
      description: Delete Folder
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteFolderResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.foldersDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.folders
      x-speakeasy-name-override: delete
  '/file-storage/folders/{id}/copy':
    post:
      operationId: fileStorage.foldersCopy
      summary: Copy Folder
      description: Copy Folder
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyFolderRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateFolderResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              folder: {
                name: 'Documents',
                parent_folder_id: '1234',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.fileStorage.foldersCopy(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.folders
      x-speakeasy-name-override: copy
  /file-storage/shared-links:
    get:
      operationId: fileStorage.sharedLinksAll
      summary: List SharedLinks
      description: List SharedLinks
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetSharedLinksResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.sharedLinksAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.sharedLinks
      x-speakeasy-name-override: list
    post:
      operationId: fileStorage.sharedLinksAdd
      summary: Create Shared Link
      description: Create Shared Link
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedLink'
      responses:
        '201':
          $ref: '#/components/responses/CreateSharedLinkResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              sharedLink: {
                download_url: 'https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg',
                target_id: 'string',
                scope: 'company',
                password: 'string',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.fileStorage.sharedLinksAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.sharedLinks
      x-speakeasy-name-override: create
  '/file-storage/shared-links/{id}':
    get:
      operationId: fileStorage.sharedLinksOne
      summary: Get Shared Link
      description: Get Shared Link
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetSharedLinkResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.sharedLinksOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.sharedLinks
      x-speakeasy-name-override: get
    patch:
      operationId: fileStorage.sharedLinksUpdate
      summary: Update Shared Link
      description: Update Shared Link
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedLink'
      responses:
        '200':
          $ref: '#/components/responses/UpdateSharedLinkResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              sharedLink: {
                download_url: 'https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg',
                target_id: 'string',
                scope: 'company',
                password: 'string',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.fileStorage.sharedLinksUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.sharedLinks
      x-speakeasy-name-override: update
    delete:
      operationId: fileStorage.sharedLinksDelete
      summary: Delete Shared Link
      description: Delete Shared Link
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteSharedLinkResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.sharedLinksDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.sharedLinks
      x-speakeasy-name-override: delete
  /file-storage/upload-sessions:
    post:
      operationId: fileStorage.uploadSessionsAdd
      summary: Start Upload Session
      description: 'Start an Upload Session. Upload sessions are used to upload large files, use the [Upload File](#operation/filesUpload) endpoint to upload smaller files (up to 100MB). Note that the base URL is upload.apideck.com instead of unify.apideck.com. For more information on uploads, refer to the [file upload guide](/guides/file-upload).'
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUploadSessionRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateUploadSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      servers:
        - url: 'https://upload.apideck.com'
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              uploadSession: {
                name: 'Documents',
                parent_folder_id: '1234',
                drive_id: '1234',
                size: 1810673,
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.fileStorage.uploadSessionsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.uploadSessions
      x-speakeasy-name-override: create
  '/file-storage/upload-sessions/{id}':
    get:
      operationId: fileStorage.uploadSessionsOne
      summary: Get Upload Session
      description: 'Get Upload Session. Use the `part_size` to split your file into parts. Upload the parts to the [Upload part of File](#operation/uploadSessionsUpload) endpoint. Note that the base URL is upload.apideck.com instead of unify.apideck.com. For more information on uploads, refer to the [file upload guide](/guides/file-upload).'
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetUploadSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      servers:
        - url: 'https://upload.apideck.com'
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.uploadSessionsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.uploadSessions
      x-speakeasy-name-override: get
    delete:
      operationId: fileStorage.uploadSessionsDelete
      summary: Abort Upload Session
      description: 'Abort Upload Session. Note that the base URL is upload.apideck.com instead of unify.apideck.com. For more information on uploads, refer to the [file upload guide](/guides/file-upload).'
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteUploadSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.uploadSessionsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.uploadSessions
      x-speakeasy-name-override: delete
  '/file-storage/upload-sessions/{id}/finish':
    post:
      operationId: fileStorage.uploadSessionsFinish
      summary: Finish Upload Session
      description: 'Finish Upload Session. Only call this endpoint after all File parts have been uploaded to [Upload part of File](#operation/uploadSessionsUpload). Note that the base URL is upload.apideck.com instead of unify.apideck.com. For more information on uploads, refer to the [file upload guide](/guides/file-upload).'
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/digestPart'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
      responses:
        '201':
          $ref: '#/components/responses/GetFileResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      servers:
        - url: 'https://upload.apideck.com'
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-apideck-gotchas:
        - connector: box
          description: 'Box requires a SHA1 digest of the whole file to be sent when committing the upload session. More info in the Box API documentation [here](https://developer.box.com/reference/post-files-upload-sessions-id-commit/#param-digest).'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID',
              digest: 'REPLACE_WITH_DIGEST'
            })

            try {
              const { data } = await apideck.fileStorage.uploadSessionsFinish({
                id: 'id_example',
                uploadSessionsFinish: {}
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.uploadSessions
      x-speakeasy-name-override: finish
  /file-storage/drives:
    get:
      operationId: fileStorage.drivesAll
      summary: List Drives
      description: List Drives
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/drivesFilter'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetDrivesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-apideck-gotchas:
        - connector: google-drive
          description: 'Google drive does not provide `previous` cursor information, so the cursors for the previous pages will be empty.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.drivesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.drives
      x-speakeasy-name-override: list
    post:
      operationId: fileStorage.drivesAdd
      summary: Create Drive
      description: Create Drive
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drive'
      responses:
        '201':
          $ref: '#/components/responses/CreateDriveResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              drive: {
                name: 'Project Resources',
                description: 'A description',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.fileStorage.drivesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.drives
      x-speakeasy-name-override: create
  '/file-storage/drives/{id}':
    get:
      operationId: fileStorage.drivesOne
      summary: Get Drive
      description: Get Drive
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetDriveResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.drivesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.drives
      x-speakeasy-name-override: get
    patch:
      operationId: fileStorage.drivesUpdate
      summary: Update Drive
      description: Update Drive
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Drive'
      responses:
        '200':
          $ref: '#/components/responses/UpdateDriveResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              drive: {
                name: 'Project Resources',
                description: 'A description',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.fileStorage.drivesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.drives
      x-speakeasy-name-override: update
    delete:
      operationId: fileStorage.drivesDelete
      summary: Delete Drive
      description: Delete Drive
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteDriveResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.drivesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.drives
      x-speakeasy-name-override: delete
  /file-storage/drive-groups:
    get:
      operationId: fileStorage.driveGroupsAll
      summary: List DriveGroups
      description: List DriveGroups
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/driveGroupsFilter'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetDriveGroupsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.driveGroupsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.driveGroups
      x-speakeasy-name-override: list
    post:
      operationId: fileStorage.driveGroupsAdd
      summary: Create DriveGroup
      description: Create DriveGroup
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriveGroup'
      responses:
        '201':
          $ref: '#/components/responses/CreateDriveGroupResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              driveGroup: {
                name: 'accounting',
                display_name: 'accounting',
                description: 'A description',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.fileStorage.driveGroupsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.driveGroups
      x-speakeasy-name-override: create
  '/file-storage/drive-groups/{id}':
    get:
      operationId: fileStorage.driveGroupsOne
      summary: Get DriveGroup
      description: Get DriveGroup
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetDriveGroupResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.driveGroupsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.driveGroups
      x-speakeasy-name-override: get
    patch:
      operationId: fileStorage.driveGroupsUpdate
      summary: Update DriveGroup
      description: Update DriveGroup
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriveGroup'
      responses:
        '200':
          $ref: '#/components/responses/UpdateDriveGroupResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              driveGroup: {
                name: 'accounting',
                display_name: 'accounting',
                description: 'A description',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.fileStorage.driveGroupsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.driveGroups
      x-speakeasy-name-override: update
    delete:
      operationId: fileStorage.driveGroupsDelete
      summary: Delete DriveGroup
      description: Delete DriveGroup
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteDriveGroupResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - fileStorage
      x-apideck-api: fileStorage
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.fileStorage.driveGroupsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: fileStorage.driveGroups
      x-speakeasy-name-override: delete
  /hris/employees:
    get:
      operationId: hris.employeesAll
      summary: List Employees
      description: 'Apideck operates as a stateless Unified API, which means that the list endpoint only provides a portion of the employee model. This is due to the fact that most HRIS systems do not readily provide all data in every call. However, you can access the complete employee model through an employee detail call.'
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/employeesFilter'
        - $ref: '#/components/parameters/employeesSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetEmployeesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-apideck-gotchas:
        - connector: nmbrs
          description: 'We keep track of the "List Employees" response for NMBRS virtual webhooks events, which contains fewer fields compared to the "Get Employee" response.'
        - connector: ceridian-dayforce
          description: 'For virtual webhook events on Ceridian Dayforce, we monitor the "List Employees" response, which has a very small set of fields in comparison to the "Get Employee" response. This is the reason why we only support `hris.employee.created` events for this connector.'
        - connector: freshteam
          description: 'The minimum pagination `limit` is 50, since Freshteam does not support pagination with a lower limit. Pagination for Freshteam only support per 50 limits.'
        - connector: hibob
          description: 'Hibob allows you to define employee fields that aren''t included by default on the ''List Employees'' response. By using the fields parameter, you can specifically request these properties to be part of your response. Additionally, if your Unify plan has the ''Custom Field Mapping'' feature, you can map these properties to your responses. Once mapped, they will be included in the custom_mappings property within Unify responses. Important to know is that Hibob has permission controls for users to determine which data will be available on their API. This can lead to the `birthday` not being available.'
        - connector: paylocity
          description: 'For virtual webhook events on Paylocity, we monitor the "List Employees" response, which has a very small set of fields in comparison of the "Get Employee" response.'
        - connector: sage-hr
          description: 'The minimum pagination `limit` is 50, since Sage HR does not support pagination with a lower limit. Pagination for Sage HR only support per 50 limits.'
        - connector: sap-successfactors
          description: The custom fields are mapped only when they are in the personalInfoNav.
        - connector: hr-works
          description: The employment_status supports filtering on 'active'.
        - connector: bamboohr
          description: 'The employment role field will return "other" for list calls when the employee is terminated. To fetch the correct employment role data, you need to call the employee detail endpoint.'
        - connector: rippling
          description: 'Include pass_through[include_terminated] in the query params to include terminated employees in the response.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.employeesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.employees
      x-speakeasy-name-override: list
    post:
      operationId: hris.employeesAdd
      summary: Create Employee
      description: Create Employee
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '201':
          $ref: '#/components/responses/CreateEmployeeResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-apideck-gotchas:
        - connector: hibob
          description: |
            When creating an employee is required by Hibob to include the following Unifiy fields: first_name, last_name, employment_start_date, jobs[0].location.name and an email with a primary type must be provided within the emails field.
            For countries hibob doesn't accept iso code or name values so just the country common name. Example 'United States'
            HiBob API just accepts one compensation, so for the request it will be considered the first one sent in the array and the payment unit is sent yearly by default.
        - connector: humaans-io
          description: |
            When creating an employee in Humaans, it is mandatory to include the following Unify fields: first_name, last_name, title, employment_start_date, jobs[0].location.id. Additionally, within the 'emails' field, you must provide an email with a 'primary' type. Furthermore, if the employee is remote, the primary address city will be used as the remote city, and this value should be valid."
        - connector: nmbrs
          description: |
            When creating an employee, the `employment_role.type` values accepted for NMbrs are `employee`, `contractor` and `freelance`.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              employee: {
                id: '12345',
                first_name: 'Elon',
                last_name: 'Musk',
                middle_name: 'D.',
                display_name: 'Technoking',
                preferred_name: 'Elon Musk',
                initials: 'EM',
                salutation: 'Mr',
                title: 'CEO',
                marital_status: 'married',
                partner: {
                  first_name: 'Elon',
                  last_name: 'Musk',
                  middle_name: 'D.',
                  gender: 'male',
                  initials: 'EM',
                  birthday: '2000-08-12',
                  deceased_on: '2000-08-12'
                },
                division: 'Europe',
                division_id: '12345',
                department: 'R&D',
                department_id: '12345',
                department_name: '12345',
                team: {
                  id: '1234',
                  name: 'Full Stack Engineers'
                },
                company_id: '23456',
                company_name: 'SpaceX',
                employment_start_date: '2021-10-26',
                employment_end_date: '2028-10-26',
                leaving_reason: 'resigned',
                employee_number: '123456-AB',
                employment_status: 'active',
                employment_role: {
                  type: 'contractor',
                  sub_type: 'full_time'
                },
                ethnicity: 'African American',
                manager: {
                  id: '12345',
                  name: 'Elon Musk',
                  first_name: 'Elon',
                  last_name: 'Musk',
                  email: 'elon@musk.com',
                  employment_status: 'active'
                },
                direct_reports: [
                  'a0d636c6-43b3-4bde-8c70-85b707d992f4',
                  'a98lfd96-43b3-4bde-8c70-85b707d992e6'
                ],
                social_security_number: '123456789',
                birthday: '2000-08-12',
                deceased_on: '2000-08-12',
                country_of_birth: 'US',
                description: 'A description',
                gender: 'male',
                pronouns: 'she,her',
                preferred_language: 'EN',
                languages: ['EN'],
                nationalities: ['US'],
                photo_url: 'https://unavatar.io/elon-musk',
                timezone: 'Europe/London',
                source: 'lever',
                source_id: '12345',
                record_url: 'https://app.intercom.io/contacts/12345',
                jobs: [
                  {
                    title: 'CEO',
                    role: 'Sales',
                    start_date: '2020-08-12',
                    end_date: '2020-08-12',
                    compensation_rate: 72000,
                    currency: 'USD',
                    payment_unit: 'year',
                    hired_at: '2020-08-12',
                    is_primary: true,
                    is_manager: true,
                    status: 'active',
                    location: {
                      id: '123',
                      type: 'primary',
                      string: '25 Spring Street, Blackburn, VIC 3130',
                      name: 'HQ US',
                      line1: 'Main street',
                      line2: 'apt #',
                      line3: 'Suite #',
                      line4: 'delivery instructions',
                      street_number: '25',
                      city: 'San Francisco',
                      state: 'CA',
                      postal_code: '94104',
                      country: 'US',
                      latitude: '40.759211',
                      longitude: '-73.984638',
                      county: 'Santa Clara',
                      contact_name: 'Elon Musk',
                      salutation: 'Mr',
                      phone_number: '111-111-1111',
                      fax: '122-111-1111',
                      email: 'elon@musk.com',
                      website: 'https://elonmusk.com',
                      notes: 'Address notes or delivery instructions.',
                      row_version: '1-12345'
                    }
                  }
                ],
                compensations: [
                  {
                    id: '3404301363494309004',
                    job_id: '3490439050957906679',
                    rate: 50,
                    payment_unit: 'hour',
                    flsa_status: 'nonexempt',
                    effective_date: '2021-06-11'
                  }
                ],
                works_remote: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck',
                    type: 'twitter'
                  }
                ],
                bank_accounts: [
                  {
                    bank_name: 'Monzo',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    routing_number: '012345678',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    currency: 'USD'
                  }
                ],
                tax_code: '1111',
                tax_id: '234-32-0000',
                dietary_preference: 'Veggie',
                food_allergies: ['No allergies'],
                probation_period: {
                  start_date: '2021-10-01',
                  end_date: '2021-11-28'
                },
                tags: ['New'],
                row_version: '1-12345',
                deleted: true,
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.hris.employeesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.employees
      x-speakeasy-name-override: create
  '/hris/employees/{id}':
    get:
      operationId: hris.employeesOne
      summary: Get Employee
      description: Get Employee
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/employeesOneFilter'
        - $ref: '#/components/parameters/passThrough'
      responses:
        '200':
          $ref: '#/components/responses/GetEmployeeResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-apideck-gotchas:
        - connector: hibob
          description: 'Hibob allows you to define employee fields that aren''t included by default on the ''Get Employee'' response. By using the fields parameter, you can specifically request these properties to be part of your response. Additionally, if your Unify plan has the ''Custom Field Mapping'' feature, you can map these properties to your responses. Once mapped, they will be included in the custom_mappings property within Unify responses. Important to know is that Hibob has permission controls for users to determine which data will be available on their API. This can lead to the `birthday` not being available.'
        - connector: sap-successfactors
          description: The custom fields are mapped only when they are in the personalInfoNav.
        - connector: charliehr
          description: 'The jobs array compensation data includes only the data related to the first compensation. For more comprehensive compensation data, please refer to the compensations array.'
        - connector: sympa
          description: The employment end data and jobs array are only available on the 'Get Employee' response.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.employeesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.employees
      x-speakeasy-name-override: get
    patch:
      operationId: hris.employeesUpdate
      summary: Update Employee
      description: Update Employee
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          $ref: '#/components/responses/UpdateEmployeeResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-apideck-gotchas:
        - connector: hibob
          description: 'Certain fields like address, compensations, and title cannot be updated via the HiBob API.'
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              employee: {
                id: '12345',
                first_name: 'Elon',
                last_name: 'Musk',
                middle_name: 'D.',
                display_name: 'Technoking',
                preferred_name: 'Elon Musk',
                initials: 'EM',
                salutation: 'Mr',
                title: 'CEO',
                marital_status: 'married',
                partner: {
                  first_name: 'Elon',
                  last_name: 'Musk',
                  middle_name: 'D.',
                  gender: 'male',
                  initials: 'EM',
                  birthday: '2000-08-12',
                  deceased_on: '2000-08-12'
                },
                division: 'Europe',
                division_id: '12345',
                department: 'R&D',
                department_id: '12345',
                department_name: '12345',
                team: {
                  id: '1234',
                  name: 'Full Stack Engineers'
                },
                company_id: '23456',
                company_name: 'SpaceX',
                employment_start_date: '2021-10-26',
                employment_end_date: '2028-10-26',
                leaving_reason: 'resigned',
                employee_number: '123456-AB',
                employment_status: 'active',
                employment_role: {
                  type: 'contractor',
                  sub_type: 'full_time'
                },
                ethnicity: 'African American',
                manager: {
                  id: '12345',
                  name: 'Elon Musk',
                  first_name: 'Elon',
                  last_name: 'Musk',
                  email: 'elon@musk.com',
                  employment_status: 'active'
                },
                direct_reports: [
                  'a0d636c6-43b3-4bde-8c70-85b707d992f4',
                  'a98lfd96-43b3-4bde-8c70-85b707d992e6'
                ],
                social_security_number: '123456789',
                birthday: '2000-08-12',
                deceased_on: '2000-08-12',
                country_of_birth: 'US',
                description: 'A description',
                gender: 'male',
                pronouns: 'she,her',
                preferred_language: 'EN',
                languages: ['EN'],
                nationalities: ['US'],
                photo_url: 'https://unavatar.io/elon-musk',
                timezone: 'Europe/London',
                source: 'lever',
                source_id: '12345',
                record_url: 'https://app.intercom.io/contacts/12345',
                jobs: [
                  {
                    title: 'CEO',
                    role: 'Sales',
                    start_date: '2020-08-12',
                    end_date: '2020-08-12',
                    compensation_rate: 72000,
                    currency: 'USD',
                    payment_unit: 'year',
                    hired_at: '2020-08-12',
                    is_primary: true,
                    is_manager: true,
                    status: 'active',
                    location: {
                      id: '123',
                      type: 'primary',
                      string: '25 Spring Street, Blackburn, VIC 3130',
                      name: 'HQ US',
                      line1: 'Main street',
                      line2: 'apt #',
                      line3: 'Suite #',
                      line4: 'delivery instructions',
                      street_number: '25',
                      city: 'San Francisco',
                      state: 'CA',
                      postal_code: '94104',
                      country: 'US',
                      latitude: '40.759211',
                      longitude: '-73.984638',
                      county: 'Santa Clara',
                      contact_name: 'Elon Musk',
                      salutation: 'Mr',
                      phone_number: '111-111-1111',
                      fax: '122-111-1111',
                      email: 'elon@musk.com',
                      website: 'https://elonmusk.com',
                      notes: 'Address notes or delivery instructions.',
                      row_version: '1-12345'
                    }
                  }
                ],
                compensations: [
                  {
                    id: '3404301363494309004',
                    job_id: '3490439050957906679',
                    rate: 50,
                    payment_unit: 'hour',
                    flsa_status: 'nonexempt',
                    effective_date: '2021-06-11'
                  }
                ],
                works_remote: true,
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                custom_fields: [
                  {
                    id: '2389328923893298',
                    name: 'employee_level',
                    description: 'Employee Level',
                    value: 'Uses Salesforce and Marketo'
                  }
                ],
                social_links: [
                  {
                    id: '12345',
                    url: 'https://www.twitter.com/apideck',
                    type: 'twitter'
                  }
                ],
                bank_accounts: [
                  {
                    bank_name: 'Monzo',
                    account_number: '123465',
                    account_name: 'SPACEX LLC',
                    account_type: 'credit_card',
                    iban: 'CH2989144532982975332',
                    bic: 'AUDSCHGGXXX',
                    routing_number: '012345678',
                    bsb_number: '062-001',
                    branch_identifier: '001',
                    bank_code: 'BNH',
                    currency: 'USD'
                  }
                ],
                tax_code: '1111',
                tax_id: '234-32-0000',
                dietary_preference: 'Veggie',
                food_allergies: ['No allergies'],
                probation_period: {
                  start_date: '2021-10-01',
                  end_date: '2021-11-28'
                },
                tags: ['New'],
                row_version: '1-12345',
                deleted: true,
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.hris.employeesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.employees
      x-speakeasy-name-override: update
    delete:
      operationId: hris.employeesDelete
      summary: Delete Employee
      description: Delete Employee
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteEmployeeResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.employeesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.employees
      x-speakeasy-name-override: delete
  /hris/companies:
    get:
      operationId: hris.companiesAll
      summary: List Companies
      description: List Companies
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetHrisCompaniesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.companiesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.companies
      x-speakeasy-name-override: list
    post:
      operationId: hris.companiesAdd
      summary: Create Company
      description: Create Company
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HrisCompany'
      responses:
        '201':
          $ref: '#/components/responses/CreateHrisCompanyResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              company: {
                legal_name: 'SpaceX',
                display_name: 'SpaceX',
                subdomain: 'company',
                status: 'active',
                company_number: '123456-AB',
                currency: 'USD',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                debtor_id: '12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.hris.companiesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.companies
      x-speakeasy-name-override: create
  '/hris/companies/{id}':
    get:
      operationId: hris.companiesOne
      summary: Get Company
      description: Get Company
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetHrisCompanyResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.companiesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.companies
      x-speakeasy-name-override: get
    patch:
      operationId: hris.companiesUpdate
      summary: Update Company
      description: Update Company
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HrisCompany'
      responses:
        '200':
          $ref: '#/components/responses/UpdateHrisCompanyResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              company: {
                legal_name: 'SpaceX',
                display_name: 'SpaceX',
                subdomain: 'company',
                status: 'active',
                company_number: '123456-AB',
                currency: 'USD',
                addresses: [
                  {
                    id: '123',
                    type: 'primary',
                    string: '25 Spring Street, Blackburn, VIC 3130',
                    name: 'HQ US',
                    line1: 'Main street',
                    line2: 'apt #',
                    line3: 'Suite #',
                    line4: 'delivery instructions',
                    street_number: '25',
                    city: 'San Francisco',
                    state: 'CA',
                    postal_code: '94104',
                    country: 'US',
                    latitude: '40.759211',
                    longitude: '-73.984638',
                    county: 'Santa Clara',
                    contact_name: 'Elon Musk',
                    salutation: 'Mr',
                    phone_number: '111-111-1111',
                    fax: '122-111-1111',
                    email: 'elon@musk.com',
                    website: 'https://elonmusk.com',
                    notes: 'Address notes or delivery instructions.',
                    row_version: '1-12345'
                  }
                ],
                phone_numbers: [
                  {
                    id: '12345',
                    country_code: '1',
                    area_code: '323',
                    number: '111-111-1111',
                    extension: '105',
                    type: 'primary'
                  }
                ],
                emails: [
                  {
                    id: '123',
                    email: 'elon@musk.com',
                    type: 'primary'
                  }
                ],
                websites: [
                  {
                    id: '12345',
                    url: 'http://example.com',
                    type: 'primary'
                  }
                ],
                debtor_id: '12345',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.hris.companiesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.companies
      x-speakeasy-name-override: update
    delete:
      operationId: hris.companiesDelete
      summary: Delete Company
      description: Delete Company
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteHrisCompanyResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.companiesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.companies
      x-speakeasy-name-override: delete
  /hris/departments:
    get:
      operationId: hris.departmentsAll
      summary: List Departments
      description: List Departments
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetDepartmentsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-apideck-gotchas:
        - connector: humaans-io
          description: Departments are mapped to teams in Humaans. Increase the limit for this API call to 200 to get the most accurate data back. The teams are inferred from number of employees defined by the limit parameter (default 20).
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.departmentsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.departments
      x-speakeasy-name-override: list
    post:
      operationId: hris.departmentsAdd
      summary: Create Department
      description: Create Department
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '201':
          $ref: '#/components/responses/CreateDepartmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              department: {
                name: 'R&D',
                code: '2',
                description: 'R&D',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.hris.departmentsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.departments
      x-speakeasy-name-override: create
  '/hris/departments/{id}':
    get:
      operationId: hris.departmentsOne
      summary: Get Department
      description: Get Department
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetDepartmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.departmentsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.departments
      x-speakeasy-name-override: get
    patch:
      operationId: hris.departmentsUpdate
      summary: Update Department
      description: Update Department
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
      responses:
        '200':
          $ref: '#/components/responses/UpdateDepartmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              department: {
                name: 'R&D',
                code: '2',
                description: 'R&D',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.hris.departmentsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.departments
      x-speakeasy-name-override: update
    delete:
      operationId: hris.departmentsDelete
      summary: Delete Department
      description: Delete Department
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteDepartmentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.departmentsDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.departments
      x-speakeasy-name-override: delete
  /hris/payrolls:
    get:
      operationId: hris.payrollsAll
      summary: List Payroll
      description: List Payroll
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/payrollsFilter'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetPayrollsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.payrollsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.payrolls
      x-speakeasy-name-override: list
  '/hris/payrolls/{payroll_id}':
    get:
      operationId: hris.payrollsOne
      summary: Get Payroll
      description: Get Payroll
      parameters:
        - $ref: '#/components/parameters/payrollId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetPayrollResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.payrollsOne({
                payrollId: 'payroll_id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.payrolls
      x-speakeasy-name-override: get
  '/hris/payrolls/employees/{employee_id}':
    get:
      operationId: hris.employeePayrollsAll
      summary: List Employee Payrolls
      description: List payrolls for employee
      parameters:
        - $ref: '#/components/parameters/employeeId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/payrollsFilter'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetEmployeePayrollsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.employeePayrollsAll({
                employeeId: 'employee_id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.employeePayrolls
      x-speakeasy-name-override: list
  '/hris/payrolls/employees/{employee_id}/payrolls/{payroll_id}':
    get:
      operationId: hris.employeePayrollsOne
      summary: Get Employee Payroll
      description: Get payroll for employee
      parameters:
        - $ref: '#/components/parameters/payrollId'
        - $ref: '#/components/parameters/employeeId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetEmployeePayrollResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              payrollId: 'payroll_id_example',
              employeeId: 'employee_id_example'
            }

            try {
              const { data } = await apideck.hris.employeePayrollsOne(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.employeePayrolls
      x-speakeasy-name-override: get
  '/hris/schedules/employees/{employee_id}':
    get:
      operationId: hris.employeeSchedulesAll
      summary: List Employee Schedules
      description: 'List schedules for employee, a schedule is a work pattern, not the actual worked hours, for an employee.'
      parameters:
        - $ref: '#/components/parameters/employeeId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetEmployeeSchedulesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.employeeSchedulesAll({
                employeeId: 'employee_id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.employeeSchedules
      x-speakeasy-name-override: list
  /hris/time-off-requests:
    get:
      operationId: hris.timeOffRequestsAll
      summary: List Time Off Requests
      description: List Time Off Requests
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/timeOffRequestsFilter'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetTimeOffRequestsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-apideck-gotchas:
        - connector: bamboohr
          description: 'BambooHR requires start_date and end_date parameters to successfully retrieve time off requests. These optional Unify parameters can be sent as filters[start_date] and filters[end_date]. If there are not present, they are sent to BambooHR with the default values of ''1900-01-01'' & ''2100-12-31'' respectively.'
        - connector: hr-works
          description: 'In HR Works the start_date and end_date are required fields and the maximum date interval is one year between start_date and end_date. It doesn''t support pagination right now, it can be created as per customer request.'
        - connector: kenjo
          description: |
            In Kenjo the start_date and end_date are required fields and the maximum date interval is 92 days. We do not support Processed, inApproval and CancelledAfterProcessed filters from Kenjo.
        - connector: payfit
          description: |
            In Payfit the start_date parameter is supported only and will provide data of that specific month only. This endpoint is only available for French companies.
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.hris.timeOffRequestsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.timeOffRequests
      x-speakeasy-name-override: list
    post:
      operationId: hris.timeOffRequestsAdd
      summary: Create Time Off Request
      description: Create Time Off Request
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateTimeOffRequestResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              timeOffRequest: {
                employee_id: '12345',
                policy_id: '12345',
                status: 'approved',
                description: 'Enjoying some sun.',
                start_date: '2022-04-01',
                end_date: '2022-04-01',
                request_date: '2022-03-21',
                request_type: 'vacation',
                approval_date: '2022-03-21',
                units: 'hours',
                amount: 3.5,
                day_part: 'morning',
                notes: {
                  employee: 'Relaxing on the beach for a few hours.',
                  manager: 'Enjoy!'
                },
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ],
                policy_type: 'sick'
              }
            }

            try {
              const { data } = await apideck.hris.timeOffRequestsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.timeOffRequests
      x-speakeasy-name-override: create
  '/hris/time-off-requests/employees/{employee_id}/time-off-requests/{id}':
    get:
      operationId: hris.timeOffRequestsOne
      summary: Get Time Off Request
      description: Get Time Off Request
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/employeeId'
      responses:
        '200':
          $ref: '#/components/responses/GetTimeOffRequestResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              employeeId: 'employee_id_example'
            }

            try {
              const { data } = await apideck.hris.timeOffRequestsOne(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.timeOffRequests
      x-speakeasy-name-override: get
    patch:
      operationId: hris.timeOffRequestsUpdate
      summary: Update Time Off Request
      description: Update Time Off Request
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/employeeId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateTimeOffRequestResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              employeeId: 'employee_id_example',
              timeOffRequest: {
                employee_id: '12345',
                policy_id: '12345',
                status: 'approved',
                description: 'Enjoying some sun.',
                start_date: '2022-04-01',
                end_date: '2022-04-01',
                request_date: '2022-03-21',
                request_type: 'vacation',
                approval_date: '2022-03-21',
                units: 'hours',
                amount: 3.5,
                day_part: 'morning',
                notes: {
                  employee: 'Relaxing on the beach for a few hours.',
                  manager: 'Enjoy!'
                },
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ],
                policy_type: 'sick'
              }
            }

            try {
              const { data } = await apideck.hris.timeOffRequestsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.timeOffRequests
      x-speakeasy-name-override: update
    delete:
      operationId: hris.timeOffRequestsDelete
      summary: Delete Time Off Request
      description: Delete Time Off Request
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/employeeId'
      responses:
        '200':
          $ref: '#/components/responses/DeleteTimeOffRequestResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - hris
      x-apideck-api: hris
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              employeeId: 'employee_id_example'
            }

            try {
              const { data } = await apideck.hris.timeOffRequestsDelete(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: hris.timeOffRequests
      x-speakeasy-name-override: delete
  /sms/messages:
    get:
      operationId: sms.messagesAll
      summary: List Messages
      description: List Messages
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetMessagesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - sms
      x-apideck-api: sms
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.sms.messagesAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: sms.messages
      x-speakeasy-name-override: list
    post:
      operationId: sms.messagesAdd
      summary: Create Message
      description: Create Message
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          $ref: '#/components/responses/CreateMessageResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - sms
      x-apideck-api: sms
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              message: {
                from: '+15017122661',
                to: '+15017122662',
                subject: 'Picture',
                body: 'Hi! How are you doing?',
                type: 'sms',
                scheduled_at: '2020-09-30T07:43:32.000Z',
                webhook_url: 'https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms',
                reference: 'CUST001',
                messaging_service_id: '123456',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.sms.messagesAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: sms.messages
      x-speakeasy-name-override: create
  '/sms/messages/{id}':
    get:
      operationId: sms.messagesOne
      summary: Get Message
      description: Get Message
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetMessageResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - sms
      x-apideck-api: sms
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.sms.messagesOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: sms.messages
      x-speakeasy-name-override: get
    patch:
      operationId: sms.messagesUpdate
      summary: Update Message
      description: Update Message
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          $ref: '#/components/responses/UpdateMessageResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - sms
      x-apideck-api: sms
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              message: {
                from: '+15017122661',
                to: '+15017122662',
                subject: 'Picture',
                body: 'Hi! How are you doing?',
                type: 'sms',
                scheduled_at: '2020-09-30T07:43:32.000Z',
                webhook_url: 'https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms',
                reference: 'CUST001',
                messaging_service_id: '123456',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.sms.messagesUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: sms.messages
      x-speakeasy-name-override: update
    delete:
      operationId: sms.messagesDelete
      summary: Delete Message
      description: Delete Message
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
      responses:
        '200':
          $ref: '#/components/responses/DeleteMessageResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - sms
      x-apideck-api: sms
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.sms.messagesDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: sms.messages
      x-speakeasy-name-override: delete
  /issue-tracking/collections:
    get:
      operationId: issueTracking.collectionsAll
      summary: List Collections
      description: List Collections
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/collectionsSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCollectionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.issueTracking.collectionsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collections
      x-speakeasy-name-override: list
  '/issue-tracking/collections/{collection_id}':
    get:
      operationId: issueTracking.collectionsOne
      summary: Get Collection
      description: Get Collection
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCollectionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.issueTracking.collectionsOne({
                collectionId: 'collection_id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collections
      x-speakeasy-name-override: get
  '/issue-tracking/collections/{collection_id}/tickets':
    get:
      operationId: issueTracking.collectionTicketsAll
      summary: List Tickets
      description: List Tickets
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/ticketsSort'
        - $ref: '#/components/parameters/issuesFilter'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetTicketsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.issueTracking.collectionTicketsAll({
                collectionId: 'collection_id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionTickets
      x-speakeasy-name-override: list
    post:
      operationId: issueTracking.collectionTicketsAdd
      summary: Create Ticket
      description: Create Ticket
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '201':
          $ref: '#/components/responses/CreateTicketResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              collectionId: 'collection_id_example',
              collectionTicket: {
                parent_id: '12345',
                type: 'Technical',
                subject: 'Technical Support Request',
                description: 'I am facing issues with my internet connection',
                status: 'open',
                priority: 'high',
                assignees: [
                  {
                    id: '12345'
                  }
                ],
                due_date: '2020-09-30T07:43:32.000Z',
                tags: [
                  {
                    id: '12345'
                  }
                ],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.issueTracking.collectionTicketsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionTickets
      x-speakeasy-name-override: create
  '/issue-tracking/collections/{collection_id}/tickets/{ticket_id}':
    get:
      operationId: issueTracking.collectionTicketsOne
      summary: Get Ticket
      description: Get Ticket
      parameters:
        - $ref: '#/components/parameters/ticketId'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetTicketResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              ticketId: 'ticket_id_example',
              collectionId: 'collection_id_example'
            }

            try {
              const { data } = await apideck.issueTracking.collectionTicketsOne(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionTickets
      x-speakeasy-name-override: get
    patch:
      operationId: issueTracking.collectionTicketsUpdate
      summary: Update Ticket
      description: Update Ticket
      parameters:
        - $ref: '#/components/parameters/ticketId'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '200':
          $ref: '#/components/responses/UpdateTicketResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              ticketId: 'ticket_id_example',
              collectionId: 'collection_id_example',
              collectionTicket: {
                parent_id: '12345',
                type: 'Technical',
                subject: 'Technical Support Request',
                description: 'I am facing issues with my internet connection',
                status: 'open',
                priority: 'high',
                assignees: [
                  {
                    id: '12345'
                  }
                ],
                due_date: '2020-09-30T07:43:32.000Z',
                tags: [
                  {
                    id: '12345'
                  }
                ],
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.issueTracking.collectionTicketsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionTickets
      x-speakeasy-name-override: update
    delete:
      operationId: issueTracking.collectionTicketsDelete
      summary: Delete Ticket
      description: Delete Ticket
      parameters:
        - $ref: '#/components/parameters/ticketId'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/collectionId'
      responses:
        '200':
          $ref: '#/components/responses/DeleteTicketResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              ticketId: 'ticket_id_example',
              collectionId: 'collection_id_example'
            }

            try {
              const { data } = await apideck.issueTracking.collectionTicketsDelete(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionTickets
      x-speakeasy-name-override: delete
  '/issue-tracking/collections/{collection_id}/tickets/{ticket_id}/comments':
    get:
      operationId: issueTracking.collectionTicketCommentsAll
      summary: List Comments
      description: List Comments
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/ticketId'
        - $ref: '#/components/parameters/commentsSort'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCommentsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              collectionId: 'collection_id_example',
              ticketId: 'ticket_id_example'
            }

            try {
              const { data } = await apideck.issueTracking.collectionTicketCommentsAll(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionTicketComments
      x-speakeasy-name-override: list
    post:
      operationId: issueTracking.collectionTicketCommentsAdd
      summary: Create Comment
      description: Create Comment
      parameters:
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/ticketId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionTicketComment'
      responses:
        '201':
          $ref: '#/components/responses/CreateCommentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              collectionId: 'collection_id_example',
              ticketId: 'ticket_id_example',
              collectionTicketComment: {
                body: 'What internet provider do you use?',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.issueTracking.collectionTicketCommentsAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionTicketComments
      x-speakeasy-name-override: create
  '/issue-tracking/collections/{collection_id}/tickets/{ticket_id}/comments/{id}':
    get:
      operationId: issueTracking.collectionTicketCommentsOne
      summary: Get Comment
      description: Get Comment
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/ticketId'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCommentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              collectionId: 'collection_id_example',
              ticketId: 'ticket_id_example'
            }

            try {
              const { data } = await apideck.issueTracking.collectionTicketCommentsOne(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionTicketComments
      x-speakeasy-name-override: get
    patch:
      operationId: issueTracking.collectionTicketCommentsUpdate
      summary: Update Comment
      description: Update Comment
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/ticketId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionTicketComment'
      responses:
        '200':
          $ref: '#/components/responses/UpdateCommentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              collectionId: 'collection_id_example',
              ticketId: 'ticket_id_example',
              collectionTicketComment: {
                body: 'What internet provider do you use?',
                pass_through: [
                  {
                    service_id: 'string',
                    operation_id: 'string',
                    extend_object: {},
                    extend_paths: [
                      {
                        path: '$.nested.property',
                        value: [Object]
                      }
                    ]
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.issueTracking.collectionTicketCommentsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionTicketComments
      x-speakeasy-name-override: update
    delete:
      operationId: issueTracking.collectionTicketCommentsDelete
      summary: Delete Comment
      description: Delete Comment
      parameters:
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/ticketId'
      responses:
        '200':
          $ref: '#/components/responses/DeleteCommentResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              id: 'id_example',
              collectionId: 'collection_id_example',
              ticketId: 'ticket_id_example'
            }

            try {
              const { data } = await apideck.issueTracking.collectionTicketCommentsDelete(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionTicketComments
      x-speakeasy-name-override: delete
  '/issue-tracking/collections/{collection_id}/users':
    get:
      operationId: issueTracking.collectionUsersAll
      summary: List Users
      description: List Users
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCollectionUsersResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.issueTracking.collectionUsersAll({
                collectionId: 'collection_id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionUsers
      x-speakeasy-name-override: list
  '/issue-tracking/collections/{collection_id}/users/{id}':
    get:
      operationId: issueTracking.collectionUsersOne
      summary: Get user
      description: Get user
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCollectionUserResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              collectionId: 'collection_id_example',
              id: 'id_example'
            }

            try {
              const { data } = await apideck.issueTracking.collectionUsersOne(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionUsers
      x-speakeasy-name-override: get
  '/issue-tracking/collections/{collection_id}/tags':
    get:
      operationId: issueTracking.collectionTagsAll
      summary: List Tags
      description: List Tags
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/raw'
        - $ref: '#/components/parameters/consumerId'
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/serviceId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/passThrough'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          $ref: '#/components/responses/GetCollectionTagsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - issueTracking
      x-apideck-api: issueTracking
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.issueTracking.collectionTagsAll({
                collectionId: 'collection_id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: issueTracking.collectionTags
      x-speakeasy-name-override: list
  /connector/connectors:
    get:
      operationId: connector.connectorsAll
      summary: List Connectors
      description: List Connectors
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/connectors_filter'
      responses:
        '200':
          $ref: '#/components/responses/GetConnectorsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - connector
      x-apideck-api: connector
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.connector.connectorsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: connector.connectors
      x-speakeasy-name-override: list
  '/connector/connectors/{id}':
    get:
      operationId: connector.connectorsOne
      summary: Get Connector
      description: Get Connector
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/GetConnectorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - connector
      x-apideck-api: connector
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.connector.connectorsOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: connector.connectors
      x-speakeasy-name-override: get
  '/connector/connectors/{id}/docs/{doc_id}':
    get:
      operationId: connector.connectorDocsOne
      summary: Get Connector Doc content
      description: Get Connector Doc content
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/doc_id'
      responses:
        '200':
          $ref: '#/components/responses/GetConnectorDocResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - connector
      x-apideck-api: connector
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            const params = {
              id: 'id_example',
              docId: 'application_owner+oauth_credentials'
            }

            try {
              const { data } = await apideck.connector.connectorDocsOne(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: connector.connectorDocs
      x-speakeasy-name-override: get
  '/connector/connectors/{id}/resources/{resource_id}':
    get:
      operationId: connector.connectorResourcesOne
      summary: Get Connector Resource
      description: Get Connector Resource
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/resourceId'
        - $ref: '#/components/parameters/unifiedApi'
      responses:
        '200':
          $ref: '#/components/responses/GetConnectorResourceResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - connector
      x-apideck-api: connector
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            const params = {
              id: 'id_example',
              resourceId: 'resource_id_example'
            }

            try {
              const { data } = await apideck.connector.connectorResourcesOne(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: connector.connectorResources
      x-speakeasy-name-override: get
  /connector/apis:
    get:
      operationId: connector.apisAll
      summary: List APIs
      description: List APIs
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/apis_filter'
      responses:
        '200':
          $ref: '#/components/responses/GetApisResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - connector
      x-apideck-api: connector
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.connector.apisAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: connector.apis
      x-speakeasy-name-override: list
  '/connector/apis/{id}':
    get:
      operationId: connector.apisOne
      summary: Get API
      description: Get API
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/GetApiResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - connector
      x-apideck-api: connector
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.connector.apisOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: connector.apis
      x-speakeasy-name-override: get
  '/connector/apis/{id}/resources/{resource_id}':
    get:
      operationId: connector.apiResourcesOne
      summary: Get API Resource
      description: Get API Resource
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/resourceId'
      responses:
        '200':
          $ref: '#/components/responses/GetApiResourceResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - connector
      x-apideck-api: connector
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            const params = {
              id: 'id_example',
              resourceId: 'resource_id_example'
            }

            try {
              const { data } = await apideck.connector.apiResourcesOne(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: connector.apiResources
      x-speakeasy-name-override: get
  '/connector/apis/{id}/resources/{resource_id}/coverage':
    get:
      operationId: connector.apiResourceCoverageOne
      summary: Get API Resource Coverage
      description: Get API Resource Coverage
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/resourceId'
      responses:
        '200':
          $ref: '#/components/responses/GetApiResourceCoverageResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - connector
      x-apideck-api: connector
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            const params = {
              id: 'id_example',
              resourceId: 'resource_id_example'
            }

            try {
              const { data } = await apideck.connector.apiResourceCoverageOne(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: connector.apiResourceCoverage
      x-speakeasy-name-override: get
  /vault/consumers:
    post:
      operationId: vault.consumersAdd
      summary: Create consumer
      description: Create a consumer
      parameters:
        - $ref: '#/components/parameters/x-apideck-app-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Consumer'
      responses:
        '200':
          $ref: '#/components/responses/CreateConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            const params = {
              consumer: {
                consumer_id: 'test_consumer_id',
                metadata: {
                  account_name: 'SpaceX',
                  user_name: 'Elon Musk',
                  email: 'elon@musk.com',
                  image: 'https://www.spacex.com/static/images/share.jpg'
                }
              }
            }

            try {
              const { data } = await apideck.vault.consumersAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.consumers
      x-speakeasy-name-override: create
    get:
      operationId: vault.consumersAll
      summary: Get all consumers
      description: |
        This endpoint includes all application consumers, along with an aggregated count of requests made.
      parameters:
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/GetConsumersResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.vault.consumersAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.consumers
      x-speakeasy-name-override: list
  '/vault/consumers/{consumer_id}':
    get:
      operationId: vault.consumersOne
      summary: Get consumer
      description: |
        Consumer detail including their aggregated counts with the connections they have authorized.
      parameters:
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/consumer_id'
      responses:
        '200':
          $ref: '#/components/responses/GetConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.vault.consumersOne({
                consumerId: 'test_user_id'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.consumers
      x-speakeasy-name-override: get
    patch:
      operationId: vault.consumersUpdate
      summary: Update consumer
      description: Update consumer metadata such as name and email.
      parameters:
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/consumer_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConsumerRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            const params = {
              consumerId: 'test_user_id',
              consumer: {
                metadata: {
                  account_name: 'SpaceX',
                  user_name: 'Elon Musk',
                  email: 'elon@musk.com',
                  image: 'https://www.spacex.com/static/images/share.jpg'
                }
              }
            }

            try {
              const { data } = await apideck.vault.consumersUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.consumers
      x-speakeasy-name-override: update
    delete:
      operationId: vault.consumersDelete
      summary: Delete consumer
      description: 'Delete consumer and all their connections, including credentials.'
      parameters:
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/consumer_id'
      responses:
        '200':
          $ref: '#/components/responses/DeleteConsumerResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.vault.consumersDelete({
                consumerId: 'test_user_id'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.consumers
      x-speakeasy-name-override: delete
  '/vault/consumers/{consumer_id}/stats':
    get:
      operationId: vault.consumerRequestCountsAll
      summary: Consumer request counts
      description: |
        Get consumer request counts within a given datetime range.
      parameters:
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/consumer_id'
        - $ref: '#/components/parameters/start_datetime'
        - $ref: '#/components/parameters/end_datetime'
      responses:
        '200':
          $ref: '#/components/responses/ConsumerRequestCountsInDateRangeResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            const params = {
              consumerId: 'test_user_id',
              startDatetime: '2021-05-01T12:00:00.000Z',
              endDatetime: '2021-05-30T12:00:00.000Z'
            }

            try {
              const { data } = await apideck.vault.consumerRequestCountsAll(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.consumerRequestCounts
      x-speakeasy-name-override: list
  /vault/connections:
    get:
      operationId: vault.connectionsAll
      summary: Get all connections
      description: |
        This endpoint includes all the configured integrations and contains the required assets
        to build an integrations page where your users can install integrations.
        OAuth2 supported integrations will contain authorize and revoke links to handle the authentication flows.
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/api'
        - $ref: '#/components/parameters/configured'
      responses:
        '200':
          $ref: '#/components/responses/GetConnectionsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.vault.connectionsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.connections
      x-speakeasy-name-override: list
  '/vault/connections/{unified_api}/{service_id}':
    get:
      operationId: vault.connectionsOne
      summary: Get connection
      description: Get a connection
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      responses:
        '200':
          $ref: '#/components/responses/GetConnectionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.vault.connectionsOne({
                serviceId: 'pipedrive',
                unifiedApi: 'crm'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.connections
      x-speakeasy-name-override: get
    patch:
      operationId: vault.connectionsUpdate
      summary: Update connection
      description: Update a connection
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      requestBody:
        description: Fields that need to be updated on the resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      responses:
        '200':
          $ref: '#/components/responses/UpdateConnectionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              serviceId: 'pipedrive',
              unifiedApi: 'crm',
              connection: {
                enabled: true,
                settings: {
                  instance_url: 'https://eu28.salesforce.com',
                  api_key: '12345xxxxxx'
                },
                metadata: {
                  account: {
                    name: 'My Company',
                    id: 'c01458a5-7276-41ce-bc19-639906b0450a'
                  },
                  plan: 'enterprise'
                },
                configuration: [
                  {
                    resource: 'leads',
                    defaults: [
                      {
                        id: 'ProductInterest',
                        options: [Array],
                        value: 'GC5000 series'
                      }
                    ]
                  }
                ],
                custom_mappings: [
                  {
                    value: '$.root.training.first_aid'
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.vault.connectionsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.connections
      x-speakeasy-name-override: update
    delete:
      operationId: vault.connectionsDelete
      summary: Deletes a connection
      description: Deletes a connection
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      responses:
        '204':
          description: Resource deleted
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.vault.connectionsDelete({
                serviceId: 'pipedrive',
                unifiedApi: 'crm'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.connections
      x-speakeasy-name-override: delete
  '/vault/connections/{unified_api}/{service_id}/import':
    post:
      operationId: vault.connectionsImport
      summary: Import connection
      description: |
        Import an authorized connection.
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      requestBody:
        description: Fields that need to be persisted on the resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionImportData'
      responses:
        '200':
          $ref: '#/components/responses/CreateConnectionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              serviceId: 'pipedrive',
              unifiedApi: 'crm',
              connection: {
                credentials: {
                  access_token:
                    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c',
                  refresh_token:
                    'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ'
                },
                settings: {
                  instance_url: 'https://eu28.salesforce.com'
                },
                metadata: {
                  account: {
                    name: 'My Company',
                    id: 'c01458a5-7276-41ce-bc19-639906b0450a'
                  },
                  plan: 'enterprise'
                }
              }
            }

            try {
              const { data } = await apideck.vault.connectionsImport(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.connections
      x-speakeasy-name-override: imports
  '/vault/connections/{unified_api}/{service_id}/token':
    post:
      operationId: vault.connectionsToken
      summary: Authorize Access Token
      description: |
        Triggers exchanging persisted connection credentials for an access token and store it in Vault. Currently supported for connections with the `client_credentials` or `password` OAuth grant type.

        Note:
          - Do not include any credentials in the request body. This operation does not persist changes, but only triggers the exchange of persisted connection credentials for an access token.
          - The access token will not be returned in the response. A 200 response code indicates the authorization was successful and that a valid access token was stored on the connection.
          - The access token will be used for subsequent API requests.
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
      responses:
        '200':
          $ref: '#/components/responses/GetConnectionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              serviceId: 'pipedrive',
              unifiedApi: 'crm',
              connectionsToken: {}
            }

            try {
              const { data } = await apideck.vault.connectionsToken(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.connections
      x-speakeasy-name-override: token
  '/vault/connections/{unified_api}/{service_id}/validate':
    post:
      operationId: vault.validateConnectionState
      summary: Validate Connection State
      description: |
        This endpoint validates the current state of a given connection. This will perform different checks based on the connection auth type. For basic and apiKey auth types, the presence of required fields is checked.
        For connectors that implement OAuth2, this operation forces the refresh flow for an access token regardless of its expiry.

        Note:
          - Do not include any credentials in the request body. This operation does not persist changes, but only triggers the validation of connection state.
          - If a refresh token flow was performed and successful, the new access token will then be used for subsequent API requests.
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
      responses:
        '200':
          $ref: '#/components/responses/ValidateConnectionStateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              serviceId: 'pipedrive',
              unifiedApi: 'crm',
              validateConnectionState: {}
            }

            try {
              const { data } = await apideck.vault.validateConnectionState(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.validateConnection
      x-speakeasy-name-override: state
  '/vault/connections/{unified_api}/{service_id}/callback-state':
    post:
      operationId: vault.createCallbackState
      summary: Create Callback State
      description: |
        This endpoint creates a callback state that can be used to issue requests to the callback endpoint.
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
      requestBody:
        description: Callback state data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCallbackState'
      responses:
        '200':
          $ref: '#/components/responses/CreateCallbackStateResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              serviceId: 'pipedrive',
              unifiedApi: 'crm',
              createCallbackState: {
                redirect_uri: 'https://example.com/callback'
              }
            }

            try {
              const { data } = await apideck.vault.createCallbackState(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.createCallback
      x-speakeasy-name-override: state
  '/vault/connections/{unified_api}/{service_id}/{resource}/config':
    get:
      operationId: vault.connectionSettingsAll
      summary: Get resource settings
      description: |
        This endpoint returns custom settings and their defaults required by connection for a given resource.
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/unified_api'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/resource'
      responses:
        '200':
          $ref: '#/components/responses/GetConnectionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              unifiedApi: 'crm',
              serviceId: 'pipedrive',
              resource: 'leads'
            }

            try {
              const { data } = await apideck.vault.connectionSettingsAll(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.connectionSettings
      x-speakeasy-name-override: list
    patch:
      operationId: vault.connectionSettingsUpdate
      summary: Update settings
      description: Update default values for a connection's resource settings
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/unified_api'
        - $ref: '#/components/parameters/resource'
      requestBody:
        description: Fields that need to be updated on the resource
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connection'
      responses:
        '200':
          $ref: '#/components/responses/UpdateConnectionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              serviceId: 'pipedrive',
              unifiedApi: 'crm',
              resource: 'leads',
              connection: {
                enabled: true,
                settings: {
                  instance_url: 'https://eu28.salesforce.com',
                  api_key: '12345xxxxxx'
                },
                metadata: {
                  account: {
                    name: 'My Company',
                    id: 'c01458a5-7276-41ce-bc19-639906b0450a'
                  },
                  plan: 'enterprise'
                },
                configuration: [
                  {
                    resource: 'leads',
                    defaults: [
                      {
                        id: 'ProductInterest',
                        options: [Array],
                        value: 'GC5000 series'
                      }
                    ]
                  }
                ],
                custom_mappings: [
                  {
                    value: '$.root.training.first_aid'
                  }
                ]
              }
            }

            try {
              const { data } = await apideck.vault.connectionSettingsUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.connectionSettings
      x-speakeasy-name-override: update
  '/vault/connections/{unified_api}/{service_id}/{resource}/custom-fields':
    get:
      operationId: vault.customFieldsAll
      summary: Get resource custom fields
      description: |
        This endpoint returns an custom fields on a connection resource.
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/unified_api'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/resource'
        - $ref: '#/components/parameters/resource_id'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomFieldsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              unifiedApi: 'crm',
              serviceId: 'pipedrive',
              resource: 'leads'
            }

            try {
              const { data } = await apideck.vault.customFieldsAll(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.customFields
      x-speakeasy-name-override: list
  '/vault/connections/{unified_api}/{service_id}/{resource}/custom-mappings':
    get:
      operationId: vault.connectionCustomMappingsAll
      summary: List connection custom mappings
      description: This endpoint returns a list of custom mappings for a connection.
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/unified_api'
        - $ref: '#/components/parameters/service_id'
        - $ref: '#/components/parameters/resource'
        - $ref: '#/components/parameters/resource_id'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomMappingsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              unifiedApi: 'crm',
              serviceId: 'pipedrive',
              resource: 'leads'
            }

            try {
              const { data } = await apideck.vault.connectionCustomMappingsAll(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.connectionCustomMappings
      x-speakeasy-name-override: list
  '/vault/custom-mappings/{unified_api}/{service_id}':
    get:
      operationId: vault.customMappingsAll
      summary: List custom mappings
      description: This endpoint returns a list of custom mappings.
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/unified_api'
        - $ref: '#/components/parameters/service_id'
      responses:
        '200':
          $ref: '#/components/responses/GetCustomMappingsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.vault.customMappingsAll({
                unifiedApi: 'crm',
                serviceId: 'pipedrive'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.customMappings
      x-speakeasy-name-override: list
  /vault/sessions:
    post:
      operationId: vault.sessionsCreate
      summary: Create Session
      description: |
        Making a POST request to this endpoint will initiate a Hosted Vault session. Redirect the consumer to the returned
        URL to allow temporary access to manage their integrations and settings.

        Note: This is a short lived token that will expire after 1 hour (TTL: 3600).
      parameters:
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/x-apideck-app-id'
      requestBody:
        description: Additional redirect uri and/or consumer metadata
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
      responses:
        '200':
          $ref: '#/components/responses/CreateSessionResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            const params = {
              session: {
                consumer_metadata: {
                  account_name: 'SpaceX',
                  user_name: 'Elon Musk',
                  email: 'elon@musk.com',
                  image: 'https://www.spacex.com/static/images/share.jpg'
                },
                redirect_uri: 'https://mysaas.com/dashboard',
                settings: {
                  unified_apis: ['crm'],
                  hide_resource_settings: false,
                  sandbox_mode: false,
                  isolation_mode: false,
                  session_length: '30m',
                  show_logs: true,
                  show_suggestions: false,
                  show_sidebar: true,
                  auto_redirect: false,
                  hide_guides: false,
                  allow_actions: ['delete']
                },
                theme: {
                  favicon: 'https://res.cloudinary.com/apideck/icons/intercom',
                  logo: 'https://res.cloudinary.com/apideck/icons/intercom',
                  primary_color: '#286efa',
                  sidepanel_background_color: '#286efa',
                  sidepanel_text_color: '#FFFFFF',
                  vault_name: 'Intercom',
                  privacy_url: 'https://compliance.apideck.com/privacy-policy',
                  terms_url: 'https://www.termsfeed.com/terms-conditions/957c85c1b089ae9e3219c83eff65377e'
                },
                custom_consumer_settings: {
                  feature_flag_1: true,
                  tax_rates: [
                    {
                      id: '6',
                      label: '6%'
                    },
                    {
                      id: '21',
                      label: '21%'
                    }
                  ]
                }
              }
            }

            try {
              const { data } = await apideck.vault.sessionsCreate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.sessions
      x-speakeasy-name-override: create
  /vault/logs:
    get:
      operationId: vault.logsAll
      summary: Get all consumer request logs
      description: |
        This endpoint includes all consumer request logs.
      parameters:
        - $ref: '#/components/parameters/x-apideck-app-id'
        - $ref: '#/components/parameters/x-apideck-consumer-id'
        - $ref: '#/components/parameters/filter'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/GetLogsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - vault
      x-apideck-api: vault
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID',
              consumerId: 'REPLACE_WITH_CONSUMER_ID'
            })

            try {
              const { data } = await apideck.vault.logsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: vault.logs
      x-speakeasy-name-override: list
  /webhook/webhooks:
    get:
      operationId: webhook.webhooksAll
      summary: List webhook subscriptions
      description: List all webhook subscriptions
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          $ref: '#/components/responses/GetWebhooksResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - webhook
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.webhook.webhooksAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: webhook.webhooks
      x-speakeasy-name-override: list
    post:
      operationId: webhook.webhooksAdd
      summary: Create webhook subscription
      description: Create a webhook subscription to receive events
      parameters:
        - $ref: '#/components/parameters/applicationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
      responses:
        '201':
          $ref: '#/components/responses/CreateWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - webhook
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            const params = {
              webhook: {
                description: 'A description',
                unified_api: 'crm',
                status: 'enabled',
                delivery_url: 'https://example.com/my/webhook/endpoint',
                events: ['vault.connection.created', 'vault.connection.updated']
              }
            }

            try {
              const { data } = await apideck.webhook.webhooksAdd(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: webhook.webhooks
      x-speakeasy-name-override: create
  '/webhook/webhooks/{id}':
    get:
      operationId: webhook.webhooksOne
      summary: Get webhook subscription
      description: Get the webhook subscription details
      parameters:
        - $ref: '#/components/parameters/webhookToken'
        - $ref: '#/components/parameters/applicationId'
      responses:
        '200':
          $ref: '#/components/responses/GetWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - webhook
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.webhook.webhooksOne({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: webhook.webhooks
      x-speakeasy-name-override: get
    patch:
      operationId: webhook.webhooksUpdate
      summary: Update webhook subscription
      description: Update a webhook subscription
      parameters:
        - $ref: '#/components/parameters/webhookToken'
        - $ref: '#/components/parameters/applicationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
      responses:
        '200':
          $ref: '#/components/responses/UpdateWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - webhook
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            const params = {
              id: 'id_example',
              webhook: {
                description: 'A description',
                status: 'enabled',
                delivery_url: 'https://example.com/my/webhook/endpoint',
                events: ['vault.connection.created', 'vault.connection.updated']
              }
            }

            try {
              const { data } = await apideck.webhook.webhooksUpdate(params)
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: webhook.webhooks
      x-speakeasy-name-override: update
    delete:
      operationId: webhook.webhooksDelete
      summary: Delete webhook subscription
      description: Delete a webhook subscription
      parameters:
        - $ref: '#/components/parameters/webhookToken'
        - $ref: '#/components/parameters/applicationId'
      responses:
        '200':
          $ref: '#/components/responses/DeleteWebhookResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - webhook
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.webhook.webhooksDelete({
                id: 'id_example'
              })
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: webhook.webhooks
      x-speakeasy-name-override: delete
  /webhook/logs:
    get:
      operationId: webhook.eventLogsAll
      summary: List event logs
      description: List event logs
      parameters:
        - $ref: '#/components/parameters/applicationId'
        - $ref: '#/components/parameters/cursor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/filter1'
      responses:
        '200':
          $ref: '#/components/responses/GetWebhookEventLogsResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedResponse'
        '402':
          $ref: '#/components/responses/PaymentRequiredResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '422':
          $ref: '#/components/responses/UnprocessableResponse'
        default:
          $ref: '#/components/responses/UnexpectedErrorResponse'
      security:
        - apiKey: []
      tags:
        - webhook
      x-apideck-api: webhook
      x-codeSamples:
        - lang: TypeScript
          label: Node
          source: |
            import { Apideck } from '@apideck/node'

            const apideck = new Apideck({
              apiKey: 'REPLACE_WITH_API_KEY',
              appId: 'REPLACE_WITH_APP_ID'
            })

            try {
              const { data } = await apideck.webhook.eventLogsAll({})
              console.log('API called successfully', data)
            } catch (error) {
              console.error(error)
            }
      x-speakeasy-group: webhook.eventLogs
      x-speakeasy-name-override: list
components:
  parameters:
    accountingDepartmentsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/AccountingDepartmentsFilter'
    accountingLocationsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/AccountingLocationsFilter'
    activitiesFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ActivitiesFilter'
    activitiesSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ActivitiesSort'
    api:
      name: api
      in: query
      description: Scope results to Unified API
      schema:
        type: string
      example: crm
    apis_filter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ApisFilter'
    applicantsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ApplicantsFilter'
    applicationId:
      name: x-apideck-app-id
      in: header
      required: false
      description: The ID of your Unify application
      schema:
        type: string
      example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
      x-speakeasy-name-override: appId
      x-speakeasy-globals-hidden: true
    balanceSheetFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/BalanceSheetFilter'
    billsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/BillsFilter'
    billsSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/BillsSort'
    collectionId:
      description: The collection ID
      in: path
      name: collection_id
      required: true
      schema:
        type: string
        example: apideck-io
    collectionsSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CollectionsSort'
    commentsSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CommentsSort'
    companiesFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CompaniesFilter'
    companiesSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CompaniesSort'
    configured:
      name: configured
      in: query
      description: Scopes results to connections that have been configured or not
      schema:
        type: boolean
      example: true
    connectors_filter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ConnectorsFilter'
    consumerId:
      name: x-apideck-consumer-id
      in: header
      required: false
      description: ID of the consumer which you want to get or push data from
      schema:
        type: string
      example: test-consumer
      x-speakeasy-name-override: consumerId
      x-speakeasy-globals-hidden: true
    consumer_id:
      name: consumer_id
      in: path
      description: ID of the consumer to return
      required: true
      schema:
        type: string
      example: test_user_id
    contactsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ContactsFilter'
    contactsSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ContactsSort'
    creditNotesFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CreditNotesFilter'
    creditNotesSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CreditNotesSort'
    cursor:
      name: cursor
      in: query
      description: Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
      schema:
        type: string
        nullable: true
    customersFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CustomersFilter'
    customersFilter1:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/EcommerceCustomersFilter'
    customersSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/CustomersSort'
    digestPart:
      name: digest
      in: header
      description: 'The RFC3230 message digest of the uploaded part. Only required for the Box connector. More information on the Box API docs [here](https://developer.box.com/reference/put-files-upload-sessions-id/#param-digest)'
      required: false
      schema:
        type: string
        example: sha=fpRyg5eVQletdZqEKaFlqwBXJzM=
    doc_id:
      in: path
      name: doc_id
      schema:
        type: string
      required: true
      description: ID of the Doc
      example: application_owner+oauth_credentials
    driveGroupsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/DriveGroupsFilter'
    drivesFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/DrivesFilter'
    employeeId:
      description: ID of the employee you are acting upon.
      in: path
      name: employee_id
      required: true
      schema:
        type: string
    employeesFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/EmployeesFilter'
    employeesOneFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/EmployeesOneFilter'
    employeesSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/EmployeesSort'
    end_datetime:
      name: end_datetime
      in: query
      description: Scopes results to requests that happened before datetime
      required: true
      schema:
        type: string
      example: '2021-05-30T12:00:00.000Z'
    fields:
      name: fields
      in: query
      description: 'The ''fields'' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.'
      example: 'id,updated_at'
      schema:
        type: string
        nullable: true
    filesFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilesFilter'
    filesSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilesSort'
    filter:
      name: filter
      in: query
      description: Filter results
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/LogsFilter'
    filter1:
      name: filter
      in: query
      description: Filter results
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/WebhookEventLogsFilter'
    format:
      name: format
      in: query
      description: File format to export this file to. A list of available file formats for the current file is available as `export_formats` on the File resource.
      required: true
      schema:
        type: string
        example: pdf
    id:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: ID of the record you are acting upon.
    invoiceItemFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/InvoiceItemFilter'
    invoiceItemsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/InvoiceItemsFilter'
    invoicesFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/InvoicesFilter'
    invoicesSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/InvoicesSort'
    issuesFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/IssuesFilter'
    journalEntriesFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/JournalEntriesFilter'
    journalEntriesSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/JournalEntriesSort'
    leadsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/LeadsFilter'
    leadsSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/LeadsSort'
    ledgerAccountsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/LedgerAccountsFilter'
    ledgerAccountsSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/LedgerAccountsSort'
    limit:
      name: limit
      in: query
      description: 'Number of results to return. Minimum 1, Maximum 200, Default 20'
      schema:
        type: integer
        default: 20
        maximum: 200
        minimum: 1
    opportunitiesFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/OpportunitiesFilter'
    opportunitiesSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/OpportunitiesSort'
    ordersFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/EcommerceOrdersFilter'
    ordersSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/OrdersSort'
    passThrough:
      name: pass_through
      in: query
      description: 'Optional unmapped key/values that will be passed through to downstream as query parameters. Ie: ?pass_through[search]=leads becomes ?search=leads'
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/PassThroughQuery'
    paymentsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/PaymentsFilter'
    paymentsSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/PaymentsSort'
    payrollId:
      description: ID of the payroll you are acting upon.
      in: path
      name: payroll_id
      required: true
      schema:
        type: string
    payrollsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/PayrollsFilter'
    profitAndLossFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/ProfitAndLossFilter'
    purchaseOrdersFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/PurchaseOrdersFilter'
    purchaseOrdersSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/PurchaseOrdersSort'
    raw:
      name: raw
      in: query
      description: Include raw response. Mostly used for debugging purposes
      schema:
        type: boolean
        default: false
    referenceId:
      in: path
      name: reference_id
      schema:
        $ref: '#/components/schemas/Id'
      required: true
      description: The reference id of the object to retrieve.
      example: '123456'
    referenceType:
      in: path
      name: reference_type
      schema:
        $ref: '#/components/schemas/AttachmentReferenceType'
      required: true
      description: The reference type of the document.
      example: invoice
    resource:
      name: resource
      in: path
      required: true
      description: Name of the resource (plural)
      schema:
        type: string
      example: leads
    resourceId:
      in: path
      name: resource_id
      schema:
        type: string
      required: true
      description: ID of the resource you are acting upon.
    resource_id:
      name: resource_id
      in: query
      description: 'This is the id of the resource you want to fetch when listing custom fields. For example, if you want to fetch custom fields for a specific contact, you would use the contact id.'
      schema:
        type: string
      example: '1234'
    serviceId:
      name: x-apideck-service-id
      in: header
      description: 'Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.'
      schema:
        type: string
      example: salesforce
      x-speakeasy-name-override: serviceId
    service_id:
      name: service_id
      in: path
      description: Service ID of the resource to return
      required: true
      schema:
        type: string
      example: pipedrive
    start_datetime:
      name: start_datetime
      in: query
      description: Scopes results to requests that happened after datetime
      required: true
      schema:
        type: string
      example: '2021-05-01T12:00:00.000Z'
    suppliersFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/SuppliersFilter'
    suppliersSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/SuppliersSort'
    taxRatesFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/TaxRatesFilter'
    ticketId:
      description: ID of the ticket you are acting upon.
      in: path
      name: ticket_id
      required: true
      schema:
        type: string
    ticketsSort:
      name: sort
      in: query
      description: Apply sorting
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/TicketsSort'
    timeOffRequestsFilter:
      name: filter
      in: query
      description: Apply filters
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/TimeOffRequestsFilter'
    unifiedApi:
      in: query
      name: unified_api
      schema:
        $ref: '#/components/schemas/UnifiedApiId'
      required: false
      description: Specify unified API for the connector resource. This is useful when a resource appears in multiple APIs
    unified_api:
      name: unified_api
      in: path
      required: true
      description: Unified API
      schema:
        type: string
      example: crm
    webhookToken:
      in: path
      name: id
      schema:
        type: string
      required: true
      description: JWT Webhook token that represents the unifiedApi and applicationId associated to the event source.
    x-apideck-app-id:
      name: x-apideck-app-id
      in: header
      required: false
      description: The ID of your Unify application
      schema:
        type: string
      example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
      x-speakeasy-name-override: appId
      x-speakeasy-globals-hidden: true
    x-apideck-consumer-id:
      name: x-apideck-consumer-id
      in: header
      required: false
      description: ID of the consumer which you want to get or push data from
      schema:
        type: string
      example: test-consumer
      x-speakeasy-name-override: consumerId
      x-speakeasy-globals-hidden: true
  schemas:
    AccountCode:
      description: The account code of the account
      type: string
      example: '1100'
      readOnly: true
      title: Account Code
    AccountId:
      description: The unique identifier for the account.
      type: string
      example: '123456'
      readOnly: true
      title: Account Id
    AccountName:
      description: The name of the account.
      type: string
      example: Current assets
      readOnly: true
      title: Account Name
    Amount:
      description: The amount or value of the item
      type: number
      example: 1000
      readOnly: true
      title: Amount
    AccountingByRow:
      description: Indicates if accounting by row is used (true) or not (false). Accounting by row means that a separate ledger transaction is created for each row.
      type: boolean
      example: false
      nullable: true
      title: Accounting by Row
    Active:
      type: boolean
      example: true
      nullable: true
      title: Is active
    Address:
      type: object
      properties:
        id:
          description: Unique identifier for the address.
          type: string
          example: '123'
          nullable: true
        type:
          description: The type of address.
          type: string
          example: primary
          enum:
            - primary
            - secondary
            - home
            - office
            - shipping
            - billing
            - other
          nullable: true
          x-apideck-enum-id: addresses.type
        string:
          description: The address string. Some APIs don't provide structured address data.
          type: string
          example: '25 Spring Street, Blackburn, VIC 3130'
          nullable: true
        name:
          description: The name of the address.
          type: string
          example: HQ US
          nullable: true
        line1:
          description: 'Line 1 of the address e.g. number, street, suite, apt #, etc.'
          type: string
          example: Main street
          nullable: true
        line2:
          description: Line 2 of the address
          type: string
          example: 'apt #'
          nullable: true
        line3:
          description: Line 3 of the address
          type: string
          example: 'Suite #'
          nullable: true
        line4:
          description: Line 4 of the address
          type: string
          example: delivery instructions
          nullable: true
        street_number:
          description: Street number
          type: string
          example: '25'
          nullable: true
        city:
          description: Name of city.
          type: string
          example: San Francisco
          nullable: true
        state:
          description: Name of state
          type: string
          example: CA
          nullable: true
        postal_code:
          description: Zip code or equivalent.
          type: string
          example: '94104'
          nullable: true
        country:
          description: country code according to ISO 3166-1 alpha-2.
          type: string
          example: US
          nullable: true
        latitude:
          description: Latitude of the address
          type: string
          example: '40.759211'
          nullable: true
        longitude:
          description: Longitude of the address
          type: string
          example: '-73.984638'
          nullable: true
        county:
          description: 'Address field that holds a sublocality, such as a county'
          type: string
          example: Santa Clara
          nullable: true
        contact_name:
          description: Name of the contact person at the address
          type: string
          example: Elon Musk
          nullable: true
        salutation:
          description: Salutation of the contact person at the address
          type: string
          example: Mr
          nullable: true
        phone_number:
          description: Phone number of the address
          type: string
          example: 111-111-1111
          nullable: true
        fax:
          description: Fax number of the address
          type: string
          example: 122-111-1111
          nullable: true
        email:
          description: Email address of the address
          type: string
          example: elon@musk.com
          nullable: true
        website:
          description: Website of the address
          type: string
          example: 'https://elonmusk.com'
          nullable: true
        notes:
          description: Additional notes
          type: string
          example: Address notes or delivery instructions.
          nullable: true
          title: Notes
        row_version:
          $ref: '#/components/schemas/RowVersion'
      additionalProperties: false
      x-apideck-schema-id: Address
      x-apideck-weights:
        id: edge-case
        name: edge-case
        type: critical
        line1: high
        line2: low
        line3: edge-case
        line4: edge-case
        street_number: low
        city: high
        string: low
        state: high
        postal_code: high
        country: high
        latitude: low
        longitude: low
        county: edge-case
        contact_name: edge-case
        salutation: edge-case
        phone_number: edge-case
        fax: edge-case
        email: edge-case
        website: edge-case
        row_version: edge-case
    BadRequestResponse:
      type: object
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 400
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Bad Request
        type_name:
          description: The type of error returned
          type: string
          example: RequestValidationError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Invalid Params
          x-speakeasy-error-message: true
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          anyOf:
            - type: string
              example: Missing property foobar
            - type: object
              additionalProperties: true
              example:
                missing:
                  - foobar: required
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#requestvalidationerror'
      x-apideck-schema-id: BadRequest
    BalanceSheet:
      type: object
      properties:
        reports:
          type: array
          items:
            type: object
            x-apideck-schema-id: BalanceSheetReport
            x-apideck-weights:
              id: medium
              report_name: medium
              start_date: medium
              end_date: critical
              currency: medium
              assets: critical
              liabilities: critical
              equity: critical
              net_assets: high
              custom_mappings: edge-case
              updated_by: edge-case
              created_by: edge-case
              updated_at: low
              created_at: edge-case
              uncategorized_items: edge-case
            additionalProperties: false
            required:
              - end_date
              - assets
              - liabilities
              - equity
            properties:
              id:
                $ref: '#/components/schemas/Id'
              report_name:
                description: The name of the report
                type: string
                example: BalanceSheet
                title: Report Name
              start_date:
                description: The start date of the report
                type: string
                example: '2017-01-01'
                pattern: '^\d{4}-\d{2}-\d{2}$'
                title: Start Date
              end_date:
                description: The start date of the report
                type: string
                example: '2017-01-31'
                pattern: '^\d{4}-\d{2}-\d{2}$'
                title: Start Date
              currency:
                $ref: '#/components/schemas/Currency'
              assets:
                description: A balance sheet assets account represents the financial position of a company at a specific point in time.
                type: object
                example:
                  account_id: '1'
                  code: '1000'
                  name: Assets
                  value: 50000
                  items:
                    - account_id: '101'
                      code: '1100'
                      name: Current Assets
                      value: 20000
                      items:
                        - account_id: '1011'
                          code: '1101'
                          name: Cash and Cash Equivalents
                          value: 10000
                        - account_id: '1012'
                          code: '1102'
                          name: Accounts Receivable
                          value: 5000
                        - account_id: '1013'
                          code: '1103'
                          name: Inventory
                          value: 3000
                        - account_id: '1014'
                          code: '1104'
                          name: Prepaid Expenses
                          value: 2000
                    - account_id: '102'
                      code: '1200'
                      name: Non-Current Assets
                      value: 30000
                      items:
                        - account_id: '1021'
                          code: '1201'
                          name: 'Property, Plant, and Equipment (PPE)'
                          value: 25000
                        - account_id: '1022'
                          code: '1202'
                          name: Intangible Assets
                          value: 5000
                          items:
                            - account_id: '10221'
                              code: '1203'
                              name: Goodwill
                              value: 3000
                            - account_id: '10222'
                              code: '1204'
                              name: Patents
                              value: 2000
                additionalProperties: false
                properties:
                  account_id:
                    $ref: '#/components/schemas/AccountId'
                  code:
                    $ref: '#/components/schemas/AccountCode'
                  name:
                    $ref: '#/components/schemas/AccountName'
                  value:
                    $ref: '#/components/schemas/Amount'
                  items:
                    $ref: '#/components/schemas/BalanceSheetAccounts'
                title: Balance Sheet Assets Account
                x-apideck-schema-id: BalanceSheetAssetsAccount
                x-apideck-weights:
                  account_id: critical
                  name: high
                  value: critical
                  items: medium
              liabilities:
                description: A balance sheet liabilities account represents the financial position of a company at a specific point in time.
                type: object
                example:
                  account_id: '2'
                  code: '2000'
                  name: Liabilities
                  value: 30000
                  items:
                    - account_id: '201'
                      code: '2100'
                      name: Current Liabilities
                      value: 10000
                      items:
                        - account_id: '2011'
                          code: '2101'
                          name: Accounts Payable
                          value: 4000
                        - account_id: '2012'
                          code: '2102'
                          name: Short-Term Debt
                          value: 2000
                        - account_id: '2013'
                          code: '2103'
                          name: Accrued Expenses
                          value: 1000
                        - account_id: '2014'
                          code: '2104'
                          name: Current Portion of Long-Term Debt
                          value: 3000
                    - account_id: '202'
                      code: '2200'
                      name: Non-Current Liabilities
                      value: 20000
                      items:
                        - account_id: '2021'
                          code: '2201'
                          name: Long-Term Debt
                          value: 15000
                        - account_id: '2022'
                          code: '2202'
                          name: Deferred Tax Liabilities
                          value: 3000
                        - account_id: '2023'
                          code: '2203'
                          name: Pension Liabilities
                          value: 2000
                additionalProperties: false
                properties:
                  account_id:
                    $ref: '#/components/schemas/AccountId'
                  code:
                    $ref: '#/components/schemas/AccountCode'
                  name:
                    $ref: '#/components/schemas/AccountName'
                  value:
                    $ref: '#/components/schemas/Amount'
                  items:
                    $ref: '#/components/schemas/BalanceSheetAccounts'
                title: Balance Sheet Liabilities Account
                x-apideck-schema-id: BalanceSheetLiabilitiesAccount
                x-apideck-weights:
                  account_id: critical
                  name: high
                  value: critical
                  items: medium
              equity:
                description: A balance sheet equity account represents the financial position of a company at a specific point in time.
                type: object
                example:
                  account_id: '3'
                  code: '3000'
                  name: Equity
                  value: 20000
                  items:
                    - account_id: '301'
                      code: '3100'
                      name: Common Stock
                      value: 5000
                    - account_id: '302'
                      code: '3200'
                      name: Retained Earnings
                      value: 10000
                    - account_id: '303'
                      code: '3300'
                      name: Additional Paid-In Capital
                      value: 3000
                    - account_id: '304'
                      code: '3400'
                      name: Treasury Stock
                      value: -1000
                    - account_id: '305'
                      code: '3500'
                      name: Other Comprehensive Income
                      value: 3000
                additionalProperties: false
                properties:
                  account_id:
                    $ref: '#/components/schemas/AccountId'
                  code:
                    $ref: '#/components/schemas/AccountCode'
                  name:
                    $ref: '#/components/schemas/AccountName'
                  value:
                    $ref: '#/components/schemas/Amount'
                  items:
                    $ref: '#/components/schemas/BalanceSheetAccounts'
                title: Balance Sheet Equity Account
                x-apideck-schema-id: BalanceSheetEquityAccount
                x-apideck-weights:
                  account_id: critical
                  name: high
                  value: critical
                  items: medium
              net_assets:
                description: The net assets of the balance sheet
                type: number
                example: 1000
                title: Net Assets
              custom_mappings:
                $ref: '#/components/schemas/CustomMappings'
              updated_by:
                $ref: '#/components/schemas/UpdatedBy'
              created_by:
                $ref: '#/components/schemas/CreatedBy'
              updated_at:
                $ref: '#/components/schemas/UpdatedAt'
              created_at:
                $ref: '#/components/schemas/CreatedAt'
              uncategorized_items:
                description: A balance sheet uncategorized items account represents the financial position of a company at a specific point in time.
                type: object
                example:
                  account_id: '3'
                  code: '3000'
                  name: Uncategorized Items
                  value: 1000
                  items:
                    - account_id: '301'
                      code: '3100'
                      name: not linked account
                      value: 1000
                additionalProperties: false
                properties:
                  account_id:
                    $ref: '#/components/schemas/AccountId'
                  code:
                    $ref: '#/components/schemas/AccountCode'
                  name:
                    $ref: '#/components/schemas/AccountName'
                  value:
                    $ref: '#/components/schemas/Amount'
                  items:
                    $ref: '#/components/schemas/BalanceSheetAccounts'
                title: Balance Sheet Uncategorized Items Account
                x-apideck-schema-id: BalanceSheetUncategorizedItemsAccount
                x-apideck-weights:
                  account_id: critical
                  name: high
                  value: critical
                  items: medium
          x-apideck-schema-id: BalanceSheetReports
      additionalProperties: false
      required:
        - reports
      x-apideck-circular-ref: true
      x-apideck-schema-id: BalanceSheet
      x-apideck-weights:
        reports: critical
    BalanceSheetAccount:
      description: A balance sheet account represents the financial position of a company at a specific point in time.
      type: object
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        code:
          $ref: '#/components/schemas/AccountCode'
        name:
          $ref: '#/components/schemas/AccountName'
        value:
          $ref: '#/components/schemas/Amount'
        items:
          $ref: '#/components/schemas/BalanceSheetAccounts'
      additionalProperties: false
      title: Balance Sheet Account
      x-apideck-schema-id: BalanceSheetAccount
      x-apideck-weights:
        account_id: critical
        name: high
        value: critical
        items: medium
    BalanceSheetAccounts:
      description: A list of balance sheet accounts
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/BalanceSheetAccount'
          - $ref: '#/components/schemas/BalanceSheetAccountRecord'
      nullable: true
      title: Balance Sheet Accounts
      x-apideck-schema-id: BalanceSheetAccounts
      x-speakeasy-type-override: any
    BalanceSheetAccountRecord:
      description: A record of a balance sheet account.
      type: object
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        code:
          $ref: '#/components/schemas/AccountCode'
        name:
          $ref: '#/components/schemas/AccountName'
        value:
          $ref: '#/components/schemas/Amount'
      additionalProperties: false
      title: Balance Sheet Account Record
      x-apideck-schema-id: BalanceSheetAccountRecord
      x-apideck-weights:
        account_id: critical
        name: high
        value: critical
        items: medium
    BalanceSheetFilter:
      type: object
      properties:
        start_date:
          description: The start date of the period to include in the resource.
          type: string
          example: '2021-01-01'
          title: Start date
        end_date:
          description: The end date of the period to include in the resource.
          type: string
          example: '2021-12-31'
          title: End date
        period_count:
          description: The number of periods to include in the resource.
          type: integer
          example: 3
          title: Period count
        period_type:
          description: 'The type of period to include in the resource: month, quarter, year.'
          type: string
          example: month
          enum:
            - month
            - quarter
            - year
          title: Period type
          x-apideck-enum-id: balance-sheet.period-type
      example:
        start_date: '2021-01-01'
        end_date: '2021-12-31'
        period_count: 3
        period_type: month
      additionalProperties: false
      x-apideck-schema-id: BalanceSheetFilter
    BankAccount:
      type: object
      properties:
        bank_name:
          description: The name of the bank
          type: string
          example: Monzo
          nullable: true
          title: Bank Name
        account_number:
          description: 'A bank account number is a number that is tied to your bank account. If you have several bank accounts, such as personal, joint, business (and so on), each account will have a different account number.'
          type: string
          example: '123465'
          nullable: true
          title: Bank Account Number
        account_name:
          description: The name which you used in opening your bank account.
          type: string
          example: SPACEX LLC
          nullable: true
          title: Bank Account Name
        account_type:
          description: The type of bank account.
          type: string
          example: credit_card
          enum:
            - bank_account
            - credit_card
            - other
          nullable: true
          title: Account Type
          x-apideck-enum-id: bank-accounts.account_type
        iban:
          description: The International Bank Account Number (IBAN).
          type: string
          example: CH2989144532982975332
          nullable: true
        bic:
          description: The Bank Identifier Code (BIC).
          type: string
          example: AUDSCHGGXXX
          nullable: true
        routing_number:
          description: A routing number is a nine-digit code used to identify a financial institution in the United States.
          type: string
          example: '012345678'
          nullable: true
          title: Routing number
        bsb_number:
          description: A BSB is a 6 digit numeric code used for identifying the branch of an Australian or New Zealand bank or financial institution.
          type: string
          example: 062-001
          nullable: true
          title: BSB Number
        branch_identifier:
          description: A branch identifier is a unique identifier for a branch of a bank or financial institution.
          type: string
          example: '001'
          nullable: true
          title: Branch Identifier
        bank_code:
          description: 'A bank code is a code assigned by a central bank, a bank supervisory body or a Bankers Association in a country to all its licensed member banks or financial institutions.'
          type: string
          example: BNH
          nullable: true
          title: Bank Code
        currency:
          $ref: '#/components/schemas/Currency'
      additionalProperties: false
      x-apideck-schema-id: BankAccount
      x-apideck-weights:
        account_number: critical
        account_name: medium
        account_type: medium
        iban: high
        bic: medium
        bsb_number: edge-case
        branch_identifier: low
        bank_code: low
        bank_name: medium
        currency: medium
    Bill:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        downstream_id:
          $ref: '#/components/schemas/DownstreamId'
        bill_number:
          description: Reference to supplier bill number
          type: string
          example: '10001'
          nullable: true
          title: Bill number
        supplier:
          $ref: '#/components/schemas/LinkedSupplier'
        company_id:
          $ref: '#/components/schemas/AccountingCompanyId'
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          $ref: '#/components/schemas/CurrencyRate'
        tax_inclusive:
          $ref: '#/components/schemas/TaxInclusive'
        bill_date:
          description: Date bill was issued - YYYY-MM-DD.
          type: string
          format: date
          example: '2020-09-30'
          title: Bill date
        due_date:
          $ref: '#/components/schemas/DueDate'
        paid_date:
          description: The paid date is the date on which a payment was sent to the supplier - YYYY-MM-DD.
          type: string
          format: date
          example: '2020-10-30'
          nullable: true
          title: Paid date
        po_number:
          description: A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.
          type: string
          example: '90000117'
          nullable: true
          title: Purchase Order number
        reference:
          description: Optional bill reference.
          type: string
          example: '123456'
          nullable: true
          title: Bill reference
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/BillLineItem'
        terms:
          description: Terms of payment.
          type: string
          example: Net 30 days
          nullable: true
          title: Terms
        balance:
          description: Balance of bill due.
          type: number
          example: 27500
          nullable: true
          title: Balance
        deposit:
          description: Amount of deposit made to this bill.
          type: number
          example: 0
          nullable: true
          title: Deposit
        sub_total:
          description: 'Sub-total amount, normally before tax.'
          type: number
          example: 27500
          nullable: true
          title: Sub-total amount
        total_tax:
          description: Total tax amount applied to this bill.
          type: number
          example: 2500
          nullable: true
          title: Total tax amount
        total:
          description: 'Total amount of bill, including tax.'
          type: number
          example: 27500
          nullable: true
          title: Total amount
        tax_code:
          $ref: '#/components/schemas/TaxCode'
        notes:
          type: string
          example: Some notes about this bill.
          nullable: true
          title: Notes
        status:
          description: Invoice status
          type: string
          example: draft
          enum:
            - draft
            - submitted
            - authorised
            - partially_paid
            - paid
            - void
            - credit
            - deleted
          nullable: true
          title: Status
          x-apideck-enum-id: invoices.status
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        channel:
          $ref: '#/components/schemas/Channel'
        language:
          $ref: '#/components/schemas/Language'
        accounting_by_row:
          $ref: '#/components/schemas/AccountingByRow'
        bank_account:
          $ref: '#/components/schemas/BankAccount'
        discount_percentage:
          $ref: '#/components/schemas/DiscountPercentage'
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
        accounting_period:
          $ref: '#/components/schemas/AccountingPeriod'
      additionalProperties: false
      x-apideck-schema-id: Bill
      x-apideck-strict-required:
        - id
        - bill_date
        - due_date
        - line_items
        - total
        - status
      x-apideck-weights:
        id: critical
        downstream_id: low
        bill_number: high
        supplier: high
        company_id: middle
        currency: medium
        currency_rate: low
        tax_inclusive: low
        bill_date: critical
        due_date: critical
        paid_date: high
        po_number: low
        reference: low
        line_items: critical
        terms: low
        balance: high
        deposit: low
        sub_total: high
        total_tax: high
        total: critical
        tax_code: medium
        notes: low
        status: critical
        ledger_account: low
        payment_method: low
        channel: low
        language: low
        accounting_by_row: edge-case
        bank_account: low
        discount_percentage: medium
        tracking_categories: low
        updated_by: low
        created_by: low
        created_at: edge-case
        updated_at: high
        row_version: edge-case
        accounting_period: low
    BillLineItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        row_id:
          description: Row ID
          type: string
          example: '12345'
          title: Row ID
        code:
          description: User defined item code
          type: string
          example: 120-C
          nullable: true
          title: Item code
        line_number:
          description: Line number in the invoice
          type: integer
          example: 1
          nullable: true
          title: Line number
        description:
          description: User defined description
          type: string
          example: 'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.'
          nullable: true
          title: Description
        type:
          description: Bill Line Item type
          type: string
          example: expense_account
          enum:
            - expense_item
            - expense_account
            - other
          nullable: true
          title: Type
          x-apideck-enum-id: bills.line_items.type
        tax_amount:
          description: Tax amount
          type: number
          example: 27500
          nullable: true
          title: Tax amount
        total_amount:
          description: Total amount of the line item
          type: number
          example: 27500
          nullable: true
          title: Total amount
        quantity:
          $ref: '#/components/schemas/Quantity'
        unit_price:
          $ref: '#/components/schemas/UnitPrice'
        unit_of_measure:
          $ref: '#/components/schemas/UnitOfMeasure'
        discount_percentage:
          description: Discount percentage applied to the line item when supported downstream.
          type: number
          example: 0.01
          nullable: true
          title: Discount Percentage
        discount_amount:
          description: Discount amount applied to the line item when supported downstream.
          type: number
          example: 19.99
          nullable: true
          title: Discount Amount
        location_id:
          description: Location id
          type: string
          example: '1234'
          nullable: true
          title: Location id
        department_id:
          description: Department id
          type: string
          example: '1234'
          nullable: true
          title: Department id
        item:
          $ref: '#/components/schemas/LinkedInvoiceItem'
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      title: Bill Line Item
      x-apideck-schema-id: BillLineItem
      x-apideck-weights:
        id: high
        row_id: edge-case
        code: medium
        line_number: medium
        description: high
        type: medium
        tax_amount: high
        total_amount: high
        quantity: high
        unit_price: high
        unit_of_measure: edge-case
        discount_percentage: low
        discount_amount: low
        location_id: low
        department_id: low
        item: high
        tax_rate: medium
        ledger_account: low
        tracking_categories: low
        row_version: edge-case
        created_at: edge-case
        updated_at: high
        updated_by: edge-case
        created_by: edge-case
    BillsFilter:
      type: object
      properties:
        updated_since:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Updated since (timestamp)
      example:
        updated_since: '2020-09-30T07:43:32.000Z'
      additionalProperties: false
      x-apideck-schema-id: BillsFilter
    BillsSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Bills
          type: string
          example: updated_at
          enum:
            - updated_at
            - created_at
          x-apideck-enum-id: bills.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: updated_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: BillsSort
    Channel:
      description: The channel through which the transaction is processed.
      type: string
      example: email
      nullable: true
      title: Channel
    Company:
      type: object
      properties:
        id:
          description: Unique identifier for the company
          type: string
          example: '12345'
          readOnly: true
        name:
          description: Name of the company
          type: string
          example: SpaceX
          nullable: true
          title: Name
        interaction_count:
          description: Number of interactions
          type: integer
          example: 1
          nullable: true
          readOnly: true
        owner_id:
          description: Owner ID
          type: string
          example: '12345'
          nullable: true
        image:
          description: The Image URL of the company
          type: string
          example: 'https://www.spacex.com/static/images/share.jpg'
          nullable: true
        description:
          description: A description of the company
          type: string
          example: 'Space Exploration Technologies Corp. is an American aerospace manufacturer, space transportation services and communications company headquartered in Hawthorne, California.'
          nullable: true
        vat_number:
          description: The VAT number of the company
          type: string
          example: BE0689615164
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        status:
          description: The status of the company
          type: string
          example: Open
          nullable: true
        fax:
          description: The fax number of the company
          type: string
          example: '+12129876543'
          nullable: true
        annual_revenue:
          description: The annual revenue of the company
          type: string
          example: +$35m
          nullable: true
        number_of_employees:
          description: Number of employees
          type: string
          example: 500-1000
          nullable: true
        industry:
          description: The industry represents the type of business the company is in.
          type: string
          example: Apparel
          nullable: true
        ownership:
          description: The ownership indicates the type of ownership of the company.
          type: string
          example: Public
          nullable: true
        sales_tax_number:
          description: A sales tax number is a unique number that identifies a company for tax purposes.
          type: string
          example: 12456EN
          nullable: true
          title: Sales tax number
        payee_number:
          description: A payee number is a unique number that identifies a payee for tax purposes.
          type: string
          example: 78932EN
          nullable: true
          title: Payee number
        abn_or_tfn:
          description: 'An ABN is necessary for operating a business, while a TFN (Tax File Number) is required for any person working in Australia.'
          type: string
          example: 46 115 614 695
          nullable: true
          title: ABN or TFN
        abn_branch:
          description: An ABN Branch (also known as a GST Branch) is used if part of your business needs to account for GST separately from its parent entity.
          type: string
          example: '123'
          nullable: true
          title: ABN Branch
        acn:
          description: 'The Australian Company Number (ACN) is a nine digit number with the last digit being a check digit calculated using a modified modulus 10 calculation. ASIC has adopted a convention of always printing and displaying the ACN in the format XXX XXX XXX; three blocks of three characters, each block separated by a blank.'
          type: string
          example: XXX XXX XXX
          nullable: true
          title: ACN
        first_name:
          $ref: '#/components/schemas/FirstName'
        last_name:
          $ref: '#/components/schemas/LastName'
        parent_id:
          description: Parent ID
          type: string
          example: '22345'
          nullable: true
          readOnly: true
        bank_accounts:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        social_links:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        row_type:
          type: object
          properties:
            id:
              type: string
              example: '12345'
              nullable: true
            name:
              type: string
              example: Customer Account
              nullable: true
          title: Company Row Type
          x-apideck-weights:
            id: critical
            name: medium
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        tags:
          $ref: '#/components/schemas/Tags'
        read_only:
          description: Whether the company is read-only or not
          type: boolean
          example: false
          nullable: true
          title: Read-only
        last_activity_at:
          description: Last activity date
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        deleted:
          description: Whether the company is deleted or not
          type: boolean
          example: false
          readOnly: true
        salutation:
          description: 'A formal salutation for the person. For example, ''Mr'', ''Mrs'''
          type: string
          example: Mr
          nullable: true
        birthday:
          description: The date of birth of the person.
          type: string
          format: date
          example: '2000-08-12'
          nullable: true
          title: Birth Date
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          description: Updated by user ID
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        created_by:
          description: Created by user ID
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        updated_at:
          description: Last updated date
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        created_at:
          description: Creation date
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - name
      x-apideck-schema-id: Company
      x-apideck-weights:
        id: critical
        name: critical
        interaction_count: edge-case
        owner_id: high
        image: low
        description: medium
        vat_number: high
        currency: medium
        status: high
        fax: low
        annual_revenue: low
        number_of_employees: low
        industry: medium
        ownership: low
        sales_tax_number: medium
        payee_number: edge-case
        abn_or_tfn: edge-case
        abn_branch: edge-case
        acn: edge-case
        first_name: edge-case
        last_name: edge-case
        parent_id: edge-case
        bank_accounts: medium
        websites: medium
        addresses: high
        social_links: low
        phone_numbers: high
        emails: high
        row_type: edge-case
        custom_fields: medium
        tags: low
        read_only: low
        last_activity_at: low
        deleted: medium
        salutation: edge-case
        birthday: edge-case
        updated_by: edge-case
        created_by: edge-case
        updated_at: high
        created_at: medium
    AccountingCompanyId:
      description: The company or subsidiary id the transaction belongs to
      type: string
      example: '12345'
      nullable: true
      title: CompanyId
    CompanyInfo:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        company_name:
          $ref: '#/components/schemas/CompanyName'
        status:
          description: Based on the status some functionality is enabled or disabled.
          type: string
          example: active
          enum:
            - active
            - inactive
          title: Company status
          x-apideck-enum-id: company-info.status
        legal_name:
          description: The legal name of the company
          type: string
          example: SpaceX Inc.
          title: Legal name
        country:
          description: country code according to ISO 3166-1 alpha-2.
          type: string
          example: US
          nullable: true
        sales_tax_number:
          $ref: '#/components/schemas/SalesTaxNumber'
        automated_sales_tax:
          description: Whether sales tax is calculated automatically for the company
          type: boolean
          title: Automated sales tax
        sales_tax_enabled:
          description: Whether sales tax is enabled for the company
          type: boolean
          title: Sales tax enabled
        default_sales_tax:
          $ref: '#/components/schemas/TaxRate'
        currency:
          $ref: '#/components/schemas/Currency'
        language:
          $ref: '#/components/schemas/Language'
        fiscal_year_start_month:
          description: The start month of fiscal year.
          type: string
          example: January
          enum:
            - January
            - February
            - March
            - April
            - May
            - June
            - July
            - August
            - September
            - October
            - November
            - December
          title: The start month of fiscal year.
          x-apideck-enum-id: company-info.fiscal_year_start_month
        company_start_date:
          description: Date when company file was created
          type: string
          format: date
          example: '2015-06-05'
          title: Date when company file was created
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      additionalProperties: false
      x-apideck-schema-id: CompanyInfo
      x-apideck-weights:
        id: medium
        company_name: critical
        status: critical
        legal_name: medium
        sales_tax_number: medium
        currency: medium
        language: low
        fiscal_year_start_month: medium
        company_start_date: medium
        addresses: medium
        phone_numbers: medium
        emails: medium
        default_sales_tax: edge-case
        sales_tax_enabled: edge-case
        automated_sales_tax: edge-case
        row_version: edge-case
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: low
    CompanyName:
      description: The name of the company.
      type: string
      example: SpaceX
      nullable: true
      title: Company name
    Contact:
      type: object
      properties:
        id:
          description: Unique identifier for the contact.
          type: string
          example: '12345'
          readOnly: true
        name:
          description: Full name of the contact.
          type: string
          example: Elon Musk
          nullable: true
        owner_id:
          description: The owner of the contact.
          type: string
          example: '54321'
          nullable: true
        type:
          description: The type of the contact.
          type: string
          example: personal
          enum:
            - customer
            - supplier
            - employee
            - personal
          nullable: true
          x-apideck-enum-id: contacts.type
        company_id:
          description: The company the contact is associated with.
          type: string
          example: '23456'
          nullable: true
        company_name:
          description: The name of the company the contact is associated with.
          type: string
          example: '23456'
          nullable: true
        lead_id:
          description: The lead the contact is associated with.
          type: string
          example: '34567'
          nullable: true
        first_name:
          description: The first name of the contact.
          type: string
          example: Elon
          nullable: true
        middle_name:
          description: The middle name of the contact.
          type: string
          example: D.
          nullable: true
        last_name:
          description: The last name of the contact.
          type: string
          example: Musk
          nullable: true
        prefix:
          description: The prefix of the contact.
          type: string
          example: Mr.
          nullable: true
        suffix:
          description: The suffix of the contact.
          type: string
          example: PhD
          nullable: true
        title:
          description: The job title of the contact.
          type: string
          example: CEO
          nullable: true
        department:
          description: The department of the contact.
          type: string
          example: Engineering
          nullable: true
        language:
          description: language code according to ISO 639-1. For the United States - EN
          type: string
          example: EN
          nullable: true
        gender:
          description: The gender of the contact.
          type: string
          example: female
          enum:
            - male
            - female
            - unisex
          nullable: true
          x-apideck-enum-id: contacts.gender
        birthday:
          description: The birthday of the contact.
          type: string
          example: '2000-08-12'
          nullable: true
        image:
          type: string
          example: 'https://unavatar.io/elon-musk'
          deprecated: true
          nullable: true
        photo_url:
          description: The URL of the photo of a person.
          type: string
          example: 'https://unavatar.io/elon-musk'
          nullable: true
          title: Photo URL
        lead_source:
          description: The lead source of the contact.
          type: string
          example: Cold Call
          nullable: true
        fax:
          description: The fax number of the contact.
          type: string
          example: '+12129876543'
          nullable: true
        description:
          description: The description of the contact.
          type: string
          example: Internal champion
          nullable: true
          title: Description
        current_balance:
          description: The current balance of the contact.
          type: number
          example: 10.5
          nullable: true
          title: Current Balance
        status:
          description: The status of the contact.
          type: string
          example: open
          nullable: true
        active:
          description: The active status of the contact.
          type: boolean
          example: true
          nullable: true
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        social_links:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        email_domain:
          type: string
          example: gmail.com
          nullable: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        tags:
          $ref: '#/components/schemas/Tags'
        first_call_at:
          description: The first call date of the contact.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        first_email_at:
          description: The first email date of the contact.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        last_activity_at:
          description: The last activity date of the contact.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_at:
          description: The last update date of the contact.
          type: string
          format: date-time
          example: '2017-08-12T20:43:21.291Z'
          nullable: true
          readOnly: true
        created_at:
          description: The creation date of the contact.
          type: string
          format: date-time
          example: '2017-08-12T20:43:21.291Z'
          nullable: true
          readOnly: true
        opportunity_ids:
          description: The opportunity ids of the contact.
          type: array
          items:
            type: string
            example: '12345'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - name
      x-apideck-schema-id: Contact
      x-apideck-weights:
        id: critical
        name: critical
        owner_id: medium
        type: medium
        company_id: high
        company_name: medium
        lead_id: medium
        first_name: high
        middle_name: low
        last_name: high
        prefix: low
        suffix: low
        title: medium
        department: medium
        language: medium
        gender: medium
        birthday: medium
        image: medium
        photo_url: medium
        lead_source: low
        fax: low
        description: low
        current_balance: edge-case
        status: edge-case
        active: edge-case
        websites: medium
        addresses: high
        social_links: low
        phone_numbers: high
        emails: high
        email_domain: edge-case
        custom_fields: medium
        tags: low
        first_call_at: edge-case
        first_email_at: edge-case
        last_activity_at: medium
        updated_at: high
        created_at: medium
        opportunity_ids: low
      x-pii:
        - name
        - first_name
        - middle_name
        - last_name
        - email
    CreateBillResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: bills
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateBillResponse
    CreateCreditNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: credit-notes
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateCreditNoteResponse
    CreateCustomerResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: customers
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateCustomerResponse
    CreateInvoiceItemResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: invoice-items
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateInvoiceItemResponse
    CreateInvoiceResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: invoices
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/InvoiceResponse'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateInvoiceResponse
    CreateJournalEntryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: journal-entries
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateLedgerAccountResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: ledger-accounts
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateLedgerAccountResponse
    CreatePaymentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreatePaymentResponse
    CreatePurchaseOrderResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: PurchaseOrders
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateSupplierResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateSupplierResponse
    CreateTaxRateResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: tax-rates
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateTaxRateResponse
    CreatedAt:
      description: The date and time when the object was created.
      type: string
      format: date-time
      example: '2020-09-30T07:43:32.000Z'
      nullable: true
      readOnly: true
      title: Created at (timestamp)
    CreatedBy:
      description: The user who created the object.
      type: string
      example: '12345'
      nullable: true
      readOnly: true
      title: Created by
    CreditNote:
      type: object
      properties:
        id:
          description: Unique identifier representing the entity
          type: string
          example: '123456'
          readOnly: true
          title: Credit Note identifier
        number:
          description: Credit note number.
          type: string
          example: OIT00546
          nullable: true
          title: Credit note number
        customer:
          $ref: '#/components/schemas/LinkedCustomer'
        company_id:
          $ref: '#/components/schemas/AccountingCompanyId'
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          $ref: '#/components/schemas/CurrencyRate'
        tax_inclusive:
          $ref: '#/components/schemas/TaxInclusive'
        sub_total:
          description: 'Sub-total amount, normally before tax.'
          type: number
          example: 27500
          nullable: true
          title: Sub-total amount
        total_amount:
          description: Amount of transaction
          type: number
          example: 49.99
          title: Total amount
        total_tax:
          description: Total tax amount applied to this invoice.
          type: number
          example: 2500
          nullable: true
          title: Total tax amount
        tax_code:
          description: Applicable tax id/code override if tax is not supplied on a line item basis.
          type: string
          example: '1234'
          nullable: true
          title: Tax Code
        balance:
          description: The balance reflecting any payments made against the transaction.
          type: number
          example: 27500
          nullable: true
          title: Balance
        remaining_credit:
          description: Indicates the total credit amount still available to apply towards the payment.
          type: number
          example: 27500
          nullable: true
          title: Remaining Credit
        status:
          description: Status of credit notes
          type: string
          example: authorised
          enum:
            - draft
            - authorised
            - paid
            - voided
            - deleted
          title: Credit Note status
          x-apideck-enum-id: credit-notes.status
        reference:
          description: 'Optional reference message ie: Debit remittance detail.'
          type: string
          example: '123456'
          nullable: true
          title: Credit Note reference
        date_issued:
          description: 'Date credit note issued - YYYY:MM::DDThh:mm:ss.sTZD'
          type: string
          format: date-time
          example: '2021-05-01T12:00:00.000Z'
          title: Datetime
        date_paid:
          description: 'Date credit note paid - YYYY:MM::DDThh:mm:ss.sTZD'
          type: string
          format: date-time
          example: '2021-05-01T12:00:00.000Z'
          nullable: true
          title: Datetime
        type:
          description: Type of payment
          type: string
          example: accounts_receivable_credit
          enum:
            - accounts_receivable_credit
            - accounts_payable_credit
          title: Credit Note Type
          x-apideck-enum-id: credit-notes.type
        account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
        allocations:
          type: array
          items:
            $ref: '#/components/schemas/Allocation'
        note:
          description: Optional note to be associated with the credit note.
          type: string
          example: Some notes about this credit note
          nullable: true
          title: Note
        terms:
          description: Optional terms to be associated with the credit note.
          type: string
          example: Some terms about this credit note
          nullable: true
          title: Terms
        billing_address:
          $ref: '#/components/schemas/Address'
        shipping_address:
          $ref: '#/components/schemas/Address'
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - id
        - total_amount
      x-apideck-schema-id: CreditNote
      x-apideck-strict-required:
        - total_amount
        - currency
        - customer
      x-apideck-weights:
        id: critical
        number: low
        customer: high
        company_id: middle
        currency: critical
        currency_rate: medium
        tax_inclusive: low
        sub_total: critical
        total_amount: critical
        total_tax: edge-case
        tax_code: edge-case
        balance: critical
        remaining_credit: edge-case
        status: high
        reference: low
        date_issued: edge-case
        date_paid: critical
        type: edge-case
        account: critical
        line_items: medium
        allocations: medium
        note: low
        terms: low
        billing_address: low
        shipping_address: low
        tracking_categories: low
        custom_fields: medium
        row_version: edge-case
        updated_by: low
        created_by: low
        created_at: medium
        updated_at: medium
    CreditNotesFilter:
      type: object
      properties:
        updated_since:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Updated since (timestamp)
      example:
        updated_since: '2020-09-30T07:43:32.000Z'
      additionalProperties: false
      x-apideck-schema-id: CreditNotesFilter
    CreditNotesSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Customers
          type: string
          example: updated_at
          enum:
            - created_at
            - updated_at
          x-apideck-enum-id: customers.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: updated_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: CreditNotesSort
    Currency:
      description: 'Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).'
      type: string
      example: USD
      enum:
        - UNKNOWN_CURRENCY
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOV
        - BRL
        - BSD
        - BTN
        - BWP
        - BYR
        - BZD
        - CAD
        - CDF
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - COU
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MXV
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SRD
        - SSP
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRC
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - USN
        - USS
        - UYI
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XAG
        - XAU
        - XBA
        - XBB
        - XBC
        - XBD
        - XCD
        - XDR
        - XOF
        - XPD
        - XPF
        - XPT
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMK
        - ZMW
        - BTC
        - ETH
      nullable: true
      title: Currency
      x-apideck-enum-coverage-ignore: true
      x-apideck-enum-id: currencies
      x-enum-elements:
        - name: UNKNOWN_CURRENCY
          description: Unknown currency
        - name: AED
          description: United Arab Emirates dirham
        - name: AFN
          description: Afghan afghani
        - name: ALL
          description: Albanian lek
        - name: AMD
          description: Armenian dram
        - name: ANG
          description: Netherlands Antillean guilder
        - name: AOA
          description: Angolan kwanza
        - name: ARS
          description: Argentine peso
        - name: AUD
          description: Australian dollar
        - name: AWG
          description: Aruban florin
        - name: AZN
          description: Azerbaijani manat
        - name: BAM
          description: Bosnia and Herzegovina convertible mark
        - name: BBD
          description: Barbados dollar
        - name: BDT
          description: Bangladeshi taka
        - name: BGN
          description: Bulgarian lev
        - name: BHD
          description: Bahraini dinar
        - name: BIF
          description: Burundian franc
        - name: BMD
          description: Bermudian dollar
        - name: BND
          description: Brunei dollar
        - name: BOB
          description: Boliviano
        - name: BOV
          description: Bolivian Mvdol
        - name: BRL
          description: Brazilian real
        - name: BSD
          description: Bahamian dollar
        - name: BTN
          description: Bhutanese ngultrum
        - name: BWP
          description: Botswana pula
        - name: BYR
          description: Belarusian ruble
        - name: BZD
          description: Belize dollar
        - name: CAD
          description: Canadian dollar
        - name: CDF
          description: Congolese franc
        - name: CHE
          description: WIR Euro
        - name: CHF
          description: Swiss franc
        - name: CHW
          description: WIR Franc
        - name: CLF
          description: Unidad de Fomento
        - name: CLP
          description: Chilean peso
        - name: CNY
          description: Chinese yuan
        - name: COP
          description: Colombian peso
        - name: COU
          description: Unidad de Valor Real
        - name: CRC
          description: Costa Rican colon
        - name: CUC
          description: Cuban convertible peso
        - name: CUP
          description: Cuban peso
        - name: CVE
          description: Cape Verdean escudo
        - name: CZK
          description: Czech koruna
        - name: DJF
          description: Djiboutian franc
        - name: DKK
          description: Danish krone
        - name: DOP
          description: Dominican peso
        - name: DZD
          description: Algerian dinar
        - name: EGP
          description: Egyptian pound
        - name: ERN
          description: Eritrean nakfa
        - name: ETB
          description: Ethiopian birr
        - name: EUR
          description: Euro
        - name: FJD
          description: Fiji dollar
        - name: FKP
          description: Falkland Islands pound
        - name: GBP
          description: Pound sterling
        - name: GEL
          description: Georgian lari
        - name: GHS
          description: Ghanaian cedi
        - name: GIP
          description: Gibraltar pound
        - name: GMD
          description: Gambian dalasi
        - name: GNF
          description: Guinean franc
        - name: GTQ
          description: Guatemalan quetzal
        - name: GYD
          description: Guyanese dollar
        - name: HKD
          description: Hong Kong dollar
        - name: HNL
          description: Honduran lempira
        - name: HRK
          description: Croatian kuna
        - name: HTG
          description: Haitian gourde
        - name: HUF
          description: Hungarian forint
        - name: IDR
          description: Indonesian rupiah
        - name: ILS
          description: Israeli new shekel
        - name: INR
          description: Indian rupee
        - name: IQD
          description: Iraqi dinar
        - name: IRR
          description: Iranian rial
        - name: ISK
          description: Icelandic króna
        - name: JMD
          description: Jamaican dollar
        - name: JOD
          description: Jordanian dinar
        - name: JPY
          description: Japanese yen
        - name: KES
          description: Kenyan shilling
        - name: KGS
          description: Kyrgyzstani som
        - name: KHR
          description: Cambodian riel
        - name: KMF
          description: Comoro franc
        - name: KPW
          description: North Korean won
        - name: KRW
          description: South Korean won
        - name: KWD
          description: Kuwaiti dinar
        - name: KYD
          description: Cayman Islands dollar
        - name: KZT
          description: Kazakhstani tenge
        - name: LAK
          description: Lao kip
        - name: LBP
          description: Lebanese pound
        - name: LKR
          description: Sri Lankan rupee
        - name: LRD
          description: Liberian dollar
        - name: LSL
          description: Lesotho loti
        - name: LTL
          description: Lithuanian litas
        - name: LVL
          description: Latvian lats
        - name: LYD
          description: Libyan dinar
        - name: MAD
          description: Moroccan dirham
        - name: MDL
          description: Moldovan leu
        - name: MGA
          description: Malagasy ariary
        - name: MKD
          description: Macedonian denar
        - name: MMK
          description: Myanmar kyat
        - name: MNT
          description: Mongolian tögrög
        - name: MOP
          description: Macanese pataca
        - name: MRO
          description: Mauritanian ouguiya
        - name: MUR
          description: Mauritian rupee
        - name: MVR
          description: Maldivian rufiyaa
        - name: MWK
          description: Malawian kwacha
        - name: MXN
          description: Mexican peso
        - name: MXV
          description: Mexican Unidad de Inversion
        - name: MYR
          description: Malaysian ringgit
        - name: MZN
          description: Mozambican metical
        - name: NAD
          description: Namibian dollar
        - name: NGN
          description: Nigerian naira
        - name: NIO
          description: Nicaraguan córdoba
        - name: NOK
          description: Norwegian krone
        - name: NPR
          description: Nepalese rupee
        - name: NZD
          description: New Zealand dollar
        - name: OMR
          description: Omani rial
        - name: PAB
          description: Panamanian balboa
        - name: PEN
          description: Peruvian sol
        - name: PGK
          description: Papua New Guinean kina
        - name: PHP
          description: Philippine peso
        - name: PKR
          description: Pakistani rupee
        - name: PLN
          description: Polish złoty
        - name: PYG
          description: Paraguayan guaraní
        - name: QAR
          description: Qatari riyal
        - name: RON
          description: Romanian leu
        - name: RSD
          description: Serbian dinar
        - name: RUB
          description: Russian ruble
        - name: RWF
          description: Rwandan franc
        - name: SAR
          description: Saudi riyal
        - name: SBD
          description: Solomon Islands dollar
        - name: SCR
          description: Seychelles rupee
        - name: SDG
          description: Sudanese pound
        - name: SEK
          description: Swedish krona
        - name: SGD
          description: Singapore dollar
        - name: SHP
          description: Saint Helena pound
        - name: SLL
          description: Sierra Leonean leone
        - name: SOS
          description: Somali shilling
        - name: SRD
          description: Surinamese dollar
        - name: SSP
          description: South Sudanese pound
        - name: STD
          description: São Tomé and Príncipe dobra
        - name: SVC
          description: Salvadoran colón
        - name: SYP
          description: Syrian pound
        - name: SZL
          description: Swazi lilangeni
        - name: THB
          description: Thai baht
        - name: TJS
          description: Tajikstani somoni
        - name: TMT
          description: Turkmenistan manat
        - name: TND
          description: Tunisian dinar
        - name: TOP
          description: Tongan pa'anga
        - name: TRY
          description: Turkish lira
        - name: TTD
          description: Trinidad and Tobago dollar
        - name: TWD
          description: New Taiwan dollar
        - name: TZS
          description: Tanzanian shilling
        - name: UAH
          description: Ukrainian hryvnia
        - name: UGX
          description: Ugandan shilling
        - name: USD
          description: United States dollar
        - name: USN
          description: United States dollar (next day)
        - name: USS
          description: United States dollar (same day)
        - name: UYI
          description: Uruguay Peso en Unidedades Indexadas
        - name: UYU
          description: Uruguyan peso
        - name: UZS
          description: Uzbekistan som
        - name: VEF
          description: Venezuelan bolívar soberano
        - name: VND
          description: Vietnamese đồng
        - name: VUV
          description: Vanuatu vatu
        - name: WST
          description: Samoan tala
        - name: XAF
          description: CFA franc BEAC
        - name: XAG
          description: Silver
        - name: XAU
          description: Gold
        - name: XBA
          description: European Composite Unit
        - name: XBB
          description: European Monetary Unit
        - name: XBC
          description: European Unit of Account 9
        - name: XBD
          description: European Unit of Account 17
        - name: XCD
          description: East Caribbean dollar
        - name: XDR
          description: Special drawing rights (International Monetary Fund)
        - name: XOF
          description: CFA franc BCEAO
        - name: XPD
          description: Palladium
        - name: XPF
          description: CFP franc
        - name: XPT
          description: Platinum
        - name: XTS
          description: Code reserved for testing
        - name: XXX
          description: No currency
        - name: YER
          description: Yemeni rial
        - name: ZAR
          description: South African rand
        - name: ZMK
          description: Zambian kwacha
        - name: ZMW
          description: Zambian kwacha
        - name: BTC
          description: Bitcoin
        - name: ETH
          description: Ether
    CurrencyRate:
      description: Currency Exchange Rate at the time entity was recorded/generated.
      type: number
      example: 0.69
      nullable: true
      title: Currency Exchange Rate
    CustomField:
      type: object
      properties:
        id:
          description: Unique identifier for the custom field.
          type: string
          example: '2389328923893298'
          nullable: true
          title: ID
        name:
          description: Name of the custom field.
          type: string
          example: employee_level
          nullable: true
          title: Name
        description:
          description: More information about the custom field
          type: string
          example: Employee Level
          nullable: true
          title: Description
        value:
          anyOf:
            - type: string
              example: Uses Salesforce and Marketo
              nullable: true
            - type: number
              example: 10
              nullable: true
            - type: boolean
              example: true
              nullable: true
            - type: object
              example:
                foo: bar
              nullable: true
            - type: array
              items:
                type: string
            - type: array
              items:
                type: object
      additionalProperties: false
      required:
        - id
      x-apideck-schema-id: CustomField
      x-apideck-weights:
        id: critical
        value: critical
        name: medium
        description: edge-case
    Customer:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        downstream_id:
          $ref: '#/components/schemas/DownstreamId'
        display_id:
          description: Display ID
          type: string
          example: EMP00101
          nullable: true
          title: Display ID
        display_name:
          description: Display name
          type: string
          example: Windsurf Shop
          nullable: true
          title: Display Name
        company_name:
          $ref: '#/components/schemas/CompanyName'
        company_id:
          $ref: '#/components/schemas/AccountingCompanyId'
        title:
          $ref: '#/components/schemas/Title'
        first_name:
          $ref: '#/components/schemas/FirstName'
        middle_name:
          $ref: '#/components/schemas/MiddleName'
        last_name:
          $ref: '#/components/schemas/LastName'
        suffix:
          $ref: '#/components/schemas/Suffix'
        individual:
          description: Is this an individual or business customer
          type: boolean
          example: true
          nullable: true
          title: Is individual
        project:
          description: 'If true, indicates this is a Project.'
          type: boolean
          example: false
          nullable: true
          title: Is project
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        bank_accounts:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
        notes:
          description: Some notes about this customer
          type: string
          example: Some notes about this customer
          nullable: true
          title: Notes
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        tax_number:
          $ref: '#/components/schemas/TaxNumber'
        currency:
          $ref: '#/components/schemas/Currency'
        account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        parent:
          $ref: '#/components/schemas/LinkedParentCustomer'
        status:
          description: Customer status
          type: string
          example: active
          enum:
            - active
            - inactive
            - archived
            - gdpr-erasure-request
            - unknown
          nullable: true
          title: Status
          x-apideck-enum-id: customers.status
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        channel:
          $ref: '#/components/schemas/Channel'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - id
      x-apideck-schema-id: Customer
      x-apideck-strict-any-of:
        - required:
            - first_name
            - last_name
        - required:
            - company_name
      x-apideck-strict-required:
        - emails
        - addresses
        - phone_numbers
        - status
        - updated_at
      x-apideck-weights:
        id: critical
        downstream_id: edge-case
        display_id: edge-case
        display_name: edge-case
        company_name: high
        company_id: medium
        title: high
        first_name: high
        middle_name: low
        last_name: high
        suffix: low
        individual: medium
        addresses: high
        phone_numbers: high
        emails: high
        websites: medium
        bank_accounts: high
        notes: low
        tax_rate: medium
        tax_number: medium
        currency: medium
        account: medium
        status: high
        payment_method: edge-case
        channel: edge-case
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
        row_version: edge-case
    CustomersFilter:
      type: object
      properties:
        company_name:
          description: Company Name of customer to search for
          type: string
          example: SpaceX
          title: Company Name
        display_name:
          description: Display Name of customer to search for
          type: string
          example: Techno King
          title: Display Name
        first_name:
          description: First name of customer to search for
          type: string
          example: Elon
          title: First Name
        last_name:
          description: Last name of customer to search for
          type: string
          example: Musk
          title: Last Name
        email:
          description: Email of customer to search for
          type: string
          example: elon@spacex.com
          title: Email
        status:
          description: Status of customer to filter on
          type: string
          example: active
          enum:
            - active
            - inactive
            - archived
            - all
          nullable: true
          title: Status
          x-apideck-enum-id: customers.status
        updated_since:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Updated since (timestamp)
      example:
        company_name: SpaceX
        display_name: Elon Musk
        first_name: Elon
        last_name: Musk
        email: elon@musk.com
        status: active
        updated_since: '2020-09-30T07:43:32.000Z'
      additionalProperties: false
      x-apideck-schema-id: CustomersFilter
    CustomersSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Customers
          type: string
          example: updated_at
          enum:
            - created_at
            - updated_at
          x-apideck-enum-id: customers.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: updated_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: CustomersSort
    DeleteBillResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: bills
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteBillResponse
    DeleteCreditNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: credit-notes
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteCreditNoteResponse
    DeleteCustomerResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: customers
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteCustomerResponse
    DeleteInvoiceResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: invoices
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/InvoiceResponse'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteInvoiceResponse
    DeleteJournalEntryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: journal-entries
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteLedgerAccountResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: ledger-accounts
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteLedgerAccountResponse
    DeletePaymentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeletePaymentResponse
    DeletePurchaseOrderResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: PurchaseOrders
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteSubsidiaryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: subsidiaries
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteSupplierResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: suppliers
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteSupplierResponse
    DeleteTaxRateResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: tax-rates
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteTaxRateResponse
    AccountingDepartment:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        parent_id:
          $ref: '#/components/schemas/WritableId'
        name:
          description: The name of the department.
          type: string
          example: Sales
          nullable: true
          title: Department name
        status:
          description: Based on the status some functionality is enabled or disabled.
          type: string
          example: active
          enum:
            - active
            - inactive
          title: Department status
          x-apideck-enum-id: department.status
        subsidiaries:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryReference'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: AccountingDepartment
      x-apideck-weights:
        id: medium
        parent_id: low
        name: critical
        status: critical
        subsidiaries: low
    AccountingDepartmentsFilter:
      type: object
      properties:
        subsidiary:
          description: Id of the subsidiary to search for
          type: string
          example: '1'
          title: Subsidiary Id
      example:
        subsidiary: '1'
      additionalProperties: false
      x-apideck-schema-id: AccountingDepartmentsFilter
    AccountingLocationsFilter:
      type: object
      properties:
        subsidiary:
          description: Id of the subsidiary to search for
          type: string
          example: '1'
          title: Subsidiary Id
      example:
        subsidiary: '1'
      additionalProperties: false
      x-apideck-schema-id: AccountingLocationsFilter
    DiscountPercentage:
      description: Discount percentage applied to this transaction.
      type: number
      example: 5.5
      nullable: true
      title: Discount Percentage
    DownstreamId:
      description: The third-party API ID of original entity
      type: string
      example: '12345'
      nullable: true
      readOnly: true
    DueDate:
      description: The due date is the date on which a payment is scheduled to be received - YYYY-MM-DD.
      type: string
      format: date
      example: '2020-10-30'
      title: Due date
    Email:
      type: object
      properties:
        id:
          description: Unique identifier for the email address
          type: string
          example: '123'
          nullable: true
        email:
          description: Email address
          type: string
          format: email
          example: elon@musk.com
          minLength: 1
          nullable: true
        type:
          description: Email type
          type: string
          example: primary
          enum:
            - primary
            - secondary
            - work
            - personal
            - billing
            - other
          nullable: true
          x-apideck-enum-id: emails.type
      additionalProperties: false
      required:
        - email
      x-apideck-schema-id: Email
      x-apideck-weights:
        email: critical
        type: critical
        id: edge-case
    FirstName:
      description: The first name of the person.
      type: string
      example: Elon
      nullable: true
      title: First name
    GetBalanceSheetResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: BalanceSheets
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/BalanceSheet'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetBalanceSheetResponse
    GetBillResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: bills
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Bill'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetBillResponse
    GetBillsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: bills
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Bill'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetBillsResponse
    GetCompanyInfoResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: company-info
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/CompanyInfo'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCompanyInfoResponse
    GetCreditNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: credit-notes
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/CreditNote'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCreditNoteResponse
    GetCreditNotesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: credit-notes
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/CreditNote'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCreditNotesResponse
    GetCustomerResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: customers
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Customer'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCustomerResponse
    GetCustomersResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: customers
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCustomersResponse
    GetInvoiceItemResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: invoice-items
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/InvoiceItem'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetInvoiceItemResponse
    GetInvoiceItemsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: invoice-items
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetInvoiceItemsResponse
    GetInvoiceResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: invoices
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Invoice'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetInvoiceResponse
    GetInvoicesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: invoices
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetInvoicesResponse
    GetJournalEntriesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: journal-entries
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/JournalEntry'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetJournalEntryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: journal-entries
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/JournalEntry'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetLedgerAccountResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: ledger-accounts
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/LedgerAccount'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetLedgerAccountResponse
    GetLedgerAccountsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: ledger-accounts
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/LedgerAccount'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetLedgerAccountsResponse
    GetPaymentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Payment'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetPaymentResponse
    GetPaymentsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetPaymentsResponse
    GetProfitAndLossResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: ProfitAndLosses
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/ProfitAndLoss'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetProfitAndLossResponse
    GetPurchaseOrderResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: PurchaseOrders
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/PurchaseOrder'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetPurchaseOrdersResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: PurchaseOrders
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrder'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateSubsidiaryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: subsidiaries
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetSubsidiariesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: subsidiaries
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Subsidiary'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetSubsidiariesResponse
    GetSubsidiaryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: subsidiaries
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Subsidiary'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetSubsidiaryResponse
    GetAccountingLocationsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: subsidiaries
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/AccountingLocation'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetAccountingLocationsResponse
    GetAccountingLocationResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: subsidiaries
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/AccountingLocation'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetAccountingLocationResponse
    CreateAccountingLocationResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: locations
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteAccountingLocationResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: locations
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateAccountingLocationResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: locations
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetAccountingDepartmentsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: subsidiaries
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/AccountingDepartment'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetAccountingDepartmentsResponse
    GetAccountingDepartmentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: subsidiaries
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/AccountingDepartment'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetAccountingDepartmentResponse
    CreateAccountingDepartmentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: departments
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteAccountingDepartmentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: departments
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateAccountingDepartmentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: departments
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetSupplierResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: suppliers
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Supplier'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetSupplierResponse
    GetSuppliersResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: suppliers
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Supplier'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetSuppliersResponse
    GetTaxRateResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: tax-rates
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/TaxRate'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetTaxRateResponse
    GetTaxRatesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: tax-rates
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetTaxRatesResponse
    Id:
      description: A unique identifier for an object.
      type: string
      example: '12345'
      readOnly: true
      title: ID
    Invoice:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        downstream_id:
          $ref: '#/components/schemas/DownstreamId'
        type:
          description: Invoice type
          type: string
          example: service
          enum:
            - standard
            - credit
            - service
            - product
            - supplier
            - other
          nullable: true
          title: Invoice type
          x-apideck-enum-id: invoices.type
        number:
          description: Invoice number.
          type: string
          example: OIT00546
          nullable: true
          title: Invoice number
        customer:
          $ref: '#/components/schemas/LinkedCustomer'
        company_id:
          $ref: '#/components/schemas/AccountingCompanyId'
        invoice_date:
          description: Date invoice was issued - YYYY-MM-DD.
          type: string
          format: date
          example: '2020-09-30'
          nullable: true
          title: Invoice date
        due_date:
          description: The invoice due date is the date on which a payment or invoice is scheduled to be received by the seller - YYYY-MM-DD.
          type: string
          format: date
          example: '2020-09-30'
          nullable: true
          title: Due date
        terms:
          description: Terms of payment.
          type: string
          example: Net 30 days
          nullable: true
          title: Terms
        po_number:
          description: A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.
          type: string
          example: '90000117'
          nullable: true
          title: Purchase Order number
        reference:
          description: Optional invoice reference.
          type: string
          example: '123456'
          nullable: true
          title: Invoice reference
        status:
          description: Invoice status
          type: string
          example: draft
          enum:
            - draft
            - submitted
            - authorised
            - partially_paid
            - paid
            - void
            - credit
            - deleted
          nullable: true
          title: Status
          x-apideck-enum-id: invoices.status
        invoice_sent:
          description: Invoice sent to contact/customer.
          type: boolean
          example: true
          title: Invoice Sent
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          $ref: '#/components/schemas/CurrencyRate'
        tax_inclusive:
          $ref: '#/components/schemas/TaxInclusive'
        sub_total:
          description: 'Sub-total amount, normally before tax.'
          type: number
          example: 27500
          nullable: true
          title: Sub-total amount
        total_tax:
          description: Total tax amount applied to this invoice.
          type: number
          example: 2500
          nullable: true
          title: Total tax amount
        tax_code:
          description: Applicable tax id/code override if tax is not supplied on a line item basis.
          type: string
          example: '1234'
          nullable: true
          title: Tax Code
        discount_percentage:
          description: Discount percentage applied to this invoice.
          type: number
          example: 5.5
          nullable: true
          title: Discount Percent
        discount_amount:
          description: Discount amount applied to this invoice.
          type: number
          example: 25
          nullable: true
          title: Discount Amount
        total:
          description: 'Total amount of invoice, including tax.'
          type: number
          example: 27500
          nullable: true
          title: Total amount
        balance:
          description: Balance of invoice due.
          type: number
          example: 27500
          nullable: true
          title: Balance
        deposit:
          description: Amount of deposit made to this invoice.
          type: number
          example: 0
          nullable: true
          title: Deposit
        customer_memo:
          description: Customer memo
          type: string
          example: Thank you for your business and have a great day!
          nullable: true
          title: Customer memo
        tracking_category:
          $ref: '#/components/schemas/DeprecatedLinkedTrackingCategory'
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
        billing_address:
          $ref: '#/components/schemas/Address'
        shipping_address:
          $ref: '#/components/schemas/Address'
        template_id:
          description: Optional invoice template
          type: string
          example: '123456'
          nullable: true
          title: Template
        source_document_url:
          description: 'URL link to a source document - shown as ''Go to [appName]'' in the downstream app. Currently only supported for Xero.'
          type: string
          example: 'https://www.invoicesolution.com/invoice/123456'
          nullable: true
          title: Source document URL
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        channel:
          $ref: '#/components/schemas/Channel'
        language:
          $ref: '#/components/schemas/Language'
        accounting_by_row:
          $ref: '#/components/schemas/AccountingByRow'
        bank_account:
          $ref: '#/components/schemas/BankAccount'
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: Invoice
      x-apideck-weights:
        id: critical
        downstream_id: low
        type: high
        number: high
        customer: high
        company_id: middle
        invoice_date: edge-case
        due_date: edge-case
        terms: low
        po_number: low
        reference: low
        status: critical
        invoice_sent: low
        currency: medium
        currency_rate: low
        tax_inclusive: low
        sub_total: high
        total_tax: high
        tax_code: medium
        discount_percentage: medium
        discount_amount: medium
        total: critical
        balance: high
        deposit: low
        customer_memo: low
        line_items: critical
        billing_address: high
        shipping_address: medium
        template_id: edge-case
        source_document_url: edge-case
        payment_method: low
        channel: low
        language: low
        accounting_by_row: edge-case
        bank_account: low
        ledger_account: edge-case
        tracking_category: low
        tracking_categories: low
        row_version: edge-case
        custom_fields: medium
        updated_by: low
        created_by: low
        created_at: high
        updated_at: high
    InvoiceItem:
      type: object
      properties:
        id:
          description: The ID of the item.
          type: string
          example: '123456'
          readOnly: true
          title: Item ID
        name:
          description: Item name
          type: string
          example: Model Y
          nullable: true
          title: Item name
        description:
          description: A short description of the item
          type: string
          example: 'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.'
          nullable: true
          title: Description
        code:
          description: User defined item code
          type: string
          example: 120-C
          nullable: true
          title: Item code
        sold:
          description: Item will be available on sales transactions
          type: boolean
          example: true
          nullable: true
          title: Item sold
        purchased:
          description: Item is available for purchase transactions
          type: boolean
          example: true
          nullable: true
          title: Item purchased
        tracked:
          description: Item is inventoried
          type: boolean
          example: true
          nullable: true
          title: Item tracked
        taxable:
          description: 'If true, transactions for this item are taxable'
          type: boolean
          example: true
          nullable: true
          title: Item taxable
        inventory_date:
          description: The date of opening balance if inventory item is tracked - YYYY-MM-DD.
          type: string
          format: date
          example: '2020-10-30'
          nullable: true
          title: Inventory date
        type:
          description: Item type
          type: string
          example: inventory
          enum:
            - inventory
            - service
            - other
          nullable: true
          title: Type
          x-apideck-enum-id: invoice-items.type
        sales_details:
          type: object
          properties:
            unit_price:
              $ref: '#/components/schemas/UnitPrice'
            unit_of_measure:
              $ref: '#/components/schemas/UnitOfMeasure'
            tax_inclusive:
              $ref: '#/components/schemas/TaxInclusive'
            tax_rate:
              $ref: '#/components/schemas/LinkedTaxRate'
          x-apideck-weights:
            unit_price: medium
            unit_of_measure: medium
            tax_inclusive: medium
            tax_rate: medium
        purchase_details:
          type: object
          properties:
            unit_price:
              $ref: '#/components/schemas/UnitPrice'
            unit_of_measure:
              $ref: '#/components/schemas/UnitOfMeasure'
            tax_inclusive:
              $ref: '#/components/schemas/TaxInclusive'
            tax_rate:
              $ref: '#/components/schemas/LinkedTaxRate'
          x-apideck-weights:
            unit_price: medium
            unit_of_measure: medium
            tax_inclusive: medium
            tax_rate: medium
        quantity:
          $ref: '#/components/schemas/Quantity'
        unit_price:
          $ref: '#/components/schemas/UnitPrice'
        asset_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        income_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        expense_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        tracking_category:
          $ref: '#/components/schemas/DeprecatedLinkedTrackingCategory'
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        active:
          $ref: '#/components/schemas/Active'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: InvoiceItem
      x-apideck-weights:
        id: critical
        name: critical
        description: medium
        code: high
        sold: edge-case
        purchased: edge-case
        tracked: edge-case
        taxable: edge-case
        inventory_date: high
        type: high
        sales_details: medium
        purchase_details: medium
        quantity: high
        unit_price: high
        asset_account: medium
        income_account: high
        expense_account: medium
        active: medium
        tracking_category: low
        tracking_categories: low
        row_version: edge-case
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
    InvoiceItemsFilter:
      type: object
      properties:
        name:
          description: Name of Invoice Items to search for
          type: string
          example: Widgets Large
          title: Name
        type:
          description: 'The type of invoice item, indicating whether it is an inventory item, a service, or another type.'
          type: string
          example: service
          enum:
            - inventory
            - service
            - other
          nullable: true
          title: Invoice item type
          x-apideck-enum-id: accounting.invoice_items_type
      example:
        name: Widgets Large
        type: service
      additionalProperties: false
      x-apideck-schema-id: InvoiceItemsFilter
    InvoiceItemFilter:
      type: object
      properties:
        type:
          description: 'The type of invoice item, indicating whether it is an inventory item, a service, or another type.'
          type: string
          example: service
          enum:
            - inventory
            - service
            - other
          nullable: true
          title: Invoice item type
          x-apideck-enum-id: accounting.invoice_item_type
      example:
        type: service
      additionalProperties: false
      x-apideck-schema-id: InvoiceItemFilter
    InvoiceLineItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/WritableId'
        row_id:
          description: Row ID
          type: string
          example: '12345'
          title: Row ID
        code:
          description: User defined item code
          type: string
          example: 120-C
          nullable: true
          title: Item code
        line_number:
          $ref: '#/components/schemas/LineNumber'
        description:
          description: User defined description
          type: string
          example: 'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.'
          nullable: true
          title: Description
        type:
          description: Item type
          type: string
          example: sales_item
          enum:
            - sales_item
            - discount
            - info
            - sub_total
            - other
          nullable: true
          title: Type
          x-apideck-enum-id: invoices.lines-items.type
        tax_amount:
          description: Tax amount
          type: number
          example: 27500
          nullable: true
          title: Tax amount
        total_amount:
          description: Total amount of the line item
          type: number
          example: 27500
          nullable: true
          title: Total amount
        quantity:
          $ref: '#/components/schemas/Quantity'
        unit_price:
          $ref: '#/components/schemas/UnitPrice'
        unit_of_measure:
          $ref: '#/components/schemas/UnitOfMeasure'
        discount_percentage:
          description: Discount percentage applied to the line item when supported downstream.
          type: number
          example: 0.01
          nullable: true
          title: Discount Percentage
        discount_amount:
          description: Discount amount applied to the line item when supported downstream.
          type: number
          example: 19.99
          nullable: true
          title: Discount Amount
        location_id:
          description: Location id
          type: string
          example: '1234'
          nullable: true
          title: Location id
        department_id:
          description: Department id
          type: string
          example: '1234'
          nullable: true
          title: Department id
        item:
          $ref: '#/components/schemas/LinkedInvoiceItem'
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      title: Invoice Line Item
      x-apideck-schema-id: InvoiceLineItem
      x-apideck-weights:
        id: high
        row_id: edge-case
        code: medium
        line_number: medium
        description: high
        type: medium
        tax_amount: high
        total_amount: high
        quantity: high
        unit_price: high
        unit_of_measure: edge-case
        discount_percentage: low
        discount_amount: low
        location_id: low
        department_id: low
        item: high
        tax_rate: medium
        ledger_account: low
        tracking_categories: low
        custom_fields: medium
        row_version: edge-case
        created_at: edge-case
        updated_at: high
        updated_by: edge-case
        created_by: edge-case
    InvoiceResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        downstream_id:
          $ref: '#/components/schemas/DownstreamId'
      x-apideck-schema-id: InvoiceResponse
    InvoicesFilter:
      type: object
      properties:
        updated_since:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Updated since (timestamp)
        created_since:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Created since (timestamp)
        number:
          description: Invoice number to search for
          type: string
          example: OIT00546
          title: Invoice number
      example:
        updated_since: '2020-09-30T07:43:32.000Z'
        created_since: '2020-09-30T07:43:32.000Z'
        number: OIT00546
      additionalProperties: false
      x-apideck-schema-id: InvoicesFilter
    InvoicesSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Invoices
          type: string
          example: updated_at
          enum:
            - created_at
            - updated_at
          x-apideck-enum-id: invoices.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: updated_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: InvoicesSort
    JournalEntry:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        title:
          description: Journal entry title
          type: string
          example: 'Purchase Invoice-Inventory (USD): 2019/02/01 Batch Summary Entry'
          nullable: true
          title: Journal entry title
        currency_rate:
          $ref: '#/components/schemas/CurrencyRate'
        currency:
          $ref: '#/components/schemas/Currency'
        company_id:
          $ref: '#/components/schemas/AccountingCompanyId'
        line_items:
          description: Requires a minimum of 2 line items that sum to 0
          type: array
          items:
            $ref: '#/components/schemas/JournalEntryLineItem'
          minItems: 2
        memo:
          description: Reference for the journal entry.
          type: string
          example: Thank you for your business and have a great day!
          nullable: true
          title: Memo
        posted_at:
          description: This is the date on which the journal entry was added. This can be different from the creation date and can also be backdated.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Posted at (timestamp)
        journal_symbol:
          description: Journal symbol of the entry. For example IND for indirect costs
          type: string
          example: IND
          nullable: true
          title: Journal symbol
        tax_type:
          description: The specific category of tax associated with a transaction like sales or purchase
          type: string
          example: sales
          nullable: true
          title: Tax Type
        tax_code:
          $ref: '#/components/schemas/TaxCode'
        number:
          description: Journal entry number.
          type: string
          example: OIT00546
          nullable: true
          title: Journal entry number
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        accounting_period:
          $ref: '#/components/schemas/AccountingPeriod'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-strict-required:
        - line_items
      x-apideck-weights:
        id: critical
        title: medium
        currency_rate: low
        currency: medium
        company_id: medium
        line_items: medium
        memo: low
        posted_at: low
        journal_symbol: edge-case
        tax_type: edge-case
        tax_code: edge-case
        number: medium
        tracking_categories: low
        accounting_period: low
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
        row_version: edge-case
    JournalEntriesFilter:
      type: object
      properties:
        updated_since:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Updated since (timestamp)
      example:
        updated_since: '2020-09-30T07:43:32.000Z'
      additionalProperties: false
      x-apideck-schema-id: JournalEntriesFilter
    JournalEntriesSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Journal Entries.
          type: string
          example: updated_at
          enum:
            - created_at
            - updated_at
          x-apideck-enum-id: journal_entries.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: updated_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: JournalEntriesSort
    JournalEntryLineItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        description:
          description: User defined description
          type: string
          example: 'Model Y is a fully electric, mid-size SUV, with seating for up to seven, dual motor AWD and unparalleled protection.'
          nullable: true
          title: Description
        tax_amount:
          description: Tax amount
          type: number
          example: 27500
          nullable: true
          title: Tax amount
        sub_total:
          description: 'Sub-total amount, normally before tax.'
          type: number
          example: 27500
          nullable: true
          title: Sub-total amount
        total_amount:
          description: 'Debit entries are considered positive, and credit entries are considered negative.'
          type: number
          example: 27500
          nullable: true
          title: Total amount
        type:
          description: 'Debit entries are considered positive, and credit entries are considered negative.'
          type: string
          example: debit
          enum:
            - debit
            - credit
          title: Type
          x-apideck-enum-id: JournalEntryLineItemType
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        tracking_category:
          $ref: '#/components/schemas/DeprecatedLinkedTrackingCategory'
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        customer:
          $ref: '#/components/schemas/LinkedCustomer'
        supplier:
          $ref: '#/components/schemas/LinkedSupplier'
        department_id:
          $ref: '#/components/schemas/Id'
        location_id:
          $ref: '#/components/schemas/Id'
        line_number:
          $ref: '#/components/schemas/LineNumber'
      additionalProperties: false
      required:
        - ledger_account
        - type
      x-apideck-schema-id: JournalEntryLineItem
      x-apideck-strict-any-of:
        - required:
            - total_amount
        - required:
            - sub_total
      x-apideck-strict-required:
        - ledger_account
        - type
      x-apideck-weights:
        id: high
        description: medium
        tax_amount: high
        sub_total: medium
        total_amount: high
        type: critical
        tax_rate: medium
        tracking_category: low
        tracking_categories: low
        ledger_account: critical
        customer: medium
        supplier: medium
        department_id: edge-case
        location_id: edge-case
        line_number: low
    Language:
      description: language code according to ISO 639-1. For the United States - EN
      type: string
      example: EN
      nullable: true
    LastName:
      description: The last name of the person.
      type: string
      example: Musk
      nullable: true
      title: Last name
    LedgerAccount:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        display_id:
          description: The human readable display ID used when displaying the account
          type: string
          example: 1-12345
          title: Display ID
        nominal_code:
          description: The nominal code of the ledger account.
          type: string
          example: N091
          deprecated: true
          nullable: true
          title: Nominal Code
        code:
          description: The code assigned to the account.
          type: string
          example: '453'
          nullable: true
          title: Code
        classification:
          description: The classification of account.
          type: string
          example: asset
          enum:
            - asset
            - equity
            - expense
            - liability
            - revenue
            - income
            - other_income
            - other_expense
            - costs_of_sales
            - other
          nullable: true
          title: Classification
          x-apideck-enum-id: ledger-accounts.classification
        type:
          description: The type of account.
          type: string
          example: bank
          enum:
            - accounts_receivable
            - revenue
            - sales
            - other_income
            - bank
            - current_asset
            - fixed_asset
            - non_current_asset
            - other_asset
            - balancesheet
            - equity
            - expense
            - other_expense
            - costs_of_sales
            - accounts_payable
            - credit_card
            - current_liability
            - non_current_liability
            - other_liability
            - other
          title: Type
          x-apideck-enum-id: ledger-accounts.type
        sub_type:
          description: The sub type of account.
          type: string
          example: CHECKING_ACCOUNT
          nullable: true
          title: Sub Type
        name:
          description: The name of the account.
          type: string
          example: Bank account
          nullable: true
          title: Name
        fully_qualified_name:
          description: The fully qualified name of the account.
          type: string
          example: Asset.Bank.Checking_Account
          nullable: true
          title: Fully Qualified Name
        description:
          description: The description of the account.
          type: string
          example: Main checking account
          nullable: true
          title: Description
        opening_balance:
          description: The opening balance of the account.
          type: number
          example: 75000
          nullable: true
          title: Opening balance
        current_balance:
          description: The current balance of the account.
          type: number
          example: 20000
          nullable: true
          title: Current balance
        currency:
          $ref: '#/components/schemas/Currency'
        tax_type:
          description: The tax type of the account.
          type: string
          example: NONE
          nullable: true
          title: Tax Type
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        level:
          type: number
          example: 1
          nullable: true
        active:
          description: Whether the account is active or not.
          type: boolean
          example: true
          nullable: true
          title: Is active
        status:
          description: The status of the account.
          type: string
          example: active
          enum:
            - active
            - inactive
            - archived
          nullable: true
          title: Account status
          x-apideck-enum-id: ledger-accounts.status
        header:
          description: Whether the account is a header or not.
          type: boolean
          example: true
          nullable: true
          title: Is header
        bank_account:
          $ref: '#/components/schemas/BankAccount'
        categories:
          description: The categories of the account.
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: '12345'
                readOnly: true
              name:
                description: The name of the category.
                type: string
                example: Finance Charges Expense
                readOnly: true
                title: Category name
          readOnly: true
          title: Categories
        parent_account:
          type: object
          properties:
            id:
              description: The ID of the parent account.
              type: string
              example: '12345'
              title: Parent account ID
            name:
              description: The name of the parent account.
              type: string
              example: Bank Accounts
              title: Name
            display_id:
              description: The human readable display ID used when displaying the parent account
              type: string
              example: 1-1100
              title: Display ID
        sub_account:
          description: Whether the account is a sub account or not.
          type: boolean
          example: false
          nullable: true
          title: Is sub account
        sub_accounts:
          description: The sub accounts of the account.
          type: array
          items:
            properties:
              id:
                description: The ID of the sub account.
                type: string
                example: '12345'
                readOnly: true
                title: Sub account ID
              account_sub_name:
                description: The name of the sub account.
                type: string
                example: Petty Cash
                readOnly: true
                title: Sub Account Name
          readOnly: true
          title: Sub accounts
        last_reconciliation_date:
          description: Reconciliation Date means the last calendar day of each Reconciliation Period.
          type: string
          format: date
          example: '2020-09-30'
          nullable: true
          title: Last Reconciliation Date
        subsidiaries:
          description: The subsidiaries the account belongs to.
          type: array
          items:
            properties:
              id:
                description: The ID of the subsidiary.
                type: string
                title: Subsidiary ID
          title: Subsidiaries
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: LedgerAccount
      x-apideck-weights:
        id: critical
        display_id: low
        nominal_code: low
        code: low
        classification: edge-case
        type: high
        sub_type: edge-case
        name: high
        fully_qualified_name: edge-case
        description: edge-case
        opening_balance: edge-case
        current_balance: edge-case
        currency: edge-case
        tax_type: edge-case
        tax_rate: edge-case
        level: edge-case
        active: edge-case
        status: medium
        header: edge-case
        bank_account: high
        categories: high
        parent_account: high
        sub_account: medium
        sub_accounts: medium
        last_reconciliation_date: edge-case
        row_version: edge-case
        updated_by: edge-case
        created_by: edge-case
        subsidiaries: edge-case
        created_at: low
        updated_at: high
    LedgerAccountsFilter:
      type: object
      properties:
        updated_since:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Updated since (timestamp)
      example:
        updated_since: '2020-09-30T07:43:32.000Z'
      additionalProperties: false
      x-apideck-schema-id: LedgerAccountsFilter
    LedgerAccountsSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Ledger Accounts
          type: string
          example: updated_at
          enum:
            - created_at
            - updated_at
          x-apideck-enum-id: ledger_accounts.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: updated_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: LedgerAccountsSort
    LinkedCustomer:
      description: The customer this entity is linked to.
      type: object
      properties:
        id:
          description: The ID of the customer this entity is linked to.
          type: string
          example: '12345'
          title: Customer ID
        display_id:
          description: The display ID of the customer.
          type: string
          example: CUST00101
          nullable: true
          readOnly: true
          title: Display ID
        display_name:
          description: The display name of the customer.
          type: string
          example: Windsurf Shop
          nullable: true
          title: Display Name
        name:
          description: 'The name of the customer. Deprecated, use display_name instead.'
          type: string
          example: Windsurf Shop
          deprecated: true
          title: Name
        company_name:
          description: The company name of the customer.
          type: string
          example: The boring company
          nullable: true
          readOnly: true
          title: Company Name
        email:
          description: The email address of the customer.
          type: string
          example: boring@boring.com
          title: Email
      nullable: true
      title: LinkedCustomer
      x-apideck-schema-id: LinkedCustomer
      x-apideck-weights:
        id: medium
        display_id: medium
        display_name: medium
        name: medium
        company_name: medium
    LinkedInvoiceItem:
      type: object
      properties:
        id:
          description: 'ID of the linked item. A reference to the [invoice item](https://developers.apideck.com/apis/accounting/reference#tag/Invoice-Items) that was used to create this line item'
          type: string
          example: '12344'
          nullable: true
          title: Item ID
        code:
          description: User defined item code
          type: string
          example: 120-C
          nullable: true
          title: Item code
        name:
          description: User defined item name
          type: string
          example: Model Y
          nullable: true
          title: Item name
      x-apideck-schema-id: LinkedInvoiceItem
      x-apideck-weights:
        id: medium
        code: medium
        name: medium
    LinkedLedgerAccount:
      type: object
      properties:
        id:
          description: The unique identifier for the account.
          type: string
          example: '123456'
          title: Account ID
        name:
          description: The name of the account.
          type: string
          example: Bank account
          nullable: true
          readOnly: true
          title: Account Name
        nominal_code:
          description: The nominal code of the account.
          type: string
          example: N091
          nullable: true
          title: Nominal Code
        code:
          description: The code assigned to the account.
          type: string
          example: '453'
          nullable: true
          title: Code
      nullable: true
      x-apideck-schema-id: LinkedLedgerAccount
      x-apideck-weights:
        id: medium
        nominal_code: medium
        code: medium
        name: medium
    LinkedParentCustomer:
      description: The parent customer this entity is linked to.
      type: object
      properties:
        id:
          description: The parent ID of the customer this entity is linked to.
          type: string
          example: '12345'
          title: Customer ID
        name:
          description: The name of the parent customer.
          type: string
          example: Windsurf Shop
          title: Name
      nullable: true
      required:
        - id
      title: LinkedParentCustomer
      x-apideck-schema-id: LinkedParentCustomer
      x-apideck-weights:
        id: critical
    LinkedSupplier:
      description: The supplier this entity is linked to.
      type: object
      properties:
        id:
          description: The ID of the supplier this entity is linked to.
          type: string
          example: '12345'
          title: Supplier ID
        display_id:
          description: The display ID of the supplier.
          type: string
          example: SUPP00101
          nullable: true
          readOnly: true
          title: Display ID
        display_name:
          description: The display name of the supplier.
          type: string
          example: Windsurf Shop
          nullable: true
          title: Display Name
        company_name:
          description: The company name of the supplier.
          type: string
          example: The boring company
          nullable: true
          readOnly: true
          title: Company Name
        address:
          $ref: '#/components/schemas/Address'
      nullable: true
      title: LinkedSupplier
      x-apideck-schema-id: LinkedSupplier
      x-apideck-weights:
        id: medium
        display_id: medium
        display_name: high
        company_name: edge-case
        address: low
    LinkedTaxRate:
      type: object
      properties:
        id:
          description: The ID of the object.
          type: string
          example: '123456'
          nullable: true
          title: The ID of the object.
        code:
          description: Tax rate code
          type: string
          example: N-T
          nullable: true
          readOnly: true
          title: Tax rate code
        name:
          description: Name of the tax rate
          type: string
          example: GST on Purchases
          nullable: true
          readOnly: true
          title: Name
        rate:
          description: Rate of the tax rate
          type: number
          example: 10
          nullable: true
          title: Rate
      x-apideck-schema-id: LinkedTaxRate
      x-apideck-weights:
        id: medium
        code: medium
        name: medium
        rate: medium
    LinkedTrackingCategory:
      type: object
      properties:
        id:
          description: The unique identifier for the tracking category.
          type: string
          example: '123456'
          title: Tracking Category ID
        name:
          description: The name of the tracking category.
          type: string
          example: New York
          nullable: true
          title: Tracking Category Name
      nullable: true
      x-apideck-schema-id: LinkedTrackingCategory
      x-apideck-weights:
        id: critical
    DeprecatedLinkedTrackingCategory:
      type: object
      properties:
        id:
          description: The unique identifier for the tracking category.
          type: string
          example: '123456'
          title: Tracking Category ID
        name:
          description: The name of the tracking category.
          type: string
          example: New York
          nullable: true
          title: Tracking Category Name
      deprecated: true
      nullable: true
      x-apideck-schema-id: DeprecatedLinkedTrackingCategory
      x-apideck-weights:
        id: critical
    Links:
      description: Links to navigate to previous or next pages through the API
      type: object
      properties:
        previous:
          description: Link to navigate to the previous page through the API
          type: string
          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D'
          nullable: true
        current:
          description: Link to navigate to the current page through the API
          type: string
          example: 'https://unify.apideck.com/crm/companies'
        next:
          description: Link to navigate to the previous page through the API
          type: string
          example: 'https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM'
          nullable: true
      x-apideck-schema-id: Links
    AccountingLocation:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        parent_id:
          $ref: '#/components/schemas/WritableId'
        company_name:
          $ref: '#/components/schemas/CompanyName'
        display_name:
          description: The display name of the location.
          type: string
          example: 11 UT - South Jordan
          nullable: true
          title: Location display name
        status:
          description: Based on the status some functionality is enabled or disabled.
          type: string
          example: active
          enum:
            - active
            - inactive
          title: Location status
          x-apideck-enum-id: location.status
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        subsidiaries:
          type: array
          items:
            $ref: '#/components/schemas/SubsidiaryReference'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: AccountingLocation
      x-apideck-weights:
        id: medium
        parent_id: low
        company_name: medium
        display_name: critical
        status: critical
        addresses: low
        subsidiaries: low
    Meta:
      description: Response metadata
      type: object
      properties:
        items_on_page:
          description: Number of items returned in the data property of the response
          type: integer
          example: 50
        cursors:
          description: Cursors to navigate to previous or next pages through the API
          type: object
          properties:
            previous:
              description: Cursor to navigate to the previous page of results through the API
              type: string
              example: em9oby1jcm06OnBhZ2U6OjE=
              nullable: true
            current:
              description: Cursor to navigate to the current page of results through the API
              type: string
              example: em9oby1jcm06OnBhZ2U6OjI=
              nullable: true
            next:
              description: Cursor to navigate to the next page of results through the API
              type: string
              example: em9oby1jcm06OnBhZ2U6OjM=
              nullable: true
      x-apideck-schema-id: Meta
    MiddleName:
      description: Middle name of the person.
      type: string
      example: D.
      nullable: true
      title: Middle name
    NotFoundResponse:
      type: object
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 404
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Not Found
        type_name:
          description: The type of error returned
          type: string
          example: EntityNotFoundError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Unknown Widget
          x-speakeasy-error-message: true
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          anyOf:
            - type: string
              example: 'Could not find widget with id: ''123'''
            - type: object
              additionalProperties: true
              example:
                not_found:
                  entity: widget
                  id: '123'
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#entitynotfounderror'
      x-apideck-schema-id: NotFound
    PassThroughBody:
      description: 'The pass_through property allows passing service-specific, custom data or structured modifications in request body when creating or updating resources.'
      type: array
      items:
        type: object
        properties:
          service_id:
            description: Identifier for the service to which this pass_through should be applied.
            type: string
          operation_id:
            description: Optional identifier for a workflow operation to which this pass_through should be applied. This is useful for Unify calls that are making more than one downstream request.
            type: string
          extend_object:
            description: Simple object allowing any properties for direct extension.
            type: object
            additionalProperties: true
          extend_paths:
            description: Array of objects for structured data modifications via paths.
            type: array
            items:
              type: object
              properties:
                path:
                  description: JSONPath string specifying where to apply the value.
                  type: string
                  example: $.nested.property
                value:
                  description: 'The value to set at the specified path, can be any type.'
                  example:
                    TaxClassificationRef:
                      value: EUC-99990201-V1-00020000
              required:
                - path
                - value
              additionalProperties: false
        required:
          - service_id
        additionalProperties: false
        writeOnly: true
    PassThroughQuery:
      type: object
      properties:
        example_downstream_property:
          description: 'All passthrough query parameters are passed along to the connector as is (?pass_through[search]=leads becomes ?search=leads)'
          type: string
      example:
        search: San Francisco
      additionalProperties: true
    Payment:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        downstream_id:
          $ref: '#/components/schemas/DownstreamId'
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          $ref: '#/components/schemas/CurrencyRate'
        total_amount:
          $ref: '#/components/schemas/TotalAmount'
        reference:
          $ref: '#/components/schemas/TransactionReference'
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_reference:
          $ref: '#/components/schemas/PaymentMethodReference'
        payment_method_id:
          $ref: '#/components/schemas/WritableId'
        accounts_receivable_account_type:
          description: Type of accounts receivable account.
          type: string
          example: Account
          deprecated: true
          nullable: true
          title: Type of accounts receivable account
        accounts_receivable_account_id:
          description: Unique identifier for the account to allocate payment to.
          type: string
          example: '123456'
          deprecated: true
          nullable: true
          title: Accounts receivable account id
        account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        transaction_date:
          $ref: '#/components/schemas/TransactionDate'
        customer:
          $ref: '#/components/schemas/LinkedCustomer'
        supplier:
          $ref: '#/components/schemas/DeprecatedLinkedSupplier'
        company_id:
          $ref: '#/components/schemas/AccountingCompanyId'
        reconciled:
          $ref: '#/components/schemas/IsReconciled'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        type:
          $ref: '#/components/schemas/PaymentType'
        allocations:
          type: array
          items:
            $ref: '#/components/schemas/Allocation'
        note:
          $ref: '#/components/schemas/TransactionNote'
        number:
          $ref: '#/components/schemas/TransactionNumber'
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        display_id:
          $ref: '#/components/schemas/DisplayId'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - id
        - total_amount
        - transaction_date
      x-apideck-schema-id: Payment
      x-apideck-strict-required:
        - total_amount
        - transaction_date
        - allocations
      x-apideck-weights:
        id: critical
        downstream_id: medium
        currency: critical
        currency_rate: medium
        total_amount: critical
        reference: medium
        payment_method: medium
        payment_method_reference: medium
        payment_method_id: edge-case
        accounts_receivable_account_type: edge-case
        accounts_receivable_account_id: edge-case
        account: critical
        transaction_date: critical
        customer: high
        supplier: high
        company_id: medium
        reconciled: low
        status: high
        type: high
        allocations: critical
        note: low
        number: medium
        tracking_categories: low
        custom_fields: medium
        row_version: edge-case
        display_id: low
        updated_by: edge-case
        created_by: edge-case
        created_at: medium
        updated_at: medium
    PaymentMethod:
      description: 'Payment method used for the transaction, such as cash, credit card, bank transfer, or check'
      type: string
      example: cash
      nullable: true
      title: Payment method
    PaymentRequiredResponse:
      type: object
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 402
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Payment Required
        type_name:
          description: The type of error returned
          type: string
          example: RequestLimitError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Request Limit Reached
          x-speakeasy-error-message: true
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          type: string
          example: You have reached your limit of 2000
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#requestlimiterror'
      x-apideck-schema-id: PaymentRequired
    PaymentsFilter:
      type: object
      properties:
        updated_since:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Updated since (timestamp)
      example:
        updated_since: '2020-09-30T07:43:32.000Z'
      additionalProperties: false
      x-apideck-schema-id: PaymentsFilter
      x-graphql-type-name: PaymentsFilter
    PaymentsSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Payments
          type: string
          example: updated_at
          enum:
            - updated_at
            - created_at
          x-apideck-enum-id: payments.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: updated_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: PaymentsSort
    PhoneNumber:
      type: object
      properties:
        id:
          description: Unique identifier of the phone number
          type: string
          example: '12345'
          nullable: true
        country_code:
          description: 'The country code of the phone number, e.g. +1'
          type: string
          example: '1'
          nullable: true
          title: Country code
        area_code:
          description: 'The area code of the phone number, e.g. 323'
          type: string
          example: '323'
          nullable: true
          title: Area code
        number:
          description: The phone number
          type: string
          example: 111-111-1111
          minLength: 1
          title: Phone number
        extension:
          description: The extension of the phone number
          type: string
          example: '105'
          nullable: true
          title: Phone extension
        type:
          description: The type of phone number
          type: string
          example: primary
          enum:
            - primary
            - secondary
            - home
            - work
            - office
            - mobile
            - assistant
            - fax
            - direct-dial-in
            - personal
            - other
          nullable: true
          x-apideck-enum-id: phone_numbers.type
      additionalProperties: false
      required:
        - number
      x-apideck-schema-id: PhoneNumber
      x-apideck-weights:
        number: critical
        type: critical
        id: edge-case
        country_code: edge-case
        area_code: edge-case
        extension: edge-case
    ProfitAndLoss:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        report_name:
          description: The name of the report
          type: string
          example: ProfitAndLoss
          title: Report Name
        start_date:
          description: The start date of the report
          type: string
          example: '2017-01-01'
          pattern: '^\d{4}-\d{2}-\d{2}$'
          title: Start Date
        end_date:
          description: The start date of the report
          type: string
          example: '2017-01-01'
          pattern: '^\d{4}-\d{2}-\d{2}$'
          title: Start Date
        currency:
          type: string
          example: USD
          title: Currency
        customer_id:
          description: Customer id
          type: string
          example: '123'
          title: Customer Id
        income:
          type: object
          example:
            total: 200000
            records:
              - id: '123'
                name: Income 1
                amount: 10000
              - id: '456'
                name: Income 2
                amount: 20000
          properties:
            total:
              description: Total income
              type: number
              example: 100000
              nullable: true
              title: Total income
            records:
              $ref: '#/components/schemas/ProfitAndLossRecords'
          required:
            - total
            - records
          x-apideck-weights:
            total: critical
            record: critical
        expenses:
          type: object
          example:
            total: 200000
            records:
              - id: '123'
                name: Expense 1
                amount: 10000
              - id: '456'
                name: Expense 2
                amount: 20000
          properties:
            total:
              description: Total expense
              type: number
              example: 100000
              nullable: true
              title: Total expense
            records:
              $ref: '#/components/schemas/ProfitAndLossRecords'
          required:
            - total
            - records
          x-apideck-weights:
            total: critical
            record: critical
        net_income:
          type: object
          example:
            total: 200000
          nullable: true
          properties:
            total:
              description: Total net income
              type: number
              example: 100000
              nullable: true
              title: Total net income
            records:
              $ref: '#/components/schemas/ProfitAndLossRecords'
          required:
            - total
            - records
          x-apideck-weights:
            total: critical
            record: critical
        net_operating_income:
          type: object
          example:
            total: 200000
          nullable: true
          properties:
            total:
              description: Total net operating income
              type: number
              example: 100000
              nullable: true
              title: Total net operating income
            records:
              $ref: '#/components/schemas/ProfitAndLossRecords'
          required:
            - total
            - records
          x-apideck-weights:
            total: critical
            record: critical
        gross_profit:
          type: object
          example:
            total: 200000
          nullable: true
          properties:
            total:
              description: Total gross profit
              type: number
              example: 100000
              nullable: true
              title: Total gross profit
            records:
              $ref: '#/components/schemas/ProfitAndLossRecords'
          required:
            - total
            - records
          x-apideck-weights:
            total: critical
            record: critical
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
      additionalProperties: false
      required:
        - report_name
        - currency
        - income
        - expenses
      x-apideck-circular-ref: true
      x-apideck-schema-id: ProfitAndLoss
      x-apideck-weights:
        id: medium
        report_name: medium
        start_date: low
        end_date: low
        currency: critical
        customer: low
        income: critical
        expenses: critical
        net_income: medium
        net_operating_income: medium
        gross_profit: medium
    ProfitAndLossFilter:
      type: object
      properties:
        customer_id:
          description: Filter by customer id
          type: string
          example: 123abc
          title: Customer Id
        start_date:
          description: 'Filter by start date. If start date is given, end date is required.'
          type: string
          example: '2021-01-01'
          title: Start date
        end_date:
          description: 'Filter by end date. If end date is given, start date is required.'
          type: string
          example: '2021-12-31'
          title: End date
      example:
        customer_id: 123abc
        start_date: '2021-01-01'
        end_date: '2021-12-31'
      additionalProperties: false
      x-apideck-schema-id: ProfitAndLossFilter
    ProfitAndLossRecord:
      type: object
      properties:
        id:
          type: string
          example: 123abc
          nullable: true
        title:
          type: string
          example: Income
          nullable: true
        type:
          type: string
          example: Record
        value:
          type: number
          example: 23992.34
          nullable: true
      example:
        type: Record
      required:
        - type
      x-apideck-schema-id: ProfitAndLossRecord
      x-apideck-weights:
        type: critical
    ProfitAndLossRecords:
      type: array
      items:
        anyOf:
          - $ref: '#/components/schemas/ProfitAndLossSection'
          - $ref: '#/components/schemas/ProfitAndLossRecord'
      nullable: true
      title: ProfitAndLossRecords
      x-apideck-schema-id: ProfitAndLossRecords
      x-speakeasy-type-override: any
    ProfitAndLossSection:
      type: object
      properties:
        id:
          type: string
          example: 123abc
          nullable: true
        title:
          type: string
          example: Income
          nullable: true
        type:
          type: string
          example: Section
        total:
          type: number
          example: 23992.34
          nullable: true
        records:
          $ref: '#/components/schemas/ProfitAndLossRecords'
      example:
        total: 200000
      required:
        - type
      x-apideck-schema-id: ProfitAndLossSection
      x-apideck-weights:
        id: medium
        title: medium
        type: critical
        total: medium
        records: medium
    PurchaseOrder:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        downstream_id:
          $ref: '#/components/schemas/DownstreamId'
        po_number:
          description: A PO Number uniquely identifies a purchase order and is generally defined by the buyer.
          type: string
          example: '90000117'
          nullable: true
          title: Purchase Order number
        reference:
          description: Optional purchase order reference.
          type: string
          example: '123456'
          nullable: true
          title: Purchase order reference
        supplier:
          $ref: '#/components/schemas/LinkedSupplier'
        company_id:
          $ref: '#/components/schemas/AccountingCompanyId'
        status:
          type: string
          example: open
          enum:
            - draft
            - open
            - closed
            - deleted
            - billed
            - other
          nullable: true
          title: Purchase order status
          x-apideck-enum-id: purchase-orders.status
        issued_date:
          description: Date purchase order was issued - YYYY-MM-DD.
          type: string
          format: date
          example: '2020-09-30'
          nullable: true
          title: Posted date
        delivery_date:
          description: The date on which the purchase order is to be delivered - YYYY-MM-DD.
          type: string
          format: date
          example: '2020-09-30'
          nullable: true
          title: Delivery date
        expected_arrival_date:
          description: The date on which the order is expected to arrive - YYYY-MM-DD.
          type: string
          format: date
          example: '2020-09-30'
          nullable: true
          title: Expected arrival date
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          $ref: '#/components/schemas/CurrencyRate'
        sub_total:
          description: 'Sub-total amount, normally before tax.'
          type: number
          example: 27500
          nullable: true
          title: Sub-total amount
        total_tax:
          description: Total tax amount applied to this invoice.
          type: number
          example: 2500
          nullable: true
          title: Total tax amount
        total:
          description: 'Total amount of invoice, including tax.'
          type: number
          example: 27500
          nullable: true
          title: Total amount
        tax_inclusive:
          $ref: '#/components/schemas/TaxInclusive'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
        shipping_address:
          $ref: '#/components/schemas/Address'
        ledger_account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        template_id:
          description: Optional purchase order template
          type: string
          example: '123456'
          nullable: true
          title: Template
        discount_percentage:
          $ref: '#/components/schemas/DiscountPercentage'
        bank_account:
          $ref: '#/components/schemas/BankAccount'
        accounting_by_row:
          $ref: '#/components/schemas/AccountingByRow'
        due_date:
          $ref: '#/components/schemas/DueDate'
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        tax_code:
          $ref: '#/components/schemas/TaxCode'
        channel:
          $ref: '#/components/schemas/Channel'
        memo:
          description: Message for the supplier. This text appears on the Purchase Order.
          type: string
          example: Thank you for the partnership and have a great day!
          nullable: true
          title: Memo
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: PurchaseOrder
      x-apideck-weights:
        id: critical
        downstream_id: low
        po_number: low
        reference: low
        supplier: high
        company_id: middle
        status: critical
        issued_date: edge-case
        delivery_date: medium
        expected_arrival_date: medium
        currency: medium
        currency_rate: low
        sub_total: high
        total_tax: high
        total: critical
        tax_inclusive: low
        line_items: critical
        shipping_address: medium
        ledger_account: edge-case
        template_id: low
        discount_percentage: low
        bank_account: low
        accounting_by_row: edge-case
        due_date: low
        payment_method: low
        tax_code: medium
        channel: low
        memo: low
        tracking_categories: low
        row_version: edge-case
        updated_by: low
        created_by: low
        created_at: high
        updated_at: high
    PurchaseOrdersFilter:
      type: object
      properties:
        updated_since:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Updated since (timestamp)
        supplier_id:
          type: string
          example: '1234'
          title: Supplier ID
      example:
        updated_since: '2020-09-30T07:43:32.000Z'
        supplier_id: '1234'
      additionalProperties: false
      x-apideck-schema-id: PurchaseOrdersFilter
    PurchaseOrdersSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Purchase Orders
          type: string
          example: updated_at
          enum:
            - updated_at
            - created_at
          x-apideck-enum-id: purchase_orders.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: updated_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: PurchaseOrdersSort
    Quantity:
      type: number
      example: 1
      nullable: true
      title: Quantity
    RowVersion:
      description: A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
      type: string
      example: 1-12345
      nullable: true
      title: Row version
    SalesTaxNumber:
      type: string
      example: 111.222.333
      nullable: true
      title: Sales Tax Number
    SocialLink:
      type: object
      properties:
        id:
          description: Unique identifier of the social link
          type: string
          example: '12345'
          nullable: true
        url:
          description: 'URL of the social link, e.g. https://www.twitter.com/apideck'
          type: string
          example: 'https://www.twitter.com/apideck'
          minLength: 1
        type:
          description: 'Type of the social link, e.g. twitter'
          type: string
          example: twitter
          nullable: true
      additionalProperties: false
      required:
        - url
      x-apideck-schema-id: SocialLink
      x-apideck-weights:
        id: edge-case
        url: critical
        type: critical
    SortDirection:
      description: The direction in which to sort the results
      type: string
      default: asc
      enum:
        - asc
        - desc
      x-apideck-enum-id: sort_direction
      x-apideck-schema-id: SortDirection
    Subsidiary:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        parent_id:
          $ref: '#/components/schemas/WritableId'
        name:
          $ref: '#/components/schemas/CompanyName'
        status:
          description: Based on the status some functionality is enabled or disabled.
          type: string
          example: active
          enum:
            - active
            - inactive
          title: Subsidiary status
          x-apideck-enum-id: subsidiary.status
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: Subsidiary
      x-apideck-weights:
        id: medium
        name: critical
        status: critical
    SubsidiaryReference:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          $ref: '#/components/schemas/CompanyName'
      additionalProperties: false
      x-apideck-schema-id: SubsidiaryReference
      x-apideck-weights:
        id: critical
        name: low
    Suffix:
      type: string
      example: Jr.
      nullable: true
      title: Suffix
    Supplier:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        downstream_id:
          $ref: '#/components/schemas/DownstreamId'
        display_id:
          description: Display ID
          type: string
          example: EMP00101
          nullable: true
          title: Display ID
        display_name:
          description: Display name
          type: string
          example: Windsurf Shop
          nullable: true
          title: Display Name
        company_name:
          $ref: '#/components/schemas/CompanyName'
        company_id:
          $ref: '#/components/schemas/AccountingCompanyId'
        title:
          $ref: '#/components/schemas/Title'
        first_name:
          $ref: '#/components/schemas/FirstName'
        middle_name:
          $ref: '#/components/schemas/MiddleName'
        last_name:
          $ref: '#/components/schemas/LastName'
        suffix:
          $ref: '#/components/schemas/Suffix'
        individual:
          description: Is this an individual or business supplier
          type: boolean
          example: true
          nullable: true
          title: Is individual
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        bank_accounts:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
        notes:
          description: Some notes about this supplier
          type: string
          example: Some notes about this supplier
          nullable: true
          title: Notes
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        tax_number:
          $ref: '#/components/schemas/TaxNumber'
        currency:
          $ref: '#/components/schemas/Currency'
        account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        status:
          description: Supplier status
          type: string
          example: active
          enum:
            - active
            - inactive
            - archived
            - gdpr-erasure-request
            - unknown
          nullable: true
          title: Status
          x-apideck-enum-id: suppliers.status
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        channel:
          $ref: '#/components/schemas/Channel'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - id
      x-apideck-schema-id: Supplier
      x-apideck-strict-any-of:
        - required:
            - first_name
            - last_name
        - required:
            - company_name
      x-apideck-strict-required:
        - emails
        - addresses
        - phone_numbers
        - status
        - updated_at
      x-apideck-weights:
        id: critical
        downstream_id: edge-case
        display_id: edge-case
        display_name: edge-case
        company_name: high
        company_id: middle
        title: high
        first_name: high
        middle_name: low
        last_name: high
        suffix: low
        individual: medium
        addresses: high
        phone_numbers: high
        emails: high
        websites: medium
        bank_accounts: high
        notes: low
        tax_rate: medium
        tax_number: medium
        currency: medium
        account: medium
        status: high
        payment_method: edge-case
        channel: edge-case
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
        row_version: edge-case
    SuppliersFilter:
      type: object
      properties:
        company_name:
          description: Company Name of supplier to search for
          type: string
          example: SpaceX
          title: Company Name
        display_name:
          description: Display Name of supplier to search for
          type: string
          example: Techno King
          title: Display Name
        first_name:
          description: First name of supplier to search for
          type: string
          example: Elon
          title: First Name
        last_name:
          description: Last name of supplier to search for
          type: string
          example: Musk
          title: Last Name
        email:
          description: Email of supplier to search for
          type: string
          example: elon@spacex.com
          title: Email
        updated_since:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Updated since (timestamp)
      example:
        company_name: SpaceX
        display_name: Elon Musk
        first_name: Elon
        last_name: Musk
        email: elon@musk.com
        updated_since: '2020-09-30T07:43:32.000Z'
      additionalProperties: false
      x-apideck-schema-id: SuppliersFilter
    SuppliersSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Suppliers
          type: string
          example: updated_at
          enum:
            - created_at
            - updated_at
          x-apideck-enum-id: suppliers.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: updated_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: SuppliersSort
    Tags:
      type: array
      items:
        type: string
      example:
        - New
      nullable: true
      x-apideck-schema-id: Tags
    CustomMappings:
      description: 'When custom mappings are configured on the resource, the result is included here.'
      type: object
      nullable: true
      readOnly: true
      x-apideck-schema-id: CustomMappings
    TaxCode:
      description: Applicable tax id/code override if tax is not supplied on a line item basis.
      type: string
      example: '1234'
      nullable: true
      title: Tax Code
    TaxInclusive:
      description: Amounts are including tax
      type: boolean
      example: true
      nullable: true
      title: Tax inclusive
    TaxNumber:
      type: string
      example: US123945459
      nullable: true
      title: Tax number
    TaxRate:
      type: object
      properties:
        id:
          description: ID assigned to identify this tax rate.
          type: string
          example: '1234'
          nullable: true
        name:
          description: Name assigned to identify this tax rate.
          type: string
          example: GST on Purchases
          minLength: 1
          title: Name
        code:
          description: Tax code assigned to identify this tax rate.
          type: string
          example: ABN
          nullable: true
          title: Tax code
        description:
          description: Description of tax rate
          type: string
          example: Reduced rate GST Purchases
          nullable: true
          title: Description
        effective_tax_rate:
          description: Effective tax rate
          type: number
          example: 10
          nullable: true
          title: Effective tax rate
        total_tax_rate:
          description: Not compounded sum of the components of a tax rate
          type: number
          example: 10
          nullable: true
          title: Total tax rate
        tax_payable_account_id:
          description: Unique identifier for the account for tax collected.
          type: string
          example: '123456'
          nullable: true
          title: Tax payable account id
        tax_remitted_account_id:
          description: Unique identifier for the account for tax remitted.
          type: string
          example: '123456'
          nullable: true
          title: Tax remitted account id
        components:
          items:
            x-apideck-weights:
              id: medium
              name: medium
              rate: medium
              compound: medium
            properties:
              id:
                type: string
                example: '10'
                nullable: true
                title: TaxRate Id
              name:
                type: string
                example: GST
                minLength: 1
              rate:
                type: number
                example: 10
                nullable: true
                title: TaxRate
              compound:
                type: boolean
                example: true
                nullable: true
                title: Compound
          nullable: true
          title: Tax components
          type: array
        type:
          description: Tax type used to indicate the source of tax collected or paid
          type: string
          example: NONE
          nullable: true
          title: Tax Type
        report_tax_type:
          description: Report Tax type to aggregate tax collected or paid for reporting purposes
          type: string
          example: NONE
          nullable: true
          title: Report Tax Type
        original_tax_rate_id:
          description: ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.
          type: string
          example: '12345'
          nullable: true
          title: Original tax rate ID
        status:
          description: Tax rate status
          type: string
          example: active
          enum:
            - active
            - inactive
            - archived
          nullable: true
          title: Tax rate status
          x-apideck-enum-id: tax-rates.status
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: TaxRate
      x-apideck-strict-any-of:
        - required:
            - id
        - required:
            - name
        - required:
            - code
      x-apideck-strict-required:
        - effective_tax_rate
      x-apideck-weights:
        id: critical
        name: high
        code: edge-case
        description: low
        effective_tax_rate: critical
        total_tax_rate: high
        tax_payable_account_id: high
        tax_remitted_account_id: medium
        components: medium
        type: high
        report_tax_type: edge-case
        original_tax_rate_id: edge-case
        status: high
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: low
        row_version: edge-case
    TaxRatesFilter:
      type: object
      properties:
        assets:
          description: Boolean to describe if tax rate can be used for asset accounts
          type: boolean
          example: true
          title: Assets
        equity:
          description: Boolean to describe if tax rate can be used for equity accounts
          type: boolean
          example: true
          title: Equity
        expenses:
          description: Boolean to describe if tax rate can be used for expense accounts
          type: boolean
          example: true
          title: Expenses
        liabilities:
          description: Boolean to describe if tax rate can be used for liability accounts
          type: boolean
          example: true
          title: Liabilities
        revenue:
          description: Boolean to describe if tax rate can be used for revenue accounts
          type: boolean
          example: true
          title: Revenue
      example:
        assets: true
        equity: true
        expenses: true
        liabilities: true
        revenue: true
      additionalProperties: false
      x-apideck-schema-id: TaxRatesFilter
    Title:
      description: The job title of the person.
      type: string
      example: CEO
      nullable: true
      title: Job title
    UnauthorizedResponse:
      type: object
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 401
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Unauthorized
        type_name:
          description: The type of error returned
          type: string
          example: UnauthorizedError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Unauthorized Request
          x-speakeasy-error-message: true
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          anyOf:
            - type: string
              example: Missing authentication
            - type: object
              additionalProperties: true
              example:
                statusCode: 401
                error: Unauthorized
                message: Missing authentication
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#unauthorizederror'
      x-apideck-schema-id: Unauthorized
    UnexpectedErrorResponse:
      type: object
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 400
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Bad Request
        type_name:
          description: The type of error returned
          type: string
          example: RequestHeadersValidationError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Invalid Params
          x-speakeasy-error-message: true
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          anyOf:
            - type: string
              example: 'Missing Header: x-apideck-consumer-id'
            - type: object
              additionalProperties: true
              example:
                missing:
                  - x-apideck-consumer-id: required
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#unauthorizederror'
      x-apideck-schema-id: Error
    UnifiedId:
      type: object
      properties:
        id:
          description: The unique identifier of the resource
          type: string
          example: '12345'
          readOnly: true
          title: Id
      required:
        - id
      title: UnifiedId
      x-apideck-schema-id: Id
    UnitOfMeasure:
      description: 'Description of the unit type the item is sold as, ie: kg, hour.'
      type: string
      example: pc.
      nullable: true
      title: Unit of measure
    UnitPrice:
      type: number
      example: 27500.5
      nullable: true
      title: Unit price
    UnprocessableResponse:
      type: object
      properties:
        status_code:
          description: HTTP status code
          type: number
          example: 422
        error:
          description: Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)
          type: string
          example: Unprocessable Entity
        type_name:
          description: The type of error returned
          type: string
          example: InvalidStateError
        message:
          description: A human-readable message providing more details about the error.
          type: string
          example: Invalid State
          x-speakeasy-error-message: true
        detail:
          description: Contains parameter or domain specific information related to the error and why it occurred.
          anyOf:
            - type: string
              example: 'Unprocessable request, please verify your request headers and body.'
            - type: object
              additionalProperties: true
              example:
                error: Unprocessable
                message: 'Unprocessable request, please verify your request headers and body.'
        ref:
          description: Link to documentation of error type
          type: string
          example: 'https://developers.apideck.com/errors#invalidstateerror'
      x-apideck-schema-id: Unprocessable
    UpdateBillResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: bills
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateBillResponse
    UpdateCreditNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: credit-notes
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateCreditNoteResponse
    UpdateCustomerResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: customers
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateCustomerResponse
    UpdateInvoiceItemsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: invoice-items
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateInvoiceItemsResponse
    UpdateInvoiceResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: invoices
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/InvoiceResponse'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateInvoiceResponse
    UpdateJournalEntryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: journal-entries
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateLedgerAccountResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: ledger-accounts
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateLedgerAccountResponse
    UpdatePaymentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdatePaymentResponse
    UpdatePurchaseOrderResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: PurchaseOrders
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateSubsidiaryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: subsidiaries
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateSupplierResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: suppliers
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateSupplierResponse
    UpdateTaxRateResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: tax-rates
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateTaxRateResponse
    UpdatedAt:
      description: The date and time when the object was last updated.
      type: string
      format: date-time
      example: '2020-09-30T07:43:32.000Z'
      nullable: true
      readOnly: true
      title: Updated at (timestamp)
    UpdatedBy:
      description: The user who last updated the object.
      type: string
      example: '12345'
      nullable: true
      readOnly: true
      title: Updated by
    Website:
      type: object
      properties:
        id:
          description: Unique identifier for the website
          type: string
          example: '12345'
          nullable: true
        url:
          description: The website URL
          type: string
          example: 'http://example.com'
          minLength: 1
        type:
          description: The type of website
          type: string
          example: primary
          enum:
            - primary
            - secondary
            - work
            - personal
            - other
          nullable: true
          x-apideck-enum-id: websites.type
      additionalProperties: false
      required:
        - url
      x-apideck-schema-id: Website
      x-apideck-weights:
        url: critical
        type: critical
        id: edge-case
    WritableId:
      description: A unique identifier for an object.
      type: string
      example: '12345'
      nullable: true
      readOnly: false
      title: ID
    Attachment:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        display_id:
          description: The display id of the file
          type: string
          example: sample ID
          nullable: true
        name:
          description: The name of the file
          type: string
          example: sample.jpg
          nullable: true
        mime_type:
          description: The MIME type of the file.
          type: string
          example: image/jpeg
          nullable: true
        size:
          description: The size of the file in bytes
          type: integer
          example: 1810673
          nullable: true
          x-apideck-schema-id: AttachmentSize
        reference:
          $ref: '#/components/schemas/AttachmentReference'
        description:
          description: Optional description of the file
          type: string
          example: A sample image
          nullable: true
        parent_folder_id:
          description: The folder id where this attachment belong to
          type: string
          example: '123'
          nullable: true
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: Attachment
      x-apideck-weights:
        id: critical
        display_id: edge-case
        name: critical
        mime_type: medium
        size: medium
        reference: critical
        description: medium
        folder_id: edge-case
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
    AttachmentReference:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/AttachmentReferenceType'
        id:
          $ref: '#/components/schemas/Id'
      additionalProperties: false
      x-apideck-schema-id: AttachmentReference
    AttachmentReferenceType:
      type: string
      enum:
        - invoice
        - bill
        - expense
      x-apideck-enum-id: attachment.reference_type
    GetAttachmentsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: PurchaseOrders
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteAttachmentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: files
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteAttachmentResponse
    GetAttachmentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Attachment'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetAttachmentResponse
    Allocation:
      type: object
      properties:
        id:
          description: Unique identifier of entity this payment should be attributed to.
          type: string
          example: '123456'
          title: Linked entity ID
        type:
          description: Type of entity this payment should be attributed to.
          type: string
          enum:
            - invoice
            - order
            - expense
            - credit_memo
            - over_payment
            - pre_payment
            - journal_entry
            - other
            - bill
          title: Allocation type
          x-apideck-enum-id: allocations.type
        code:
          type: string
          example: N091
          readOnly: true
        amount:
          description: 'Amount of payment that should be attributed to this allocation. If null, the total_amount will be used.'
          type: number
          example: 49.99
          nullable: true
          title: Amount
        allocation_id:
          description: Unique identifier of the allocation
          type: string
          example: '123456'
          title: Allocation ID
      x-apideck-schema-id: Allocation
      x-apideck-strict-any-of:
        - required:
            - id
        - required:
            - code
      x-apideck-weights:
        id: medium
        type: medium
        code: medium
        amount: medium
        allocation_id: medium
    TrackingCategory:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        parent_id:
          $ref: '#/components/schemas/WritableId'
        name:
          description: The name of the tracking category.
          type: string
          example: Department
          nullable: false
        code:
          description: The code of the tracking category.
          type: string
          example: '100'
          nullable: true
        status:
          description: Based on the status some functionality is enabled or disabled.
          type: string
          example: active
          enum:
            - active
            - inactive
          title: Tracking Category status
          x-apideck-enum-id: tracking_categories.status
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: TrackingCategory
      x-apideck-weights:
        id: medium
        parent_id: low
        name: critical
        status: critical
        code: low
    GetTrackingCategoryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: tracking-categories
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/TrackingCategory'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetTrackingCategoryResponse
    GetTrackingCategoriesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: tracking-categories
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/TrackingCategory'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateTrackingCategoryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: tracking-categories
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateTrackingCategoryResponse
    UpdateTrackingCategoryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: tracking-categories
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateTrackingCategoryResponse
    DeleteTrackingCategoryResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: tracking-categories
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteTrackingCategoryResponse
    LinkedTrackingCategories:
      description: A list of linked tracking categories.
      type: array
      items:
        $ref: '#/components/schemas/LinkedTrackingCategory'
      nullable: true
      title: Linked tracking categories
      x-apideck-schema-id: LinkedTrackingCategories
    LineNumber:
      description: Line number of the resource
      type: integer
      example: 1
      nullable: true
      title: Line number
    AccountingPeriod:
      description: Accounting period
      type: string
      example: 01-24
      nullable: true
      title: Accounting period
    TotalAmount:
      description: The total amount of the transaction
      type: number
      example: 49.99
      nullable: true
      title: Total Amount
    TransactionReference:
      description: 'Optional transaction reference message ie: Debit remittance detail.'
      type: string
      example: '123456'
      nullable: true
      title: Transaction Reference
    PaymentMethodReference:
      description: Optional reference message returned by payment method on processing
      type: string
      example: '123456'
      nullable: true
      title: Payment method reference
    TransactionDate:
      description: 'The date of the transaction - YYYY:MM::DDThh:mm:ss.sTZD'
      type: string
      format: date-time
      example: '2021-05-01T12:00:00.000Z'
      nullable: true
      title: Transaction Date
    DeprecatedLinkedSupplier:
      description: The supplier this entity is linked to.
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        display_id:
          description: The display ID of the supplier.
          type: string
          example: SUPP00101
          nullable: true
          readOnly: true
          title: Display ID
        display_name:
          description: The display name of the supplier.
          type: string
          example: Windsurf Shop
          nullable: true
          title: Display Name
        company_name:
          description: The company name of the supplier.
          type: string
          example: The boring company
          nullable: true
          readOnly: true
          title: Company Name
        address:
          $ref: '#/components/schemas/Address'
      deprecated: true
      nullable: true
      title: Linked Supplier
      x-apideck-schema-id: DeprecatedLinkedSupplier
      x-apideck-weights:
        id: medium
        display_id: medium
        display_name: high
        company_name: edge-case
        address: low
    IsReconciled:
      description: Indicates if the transaction has been reconciled.
      type: boolean
      example: true
      nullable: true
      title: Is Reconciled
    PaymentStatus:
      description: Status of payment
      type: string
      example: authorised
      enum:
        - authorised
        - paid
        - voided
        - deleted
      title: Payment status
      x-apideck-enum-id: payments.status
    PaymentType:
      description: Type of payment
      type: string
      example: accounts_receivable
      enum:
        - accounts_receivable
        - accounts_payable
        - accounts_receivable_credit
        - accounts_payable_credit
        - accounts_receivable_overpayment
        - accounts_payable_overpayment
        - accounts_receivable_prepayment
        - accounts_payable_prepayment
      title: Payment Type
      x-apideck-enum-id: payments.type
    TransactionNote:
      description: Note associated with the transaction
      type: string
      example: Some notes about this transaction
      nullable: true
      title: Transaction note
    TransactionNumber:
      description: Number associated with the transaction
      type: string
      example: '123456'
      nullable: true
      title: Transaction number
    GetBillPaymentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/BillPayment'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetBillPaymentResponse
    GetBillPaymentsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/BillPayment'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetPaymentsResponse
    CreateBillPaymentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateBillPaymentResponse
    UpdateBillPaymentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateBillPaymentResponse
    DeleteBillPaymentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: xero
        resource:
          description: Unified API resource name
          type: string
          example: payments
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteBillPaymentResponse
    BillPayment:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        downstream_id:
          $ref: '#/components/schemas/DownstreamId'
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          $ref: '#/components/schemas/CurrencyRate'
        total_amount:
          $ref: '#/components/schemas/TotalAmount'
        reference:
          $ref: '#/components/schemas/TransactionReference'
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_reference:
          $ref: '#/components/schemas/PaymentMethodReference'
        payment_method_id:
          $ref: '#/components/schemas/WritableId'
        account:
          $ref: '#/components/schemas/LinkedLedgerAccount'
        transaction_date:
          $ref: '#/components/schemas/TransactionDate'
        supplier:
          $ref: '#/components/schemas/LinkedSupplier'
        company_id:
          $ref: '#/components/schemas/AccountingCompanyId'
        reconciled:
          $ref: '#/components/schemas/IsReconciled'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        type:
          description: Type of payment
          type: string
          example: accounts_payable
          enum:
            - accounts_payable_credit
            - accounts_payable_overpayment
            - accounts_payable_prepayment
            - accounts_payable
          title: Bill payment Type
          x-apideck-enum-id: bill-payments.type
        allocations:
          type: array
          items:
            type: object
            x-apideck-schema-id: Allocation
            x-apideck-weights:
              id: medium
              type: medium
              code: medium
              amount: medium
              allocation_id: medium
            x-apideck-strict-any-of:
              - required:
                  - id
              - required:
                  - code
            properties:
              id:
                $ref: '#/components/schemas/WritableId'
              type:
                description: Type of entity this payment should be attributed to.
                type: string
                example: bill
                enum:
                  - bill
                  - expense
                  - credit_memo
                  - over_payment
                  - pre_payment
                  - journal_entry
                  - other
                title: Allocation type
                x-apideck-enum-id: bill-payments.allocations.type
              code:
                type: string
                example: N091
                readOnly: true
              amount:
                description: 'Amount of payment that should be attributed to this allocation. If null, the total_amount will be used.'
                type: number
                example: 49.99
                nullable: true
                title: Amount
              allocation_id:
                description: Unique identifier of the allocation
                type: string
                example: '123456'
                title: Allocation ID
        note:
          $ref: '#/components/schemas/TransactionNote'
        number:
          $ref: '#/components/schemas/TransactionNumber'
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        display_id:
          $ref: '#/components/schemas/DisplayId'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - id
        - total_amount
        - transaction_date
      x-apideck-schema-id: BillPayment
      x-apideck-strict-required:
        - total_amount
        - transaction_date
        - allocations
      x-apideck-weights:
        id: critical
        downstream_id: medium
        currency: critical
        currency_rate: medium
        total_amount: critical
        reference: medium
        payment_method: medium
        payment_method_reference: medium
        payment_method_id: edge-case
        account: critical
        transaction_date: critical
        customer: high
        supplier: high
        company_id: medium
        reconciled: low
        status: high
        type: high
        allocations: critical
        note: low
        number: medium
        tracking_categories: low
        custom_fields: medium
        row_version: edge-case
        display_id: low
        updated_by: edge-case
        created_by: edge-case
        created_at: medium
        updated_at: medium
    DisplayId:
      description: Id to be displayed.
      type: string
      example: '123456'
      nullable: true
      title: Display id
    CreateExpenseResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: Expenses
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteExpenseResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: Expenses
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetExpenseResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: Expenses
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Expense'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetExpenseResponse
    GetExpensesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: Expenses
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetExpensesResponse
    Expense:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        number:
          description: Number.
          type: string
          example: OIT00546
          nullable: true
          title: Number
        transaction_date:
          $ref: '#/components/schemas/TransactionDate'
        account_id:
          description: 'The unique identifier for the ledger account that this expense should be credited to. '
          type: string
          example: '123456'
          title: Account ID
        customer_id:
          description: The ID of the customer this entity is linked to. Used for expenses that should be marked as billable to customers.
          type: string
          example: '12345'
          title: Customer ID
        supplier_id:
          description: The ID of the supplier this entity is linked to.
          type: string
          example: '12345'
          title: Supplier ID
        company_id:
          $ref: '#/components/schemas/AccountingCompanyId'
        department_id:
          description: The ID of the department this expense is linked to.
          type: string
          example: '12345'
          title: Department ID
        currency:
          $ref: '#/components/schemas/Currency'
        currency_rate:
          $ref: '#/components/schemas/CurrencyRate'
        type:
          description: The type of expense.
          type: string
          example: expense
          enum:
            - expense
            - refund
          nullable: true
          title: Expense type
          x-apideck-enum-id: expenses.type
        memo:
          description: The memo of the expense.
          type: string
          example: For travel expenses incurred on 2024-05-15
          nullable: true
          title: Memo
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        total_amount:
          description: The total amount of the expense line item.
          type: number
          example: 275
          nullable: true
          title: Total amount
        line_items:
          description: Expense line items linked to this expense.
          type: array
          items:
            $ref: '#/components/schemas/ExpenseLineItem'
          minItems: 1
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - account_id
        - transaction_date
        - line_items
      x-apideck-schema-id: Expense
      x-apideck-strict-required:
        - account_id
        - transaction_date
        - line_items
      x-apideck-weights:
        id: critical
        transaction_date: critical
        account_id: critical
        supplier_id: high
        line_items: high
        currency: high
        type: high
        number: medium
        memo: medium
        customer_id: medium
        total_amount: medium
        currency_rate: edge-case
        company_id: edge-case
        updated_at: medium
        created_at: medium
        department_id: medium
        tax_rate: medium
        custom_fields: medium
        custom_mappings: low
        row_version: low
        pass_through: low
    ExpenseLineItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        tracking_categories:
          $ref: '#/components/schemas/LinkedTrackingCategories'
        account_id:
          description: The unique identifier for the ledger account.
          type: string
          example: '123456'
          title: Account ID
        customer_id:
          description: The ID of the customer this expense item is linked to.
          type: string
          example: '12345'
          title: Customer ID
        department_id:
          description: The ID of the department this expense item is linked to.
          type: string
          example: '12345'
          title: Department ID
        location_id:
          description: The ID of the location this expense item is linked to.
          type: string
          example: '12345'
          title: Location ID
        tax_rate:
          $ref: '#/components/schemas/LinkedTaxRate'
        description:
          description: The expense line item description
          type: string
          example: Travel US.
          nullable: true
          title: Description
        total_amount:
          description: The total amount of the expense line item.
          type: number
          example: 275
          nullable: true
          title: Total amount
        billable:
          description: Boolean that indicates if the line item is billable or not.
          type: boolean
          example: true
          title: Billable
      additionalProperties: false
      required:
        - total_amount
      x-apideck-schema-id: ExpenseLineItem
      x-apideck-strict-required:
        - total_amount
      x-apideck-weights:
        id: high
        description: medium
        total_amount: high
        tax_rate: medium
        tracking_categories: low
        account_id: critical
        customer_id: medium
        department_id: edge-case
        location_id: edge-case
        billable: edge-case
    UpdateExpenseResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: quickbooks
        resource:
          description: Unified API resource name
          type: string
          example: Expenses
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    Anonymized:
      type: boolean
      example: true
      title: Anonymized
    Applicant:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: The name of an applicant.
          type: string
          example: Elon Musk
        first_name:
          description: The first name of the person.
          type: string
          example: Elon
          nullable: true
          title: First name
        last_name:
          description: The last name of the person.
          type: string
          example: Musk
          nullable: true
          title: Last name
        middle_name:
          description: Middle name of the person.
          type: string
          example: D.
          nullable: true
          title: Middle name
        initials:
          $ref: '#/components/schemas/Initials'
        birthday:
          description: The date of birth of the person.
          type: string
          format: date
          example: '2000-08-12'
          nullable: true
          title: Birth Date
        cover_letter:
          type: string
          example: 'I submit this application to express my sincere interest in the API developer position. In the previous role, I was responsible for leadership and ...'
          title: Cover letter
        job_url:
          type: string
          example: 'https://democompany.recruitee.com/o/example-talent-pool'
          nullable: true
          readOnly: true
          title: Job URL
        photo_url:
          description: The URL of the photo of a person.
          type: string
          example: 'https://unavatar.io/elon-musk'
          nullable: true
          title: Photo URL
        headline:
          description: Typically a list of previous companies where the contact has worked or schools that the contact has attended
          type: string
          example: 'PepsiCo, Inc, Central Perk'
          title: Headline
        title:
          $ref: '#/components/schemas/Title'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        websites:
          type: array
          items:
            type: object
            x-apideck-schema-id: Website
            required:
              - url
            additionalProperties: false
            x-apideck-weights:
              url: critical
              type: critical
              id: edge-case
            properties:
              id:
                description: Unique identifier for the website
                type: string
                example: '12345'
                nullable: true
              url:
                description: The website URL
                type: string
                example: 'http://example.com'
                minLength: 1
              type:
                description: The type of website
                type: string
                example: primary
                enum:
                  - primary
                  - secondary
                  - work
                  - personal
                  - other
                nullable: true
                x-apideck-enum-id: websites.type
        social_links:
          type: array
          items:
            type: object
            x-apideck-schema-id: SocialLink
            required:
              - url
            additionalProperties: false
            x-apideck-weights:
              id: edge-case
              url: critical
              type: critical
            properties:
              id:
                description: Unique identifier of the social link
                type: string
                example: '12345'
                nullable: true
              url:
                description: 'URL of the social link, e.g. https://www.twitter.com/apideck'
                type: string
                example: 'https://www.twitter.com/apideck'
                minLength: 1
              type:
                description: 'Type of the social link, e.g. twitter'
                type: string
                example: twitter
                nullable: true
        stage_id:
          type: string
          example: '12345'
          title: Stage
        recruiter_id:
          type: string
          example: '12345'
          title: Recruiter ID
        coordinator_id:
          type: string
          example: '12345'
          title: Coordinator ID
        application_ids:
          type: array
          items:
            type: string
          example:
            - a0d636c6-43b3-4bde-8c70-85b707d992f4
            - a98lfd96-43b3-4bde-8c70-85b707d992e6
          nullable: true
        applications:
          type: array
          items:
            type: string
          example:
            - a0d636c6-43b3-4bde-8c70-85b707d992f4
            - a98lfd96-43b3-4bde-8c70-85b707d992e6
          nullable: true
        followers:
          type: array
          items:
            type: string
          example:
            - a0d636c6-43b3-4bde-8c70-85b707d992f4
            - a98lfd96-43b3-4bde-8c70-85b707d992e6
          nullable: true
        sources:
          type: array
          items:
            type: string
          example:
            - Job site
          nullable: true
        source_id:
          type: string
          example: '12345'
          readOnly: true
          title: Source ID
        confidential:
          type: boolean
          example: false
          title: Confidential
        anonymized:
          $ref: '#/components/schemas/Anonymized'
        tags:
          $ref: '#/components/schemas/Tags'
        archived:
          $ref: '#/components/schemas/Archived'
        last_interaction_at:
          $ref: '#/components/schemas/LastInteractionAt'
        owner_id:
          $ref: '#/components/schemas/OwnerId'
        sourced_by:
          type: string
          example: '12345'
          nullable: true
          readOnly: true
          title: Sourced by
        cv_url:
          type: string
          example: 'https://recruitee-main.s3.eu-central-1.amazonaws.com/candidates/36615291/pdf_cv_38swhu4w42k1.pdf?response-content-disposition=inline&response-content-type=application%2Fpdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAQYHB7CA5RLR4Y3ON%2F20220514%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20220514T235654Z&X-Amz-Expires=36000&X-Amz-SignedHeaders=host&X-Amz-Signature=72c0621f5976db75b54de487eb821a8e73480d7f2a6a4a9713ab997944b0561f'
          readOnly: true
          title: CV URL
        record_url:
          $ref: '#/components/schemas/RecordUrl'
        rejected_at:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
          title: Rejected at (timestamp)
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        deleted:
          $ref: '#/components/schemas/Deleted'
        deleted_by:
          $ref: '#/components/schemas/DeletedBy'
        deleted_at:
          $ref: '#/components/schemas/DeletedAt'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: Applicant
      x-apideck-weights:
        id: critical
        name: critical
        first_name: high
        last_name: high
        middle_name: low
        initials: low
        birthday: high
        cover_letter: low
        job_url: medium
        photo_url: medium
        headline: medium
        title: high
        emails: high
        phone_numbers: high
        addresses: high
        websites: medium
        social_links: medium
        stage_id: low
        recruiter_id: medium
        coordinator_id: medium
        applications: medium
        followers: low
        sources: low
        source_id: low
        confidential: medium
        anonymized: low
        tags: low
        archived: medium
        last_interaction_at: medium
        owner_id: high
        sourced_by: high
        cv_url: high
        record_url: low
        rejected_at: high
        custom_fields: edge-case
        deleted: medium
        deleted_by: medium
        deleted_at: medium
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
    ApplicantsFilter:
      type: object
      properties:
        job_id:
          description: Id of the job to filter on
          type: string
          example: '1234'
      example:
        job_id: '1234'
      additionalProperties: false
      x-apideck-schema-id: ApplicantsFilter
    Application:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        applicant_id:
          type: string
          example: '12345'
          nullable: true
          title: Applicant ID
        job_id:
          type: string
          example: '12345'
          nullable: true
          title: Job ID
        status:
          type: string
          example: open
          enum:
            - open
            - rejected
            - hired
            - converted
            - other
          nullable: true
          title: Status
        stage:
          type: object
          properties:
            id:
              description: 'Stage the candidate should be in. If omitted, the default stage for this job will be used.'
              type: string
              example: '12345'
              nullable: true
              title: Stage ID
            name:
              type: string
              example: '12345'
              nullable: true
              title: Stage name
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - applicant_id
        - job_id
      x-apideck-weights:
        id: high
        applicant_id: critical
        job_id: critical
        status: high
        stage: high
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
    Archived:
      type: boolean
      example: false
      nullable: true
      title: Archived
    Code:
      description: The code of the job.
      type: string
      example: 123-OC
    CreateApplicantResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: lever
        resource:
          description: Unified API resource name
          type: string
          example: Applicants
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateApplicationResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sap-successfactors
        resource:
          description: Unified API resource name
          type: string
          example: Applications
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteApplicantResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: lever
        resource:
          description: Unified API resource name
          type: string
          example: Applicants
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeleteApplicationResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sap-successfactors
        resource:
          description: Unified API resource name
          type: string
          example: Applications
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    Deleted:
      description: Flag to indicate if the object is deleted.
      type: boolean
      example: true
      nullable: true
      title: Deleted
    DeletedAt:
      description: The time at which the object was deleted.
      type: string
      format: date-time
      example: '2020-09-30T07:43:32.000Z'
      nullable: true
      readOnly: true
      title: Deleted at (timestamp)
    DeletedBy:
      description: The user who deleted the object.
      type: string
      example: '12345'
      nullable: true
      readOnly: true
      title: Deleted by
    Department:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        parent_id:
          description: Parent ID
          type: string
          example: '22345'
          nullable: true
          readOnly: true
        name:
          description: Department name
          type: string
          example: R&D
          nullable: true
          title: Name
        code:
          type: string
          example: '2'
          nullable: true
          title: Code
        description:
          type: string
          example: R&D
          nullable: true
          title: Description
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: Department
      x-apideck-weights:
        id: critical
        parent_id: medium
        name: critical
        code: medium
        description: low
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
    Description:
      description: A description of the object.
      type: string
      example: A description
      nullable: true
      title: Description
    GetApplicantResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: lever
        resource:
          description: Unified API resource name
          type: string
          example: Applicants
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Applicant'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetApplicantResponse
    GetApplicantsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: lever
        resource:
          description: Unified API resource name
          type: string
          example: Applicants
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Applicant'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetApplicantsResponse
    GetApplicationResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sap-successfactors
        resource:
          description: Unified API resource name
          type: string
          example: Applications
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Application'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetApplicationsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sap-successfactors
        resource:
          description: Unified API resource name
          type: string
          example: Applications
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Application'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetJobResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: lever
        resource:
          description: Unified API resource name
          type: string
          example: Jobs
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Job'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetJobResponse
    GetJobsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: lever
        resource:
          description: Unified API resource name
          type: string
          example: Jobs
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Job'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetJobsResponse
    Initials:
      description: 'The initials of the person, usually derived from their first, middle, and last names.'
      type: string
      example: EM
      nullable: true
      title: Initials
    Job:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        slug:
          type: string
          example: ceo
          nullable: true
        title:
          $ref: '#/components/schemas/Title'
        sequence:
          description: Sequence in relation to other jobs.
          type: integer
          example: 3
        visibility:
          description: The visibility of the job
          type: string
          example: internal
          enum:
            - draft
            - public
            - internal
          x-apideck-enum-id: jobs.visibility
        status:
          $ref: '#/components/schemas/JobStatus'
        code:
          $ref: '#/components/schemas/Code'
        language:
          $ref: '#/components/schemas/Language'
        employment_terms:
          type: string
          example: full-time
          enum:
            - full-time
            - part-time
            - internship
            - contractor
            - employee
            - freelance
            - temp
            - seasonal
            - volunteer
            - other
          nullable: true
          x-apideck-enum-id: jobs.employment_terms
        experience:
          description: Level of experience required for the job role.
          type: string
          example: Director/ Vice President
          title: Experience
        location:
          description: Specifies the location for the job posting.
          type: string
          example: San Francisco
          nullable: true
          title: Location
        remote:
          description: Specifies whether the posting is for a remote job.
          type: boolean
          example: true
          nullable: true
          title: Remote
        requisition_id:
          description: A job's Requisition ID (Req ID) allows your organization to identify and track a job based on alphanumeric naming conventions unique to your company's internal processes.
          type: string
          example: abc123
          title: Requisition ID
        department:
          $ref: '#/components/schemas/Department'
        branch:
          description: Details of the branch for which the job is created.
          type: object
          example:
            id: '123'
            name: HQ NY
          properties:
            id:
              $ref: '#/components/schemas/Id'
            name:
              description: Name of the branch.
              type: string
              example: HQ NY
          title: Branch
          x-apideck-weights:
            id: medium
            name: medium
        recruiters:
          description: The recruiter is generally someone who is tasked to help the hiring manager find and screen qualified applicant
          type: array
          items:
            type: string
            example: '12345'
            readOnly: true
          example:
            - a0d636c6-43b3-4bde-8c70-85b707d992f4
          nullable: true
        hiring_managers:
          type: array
          items:
            x-apideck-weights:
              id: medium
            type: string
            example: '12345'
            readOnly: true
          example:
            - '123456'
        followers:
          type: array
          items:
            type: string
            example: '12345'
            readOnly: true
          example:
            - a0d636c6-43b3-4bde-8c70-85b707d992f4
            - a98lfd96-43b3-4bde-8c70-85b707d992e6
          nullable: true
        description:
          $ref: '#/components/schemas/Description'
        description_html:
          description: The job description in HTML format
          type: string
          nullable: true
          title: Description (HTML)
        blocks:
          type: array
          items:
            x-apideck-weights:
              title: medium
              content: medium
            properties:
              title:
                type: string
              content:
                type: string
          example:
            - title: string
              content: string
        closing:
          type: string
          example: The closing section of the job description
          nullable: true
          title: Closing
        closing_html:
          description: The closing section of the job description in HTML format
          type: string
          nullable: true
          title: Closing
        closing_date:
          type: string
          format: date
          example: '2020-10-30'
          nullable: true
        salary:
          type: object
          properties:
            min:
              description: Minimum salary payable for the job role.
              type: integer
              example: 8000
            max:
              description: Maximum salary payable for the job role.
              type: integer
              example: 10000
            currency:
              $ref: '#/components/schemas/Currency'
            interval:
              type: string
              example: year
              nullable: true
          x-apideck-weights:
            min: medium
            max: medium
            currency: medium
            interval: edge-case
        url:
          description: URL of the job description
          type: string
          deprecated: true
          nullable: true
          title: URL
        job_portal_url:
          description: URL of the job portal
          type: string
          deprecated: true
          nullable: true
          title: URL
        record_url:
          type: string
          example: 'https://app.intercom.io/contacts/12345'
          deprecated: true
          nullable: true
          title: Record URL
        links:
          type: array
          items:
            type: object
            x-apideck-weights:
              type: critical
              url: critical
            properties:
              type:
                type: string
                example: job_portal
                enum:
                  - job_portal
                  - job_description
              url:
                type: string
                example: 'https://app.intercom.io/contacts/12345'
          minLength: 1
        confidential:
          type: boolean
          example: false
          title: Confidential
        available_to_employees:
          description: Specifies whether an employee of the organization can apply for the job.
          type: boolean
          example: false
          title: Available to employees
        tags:
          $ref: '#/components/schemas/Tags'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        deleted:
          $ref: '#/components/schemas/Deleted'
        owner_id:
          $ref: '#/components/schemas/OwnerId'
        published_at:
          $ref: '#/components/schemas/PublishedAt'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      additionalProperties: false
      x-apideck-schema-id: Job
      x-apideck-strict-any-of:
        - required:
            - description_html
        - required:
            - description
      x-apideck-weights:
        id: high
        slug: low
        title: critical
        sequence: low
        visibility: low
        status: critical
        code: low
        language: medium
        employment_terms: low
        experience: low
        remote: low
        requisition_id: medium
        department: medium
        location: critical
        branch: low
        recruiters: low
        hiring_managers: low
        followers: low
        description: high
        description_html: high
        blocks: edge-case
        closing: medium
        closing_html: edge-case
        closing_date: high
        salary: critical
        url: high
        job_portal_url: medium
        confidential: medium
        available_to_employees: medium
        tags: low
        addresses: low
        links: critical
        custom_fields: critical
        record_url: low
        deleted: medium
        owner_id: high
        published_at: high
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: critical
    JobStatus:
      description: The status of the job.
      type: string
      example: completed
      enum:
        - draft
        - internal
        - published
        - completed
        - on-hold
        - private
      x-apideck-enum-id: jobs.status
    LastInteractionAt:
      type: string
      format: date-time
      example: '2020-09-30T07:43:32.000Z'
      nullable: true
      readOnly: true
      title: Last interaction at (timestamp)
    OwnerId:
      type: string
      example: '54321'
      nullable: true
      title: Owner ID
    PublishedAt:
      type: string
      format: date-time
      example: '2020-09-30T07:43:32.000Z'
      nullable: true
      readOnly: true
      title: Published at (timestamp)
    RecordUrl:
      type: string
      example: 'https://app.intercom.io/contacts/12345'
      nullable: true
      title: Record URL
    UpdateApplicantResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: lever
        resource:
          description: Unified API resource name
          type: string
          example: Applicants
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    UpdateApplicationResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sap-successfactors
        resource:
          description: Unified API resource name
          type: string
          example: Applications
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    ActivitiesFilter:
      type: object
      properties:
        company_id:
          description: Company ID to filter on
          type: string
          example: '1234'
        owner_id:
          description: Owner ID to filter on
          type: string
          example: '1234'
        contact_id:
          description: Primary contact ID to filter on
          type: string
          example: '1234'
        updated_since:
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Updated since (timestamp)
        type:
          description: Type to filter on
          type: string
          format: string
          example: Task
          title: Type
      example:
        updated_since: '2020-09-30T07:43:32.000Z'
      additionalProperties: false
      x-apideck-schema-id: ActivitiesFilter
    ActivitiesSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Activities
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
          x-apideck-enum-id: activities.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: ActivitiesSort
    Activity:
      type: object
      properties:
        id:
          description: The unique identifier of the activity
          type: string
          example: '12345'
          readOnly: true
        downstream_id:
          description: The third-party API ID of original entity
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        activity_datetime:
          description: The date and time of the activity
          type: string
          example: '2021-05-01T12:00:00.000Z'
          nullable: true
        duration_seconds:
          description: The duration of the activity in seconds
          type: integer
          example: 1800
          minimum: 0
          nullable: true
        user_id:
          description: The user related to the activity
          type: string
          example: '12345'
          nullable: true
        account_id:
          description: The account related to the activity
          type: string
          example: '12345'
          nullable: true
        contact_id:
          description: The contact related to the activity
          type: string
          example: '12345'
          nullable: true
        company_id:
          description: The company related to the activity
          type: string
          example: '12345'
          nullable: true
        opportunity_id:
          description: The opportunity related to the activity
          type: string
          example: '12345'
          nullable: true
        lead_id:
          description: The lead related to the activity
          type: string
          example: '12345'
          nullable: true
        owner_id:
          description: The owner of the activity
          type: string
          example: '12345'
          nullable: true
        campaign_id:
          description: The campaign related to the activity
          type: string
          example: '12345'
          nullable: true
        case_id:
          description: The case related to the activity
          type: string
          example: '12345'
          nullable: true
        asset_id:
          description: The asset related to the activity
          type: string
          example: '12345'
          nullable: true
        contract_id:
          description: The contract related to the activity
          type: string
          example: '12345'
          nullable: true
        product_id:
          description: The product related to the activity
          type: string
          example: '12345'
          nullable: true
        solution_id:
          description: The solution related to the activity
          type: string
          example: '12345'
          nullable: true
        custom_object_id:
          description: The custom object related to the activity
          type: string
          example: '12345'
          nullable: true
        type:
          description: The type of the activity
          type: string
          example: meeting
          enum:
            - call
            - meeting
            - email
            - note
            - task
            - deadline
            - send-letter
            - send-quote
            - other
          nullable: true
          x-apideck-enum-id: activities.type
        title:
          description: The title of the activity
          type: string
          example: Meeting
          nullable: true
        description:
          description: A description of the activity
          type: string
          example: More info about the meeting
          nullable: true
        note:
          description: An internal note about the activity
          type: string
          example: An internal note about the meeting
          nullable: true
          title: Note (internal)
        location:
          description: The location of the activity
          type: string
          example: Space
          nullable: true
        location_address:
          $ref: '#/components/schemas/Address'
        all_day_event:
          description: Whether the Activity is an all day event or not
          type: boolean
          example: false
          nullable: true
        private:
          description: Whether the Activity is private or not
          type: boolean
          example: true
          nullable: true
        group_event:
          description: Whether the Activity is a group event or not
          type: boolean
          example: true
          nullable: true
        event_sub_type:
          description: The sub type of the group event
          type: string
          example: debrief
          nullable: true
        group_event_type:
          description: The type of the group event
          type: string
          example: Proposed
          nullable: true
        child:
          description: Whether the activity is a child of another activity or not
          type: boolean
          example: false
          nullable: true
        archived:
          description: Whether the activity is archived or not
          type: boolean
          example: false
          nullable: true
        deleted:
          description: Whether the activity is deleted or not
          type: boolean
          example: false
          nullable: true
        show_as:
          type: string
          example: busy
          enum:
            - free
            - busy
          nullable: true
          x-apideck-enum-id: activities.show_as
        done:
          description: Whether the Activity is done or not
          type: boolean
          example: false
          nullable: true
          title: Done
        start_datetime:
          description: The start date and time of the activity
          type: string
          example: '2021-05-01T12:00:00.000Z'
          nullable: true
        end_datetime:
          description: The end date and time of the activity
          type: string
          example: '2021-05-01T12:30:00.000Z'
          nullable: true
        duration_minutes:
          description: The duration of the activity in minutes
          type: integer
          example: 30
          nullable: true
          readOnly: true
        activity_date:
          description: The date of the activity
          type: string
          example: '2021-05-01'
          nullable: true
        end_date:
          description: The end date of the activity
          type: string
          example: '2021-05-01'
          nullable: true
        recurrent:
          description: Whether the activity is recurrent or not
          type: boolean
          example: false
        reminder_datetime:
          description: The date and time of the reminder
          type: string
          example: '2021-05-01T17:00:00.000Z'
          nullable: true
        reminder_set:
          description: Whether the reminder is set or not
          type: boolean
          example: false
          nullable: true
        video_conference_url:
          description: The URL of the video conference
          type: string
          example: 'https://us02web.zoom.us/j/88120759396'
          nullable: true
          title: Meeting URL
        video_conference_id:
          description: The ID of the video conference
          type: string
          example: 'zoom:88120759396'
          nullable: true
          title: Meeting ID
        custom_fields:
          description: Custom fields of the activity
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/ActivityAttendee'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          description: The user who last updated the activity
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        created_by:
          description: The user who created the activity
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        updated_at:
          description: The date and time when the activity was last updated
          type: string
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        created_at:
          description: The date and time when the activity was created
          type: string
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - type
      x-apideck-schema-id: Activity
      x-apideck-weights:
        id: critical
        downstream_id: edge-case
        activity_datetime: high
        duration_seconds: medium
        user_id: edge-case
        account_id: edge-case
        contact_id: edge-case
        company_id: edge-case
        lead_id: edge-case
        opportunity_id: edge-case
        owner_id: high
        campaign_id: edge-case
        case_id: edge-case
        asset_id: edge-case
        contract_id: edge-case
        product_id: edge-case
        solution_id: edge-case
        custom_object_id: edge-case
        type: critical
        title: critical
        description: medium
        note: medium
        location: medium
        location_address: medium
        all_day_event: medium
        private: low
        group_event: edge-case
        event_sub_type: medium
        group_event_type: edge-case
        child: low
        archived: low
        deleted: low
        show_as: edge-case
        done: medium
        start_datetime: high
        end_datetime: high
        duration_minutes: edge-case
        activity_date: medium
        end_date: medium
        attendees: edge-case
        reminder_set: edge-case
        reminder_datetime: edge-case
        video_conference_url: edge-case
        video_conference_id: edge-case
        updated_at: high
    ActivityAttendee:
      type: object
      properties:
        id:
          description: Unique identifier for the attendee
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        name:
          description: Full name of the attendee
          type: string
          example: Elon Musk
          minLength: 1
          nullable: true
        first_name:
          description: First name of the attendee
          type: string
          example: Elon
          nullable: true
        middle_name:
          description: Middle name of the attendee
          type: string
          example: D.
          nullable: true
        last_name:
          description: Last name of the attendee
          type: string
          example: Musk
          nullable: true
        prefix:
          description: Prefix of the attendee
          type: string
          example: Mr.
          nullable: true
        suffix:
          description: Suffix of the attendee
          type: string
          example: PhD
          nullable: true
        email_address:
          description: Email address of the attendee
          type: string
          example: elon@musk.com
          nullable: true
        is_organizer:
          description: Whether the attendee is the organizer of the activity
          type: boolean
          example: true
          nullable: true
        status:
          description: Status of the attendee
          type: string
          example: accepted
          enum:
            - accepted
            - tentative
            - declined
          nullable: true
          x-apideck-enum-id: activity-attendees.status
        user_id:
          description: The identifier for a related user
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        contact_id:
          description: The identifier for a related contact
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        updated_at:
          description: The last time the attendee was updated (ISO 8601)
          type: string
          format: date-time
          example: '2017-08-12T20:43:21.291Z'
          nullable: true
          readOnly: true
        created_at:
          description: The time the attendee was created (ISO 8601)
          type: string
          format: date-time
          example: '2017-08-12T20:43:21.291Z'
          nullable: true
          readOnly: true
      additionalProperties: false
      x-apideck-schema-id: ActivityAttendee
      x-apideck-weights:
        id: critical
        name: critical
        first_name: high
        middle_name: low
        last_name: high
        prefix: low
        suffix: edge-case
        email_address: medium
        is_organizer: medium
        status: medium
        user_id: low
      x-pii:
        - name
        - first_name
        - middle_name
        - last_name
        - email_address
    CompaniesFilter:
      type: object
      properties:
        name:
          description: Name of the company to filter on
          type: string
          example: SpaceX
      example:
        name: SpaceX
      additionalProperties: false
      x-apideck-schema-id: CompaniesFilter
    CompaniesSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Companies
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
            - name
          x-apideck-enum-id: companies.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: CompaniesSort
    ContactsFilter:
      type: object
      properties:
        name:
          description: Name of the contact to filter on
          type: string
          example: Elon Musk
        first_name:
          description: First name of the contact to filter on
          type: string
          example: Elon
        last_name:
          description: Last name of the contact to filter on
          type: string
          example: Musk
        email:
          description: Email of the contact to filter on
          type: string
          example: elon@tesla.com
        phone_number:
          description: Phone number of the contact to filter on
          type: string
          example: 111-111-1111
        company_id:
          description: Unique identifier for the associated company of the contact to filter on
          type: string
          example: '12345'
        owner_id:
          description: Unique identifier for the owner of the contact to filter on
          type: string
          example: '12345'
      example:
        first_name: Elon
        last_name: Musk
        email: elon@tesla.com
        company_id: '12345'
        owner_id: '12345'
      additionalProperties: false
      x-apideck-schema-id: ContactsFilter
    ContactsSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Contacts
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
            - name
            - first_name
            - last_name
            - email
          x-apideck-enum-id: contacts.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: ContactsSort
    CreateActivityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: activities
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateActivityResponse
    CreateCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateCompanyResponse
    CreateContactResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: contacts
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateContactResponse
    CreateLeadResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateLeadResponse
    CreateNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: notes
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateNoteResponse
    CreateOpportunityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: opportunities
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateOpportunityResponse
    CreatePipelineResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: pipelines
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreatePipelineResponse
    CreateUserResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: users
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateUserResponse
    DeleteActivityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: activities
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteActivityResponse
    DeleteCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteCompanyResponse
    DeleteContactResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: contacts
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteContactResponse
    DeleteLeadResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteLeadResponse
    DeleteNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: notes
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteNoteResponse
    DeleteOpportunityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteOpportunityResponse
    DeletePipelineResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeletePipelineResponse
    DeleteUserResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: users
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteUserResponse
    GetActivitiesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: activities
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetActivitiesResponse
    GetActivityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: activities
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Activity'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetActivityResponse
    GetCompaniesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCompaniesResponse
    GetCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Company'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCompanyResponse
    GetContactResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Contact'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetContactResponse
    GetContactsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: contacts
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetContactsResponse
    GetLeadResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Lead'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetLeadResponse
    GetLeadsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Lead'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetLeadsResponse
    GetNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: notes
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Note'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetNoteResponse
    GetNotesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: notes
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetNotesResponse
    GetOpportunitiesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: opportunities
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Opportunity'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetOpportunitiesResponse
    GetOpportunityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: opportunities
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Opportunity'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetOpportunityResponse
    GetPipelineResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: pipelines
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Pipeline'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetPipelineResponse
    GetPipelinesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: pipelines
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Pipeline'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetPipelinesResponse
    GetUserResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/User'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetUserResponse
    GetUsersResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: users
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/User'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetUsersResponse
    Lead:
      type: object
      properties:
        id:
          description: Unique identifier for the contact.
          type: string
          example: '12345'
          readOnly: true
        name:
          description: Full name of the lead.
          type: string
          example: Elon Musk
        company_name:
          description: The name of the company the lead is associated with.
          type: string
          example: Spacex
          nullable: true
        owner_id:
          description: The owner of the lead.
          type: string
          example: '54321'
          nullable: true
        owner_name:
          description: The name of the owner of the lead.
          type: string
          example: John Doe
          nullable: true
        company_id:
          description: The company the lead is associated with.
          type: string
          example: '2'
          nullable: true
        lead_id:
          description: The identifier of the lead.
          type: string
          example: '2'
          nullable: true
        lead_source:
          description: The source of the lead.
          type: string
          example: Cold Call
          nullable: true
        first_name:
          description: The first name of the lead.
          type: string
          example: Elon
          nullable: true
        last_name:
          description: The last name of the lead.
          type: string
          example: Musk
          nullable: true
        description:
          description: The description of the lead.
          type: string
          example: A thinker
          nullable: true
        prefix:
          description: The prefix of the lead.
          type: string
          example: Sir
          nullable: true
        title:
          description: The job title of the lead.
          type: string
          example: CEO
          nullable: true
        language:
          description: language code according to ISO 639-1. For the United States - EN
          type: string
          example: EN
          nullable: true
        status:
          type: string
          example: New
          nullable: true
        monetary_amount:
          description: The monetary amount of the lead.
          type: number
          example: 75000
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        fax:
          description: The fax number of the lead.
          type: string
          example: '+12129876543'
          nullable: true
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        social_links:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        tags:
          $ref: '#/components/schemas/Tags'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_at:
          description: Date updated in ISO 8601 format
          type: string
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          readOnly: true
        created_at:
          description: Date created in ISO 8601 format
          type: string
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z$'
          readOnly: true
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - name
        - company_name
      x-apideck-schema-id: Lead
      x-apideck-weights:
        id: critical
        name: critical
        company_name: high
        owner_id: high
        owner_name: low
        company_id: high
        contact_id: low
        lead_source: low
        first_name: high
        last_name: high
        description: low
        prefix: low
        title: high
        language: medium
        status: high
        monetary_amount: low
        currency: low
        fax: low
        websites: medium
        addresses: high
        social_links: low
        phone_numbers: high
        emails: high
        custom_fields: medium
        tags: low
        updated_at: medium
        created_at: medium
      x-pii:
        - name
        - email
        - first_name
        - last_name
    LeadsFilter:
      type: object
      properties:
        name:
          description: Name of the lead to filter on
          type: string
          example: Elon Musk
        first_name:
          description: First name of the lead to filter on
          type: string
          example: Elon
        last_name:
          description: Last name of the lead to filter on
          type: string
          example: Musk
        email:
          description: E-mail of the lead to filter on
          type: string
          example: elon@tesla.com
        phone_number:
          description: Phone number of the lead to filter on
          type: string
          example: '1234567890'
      example:
        first_name: Elon
        last_name: Musk
        email: elon@tesla.com
        phone_number: '1234567890'
      additionalProperties: false
      x-apideck-schema-id: LeadsFilter
    LeadsSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Leads
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
            - name
            - first_name
            - last_name
            - email
          x-apideck-enum-id: leads.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: LeadsSort
    Note:
      type: object
      properties:
        id:
          description: The unique identifier of the note
          type: string
          example: '12345'
          readOnly: true
        title:
          description: The title of the note
          type: string
          example: Meeting Notes
          nullable: true
        content:
          description: The content of the note.
          example: Office hours are 9AM-6PM
          nullable: true
          type: string
        owner_id:
          description: The user that owns the note.
          type: string
          example: '12345'
          nullable: true
        contact_id:
          description: The contact that is related to the note.
          type: string
          example: '12345'
          nullable: true
        company_id:
          description: The company that is related to the note.
          type: string
          example: '12345'
          nullable: true
        opportunity_id:
          description: The opportunity that is related to the note.
          type: string
          example: '12345'
          nullable: true
        lead_id:
          description: The lead that is related to the note.
          type: string
          example: '12345'
          nullable: true
        active:
          description: Whether the Note is active or not.
          type: boolean
          example: true
          nullable: true
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          description: The user that last updated the note.
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        created_by:
          description: The user that created the note.
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        updated_at:
          description: The timestamp when the note was last updated
          type: string
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        created_at:
          description: The timestamp when the note was created
          type: string
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: Note
      x-apideck-weights:
        id: critical
        title: critical
        content: critical
        owner_id: high
        contact_id: medium
        company_id: medium
        opportunity_id: medium
        lead_id: medium
        active: low
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
    OpportunitiesFilter:
      type: object
      properties:
        title:
          description: Title of the opportunity to filter on
          type: string
          example: Tesla deal
        status:
          description: Status to filter on
          type: string
          example: Completed
        monetary_amount:
          description: Monetary amount to filter on
          type: number
          example: 75000
        win_probability:
          description: Win probability to filter on
          type: number
          example: 50
        company_id:
          description: Company ID to filter on
          type: string
          example: '1234'
        owner_id:
          description: Owner ID to filter on
          type: string
          example: '1234'
        primary_contact_id:
          description: Primary contact ID to filter on
          type: string
          example: '1234'
      example:
        status: Completed
        monetary_amount: 75000
      additionalProperties: false
      x-apideck-schema-id: OpportunitiesFilter
    OpportunitiesSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Opportunities
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
            - title
            - win_probability
            - monetary_amount
            - status
          x-apideck-enum-id: opportunities.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: OpportunitiesSort
    Opportunity:
      type: object
      properties:
        id:
          description: A unique identifier for the opportunity.
          type: string
          example: '12345'
          readOnly: true
        title:
          description: The title or name of the opportunity.
          type: string
          example: New Rocket
          minLength: 1
        primary_contact_id:
          description: The unique identifier of the primary contact associated with the opportunity.
          type: string
          example: '12345'
          nullable: true
        description:
          description: A description of the opportunity.
          type: string
          example: Opportunities are created for People and Companies that are interested in buying your products or services. Create Opportunities for People and Companies to move them through one of your Pipelines.
          nullable: true
        type:
          description: The type of the opportunity
          type: string
          example: Existing Customer - Upgrade
          nullable: true
        monetary_amount:
          description: The monetary value associated with the opportunity
          type: number
          example: 75000
          nullable: true
        currency:
          $ref: '#/components/schemas/Currency'
        win_probability:
          description: 'The probability of winning the opportunity, expressed as a percentage.'
          type: number
          example: 40
          nullable: true
        expected_revenue:
          description: The expected revenue from the opportunity
          type: number
          example: 75000
          nullable: true
          readOnly: true
        close_date:
          description: 'The actual closing date for the opportunity. If close_date is null, the opportunity is not closed yet.'
          type: string
          format: date
          example: '2020-10-30'
          nullable: true
        loss_reason_id:
          description: The unique identifier of the reason why the opportunity was lost.
          type: string
          example: '12345'
          nullable: true
        loss_reason:
          description: The reason why the opportunity was lost.
          type: string
          example: No budget
          nullable: true
        won_reason_id:
          description: The unique identifier of the reason why the opportunity was won.
          type: string
          example: '12345'
          nullable: true
        won_reason:
          description: The reason why the opportunity was won.
          type: string
          example: Best pitch
          nullable: true
        pipeline_id:
          description: The unique identifier of the pipeline associated with the opportunity
          type: string
          example: '12345'
          nullable: true
        pipeline_stage_id:
          description: The unique identifier of the stage in the pipeline associated with the opportunity.
          type: string
          example: '12345'
          nullable: true
        source_id:
          description: The unique identifier of the source of the opportunity.
          type: string
          example: '12345'
          nullable: true
        lead_id:
          description: The unique identifier of the lead associated with the opportunity.
          type: string
          example: '12345'
          nullable: true
        lead_source:
          description: The source of the lead associated with the opportunity.
          type: string
          example: Website
          nullable: true
        contact_id:
          description: The unique identifier of the contact associated with the opportunity.
          type: string
          example: '12345'
          nullable: true
        contact_ids:
          description: An array of unique identifiers of all contacts associated with the opportunity.
          type: array
          items:
            type: string
            example: '12345'
        company_id:
          description: The unique identifier of the company associated with the opportunity.
          type: string
          example: '12345'
          nullable: true
        company_name:
          description: The name of the company associated with the opportunity.
          type: string
          example: Copper
          nullable: true
        owner_id:
          description: The unique identifier of the user who owns the opportunity.
          type: string
          example: '12345'
          nullable: true
        priority:
          description: The priority level of the opportunity.
          type: string
          example: None
          nullable: true
        status:
          description: The current status of the opportunity.
          type: string
          example: Open
          nullable: true
        status_id:
          description: The unique identifier of the current status of the opportunity.
          type: string
          example: '12345'
          nullable: true
        tags:
          $ref: '#/components/schemas/Tags'
        interaction_count:
          description: The number of interactions with the opportunity.
          type: number
          example: 0
          nullable: true
          readOnly: true
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        stage_last_changed_at:
          description: The date and time when the stage of the opportunity was last changed.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
        last_activity_at:
          description: The date and time of the last activity associated with the opportunity.
          type: string
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        deleted:
          description: Indicates whether the opportunity has been deleted.
          type: boolean
          example: false
          readOnly: true
        date_stage_changed:
          description: The date and time when the stage of the opportunity was last changed.
          type: string
          format: date-time
          example: '2020-09-30T00:00:00.000Z'
          nullable: true
          readOnly: true
        date_last_contacted:
          description: The date and time when the opportunity was last contacted.
          type: string
          format: date-time
          example: '2020-09-30T00:00:00.000Z'
          nullable: true
          readOnly: true
        date_lead_created:
          description: The date and time when the lead associated with the opportunity was created.
          type: string
          format: date-time
          example: '2020-09-30T00:00:00.000Z'
          nullable: true
          readOnly: true
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          description: The unique identifier of the user who last updated the opportunity.
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        created_by:
          description: The unique identifier of the user who created the opportunity.
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        updated_at:
          description: The date and time when the opportunity was last updated.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        created_at:
          description: The date and time when the opportunity was created.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - title
        - primary_contact_id
      x-apideck-schema-id: Opportunity
      x-apideck-weights:
        id: critical
        title: critical
        primary_contact_id: critical
        description: medium
        type: high
        monetary_amount: high
        currency: high
        win_probability: high
        expected_revenue: medium
        close_date: medium
        loss_reason_id: edge-case
        loss_reason: edge-case
        won_reason_id: edge-case
        won_reason: edge-case
        pipeline_id: edge-case
        pipeline_stage_id: edge-case
        source_id: medium
        lead_id: medium
        lead_source: edge-case
        contact_id: medium
        company_id: high
        company_name: medium
        owner_id: high
        priority: medium
        status: high
        status_id: edge-case
        tags: low
        interaction_count: low
        custom_fields: medium
        stage_last_changed_at: edge-case
        last_activity_at: medium
        deleted: low
        date_stage_changed: edge-case
        date_last_contacted: medium
        date_lead_created: edge-case
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
    Pipeline:
      type: object
      properties:
        id:
          description: The unique identifier of the Pipeline.
          type: string
          example: default
        name:
          description: The name of the Pipeline.
          type: string
          example: Sales Pipeline
          minLength: 1
        currency:
          $ref: '#/components/schemas/Currency'
        archived:
          description: Whether the Pipeline is archived or not.
          type: boolean
          example: false
        active:
          description: Whether the Pipeline is active or not.
          type: boolean
          example: false
        display_order:
          description: The order in which the Pipeline is displayed in the UI.
          type: integer
          example: 1
          nullable: true
        win_probability_enabled:
          description: Whether the Pipeline has win probability enabled or not.
          type: boolean
          example: true
        stages:
          description: The Pipeline Stages.
          type: array
          items:
            x-apideck-weights:
              id: medium
              name: medium
              value: medium
              win_probability: medium
              display_order: medium
            type: object
            additionalProperties: false
            properties:
              id:
                description: The unique identifier of the Pipeline Stage.
                type: string
                example: contractsent
                nullable: true
                readOnly: true
              name:
                description: The name of the Pipeline Stage.
                type: string
                example: Contract Sent
                nullable: true
              value:
                description: The value of the Pipeline Stage.
                type: string
                example: CONTRACT_SENT
                nullable: true
              win_probability:
                description: 'The expected probability of winning an Opportunity in this Pipeline Stage. Valid values are [0-100].'
                type: integer
                example: 50
                nullable: true
              display_order:
                description: The order in which the Pipeline Stage is displayed in the UI.
                type: integer
                example: 1
                nullable: true
        updated_at:
          description: The date and time when the object was last updated.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
        created_at:
          description: The date and time when the object was created.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
          title: Created at (timestamp)
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - name
      x-apideck-schema-id: Pipeline
      x-apideck-weights:
        id: critical
        name: critical
        currency: low
        archived: low
        display_order: edge-case
        win_probability_enabled: edge-case
        stages: high
        updated_at: medium
        created_at: medium
      x-pii: []
    UpdateActivityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: activities
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateActivityResponse
    UpdateCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateCompanyResponse
    UpdateContactResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: contacts
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateContactResponse
    UpdateLeadResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateLeadResponse
    UpdateNoteResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: notes
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateNoteResponse
    UpdateOpportunityResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateOpportunityResponse
    UpdatePipelineResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: pipelines
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdatePipelineResponse
    UpdateUserResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: zoho-crm
        resource:
          description: Unified API resource name
          type: string
          example: companies
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateUserResponse
    User:
      type: object
      properties:
        id:
          description: The unique identifier for the user
          type: string
          example: '12345'
          readOnly: true
        parent_id:
          description: The parent user id
          type: string
          example: '54321'
          nullable: true
        username:
          description: The username of the user
          type: string
          example: masterofcoin
          nullable: true
        first_name:
          $ref: '#/components/schemas/FirstName'
        last_name:
          $ref: '#/components/schemas/LastName'
        title:
          description: The job title of the person.
          type: string
          example: CEO
          nullable: true
          title: Job title
        division:
          description: The division the person is currently in. Usually a collection of departments or teams or regions.
          type: string
          example: Europe
          nullable: true
          title: Division
        department:
          description: 'The department the person is currently in. [Deprecated](https://developers.apideck.com/changelog) in favor of the dedicated department_id and department_name field.'
          type: string
          example: R&D
          deprecated: true
          nullable: true
          title: Department
        company_name:
          description: The name of the company.
          type: string
          example: SpaceX
          nullable: true
          title: Company name
        employee_number:
          description: 'An Employee Number, Employee ID or Employee Code, is a unique number that has been assigned to each individual staff member within a company.'
          type: string
          example: 123456-AB
          nullable: true
          title: Employee number
        description:
          description: A description of the object.
          type: string
          example: A description
          nullable: true
          title: Description
        image:
          description: The URL of the user's avatar
          type: string
          example: 'https://logo.clearbit.com/spacex.com?s=128'
          nullable: true
        language:
          description: language code according to ISO 639-1. For the United States - EN
          type: string
          example: EN
          nullable: true
        status:
          description: The status of the user
          type: string
          example: active
          nullable: true
        password:
          description: The password of the user
          type: string
          example: supersecretpassword
          nullable: true
          writeOnly: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_at:
          description: The date and time when the user was last updated.
          type: string
          example: '2017-08-12T20:43:21.291Z'
          nullable: true
          readOnly: true
        created_at:
          description: The date and time when the user was created.
          type: string
          example: '2017-08-12T20:43:21.291Z'
          nullable: true
          readOnly: true
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      required:
        - emails
      x-apideck-schema-id: User
      x-apideck-weights:
        id: critical
        parent_id: edge-case
        username: medium
        first_name: high
        last_name: high
        title: high
        division: medium
        department: medium
        company_name: medium
        employee_number: medium
        description: low
        image: medium
        language: medium
        status: high
        password: medium
        addresses: high
        phone_numbers: high
        emails: high
        updated_at: medium
        created_at: medium
      x-pii:
        - username
        - first_name
        - last_name
        - email
    Division:
      description: The division the person is currently in. Usually a collection of departments or teams or regions.
      type: string
      example: Europe
      nullable: true
      title: Division
    EcommerceAddress:
      description: An object representing a shipping or billing address.
      type: object
      properties:
        line1:
          description: Address line 1 of the billing address.
          type: string
          example: 123 Main Street
          nullable: true
          title: Address line 1
        line2:
          description: Address line 2 of the billing address.
          type: string
          example: Apt 1
          nullable: true
          title: Address line 2
        company_name:
          description: Company name of the customer
          type: string
          example: Acme Inc.
          nullable: true
          title: Company Name
        city:
          description: City of the billing address.
          type: string
          example: New York
          nullable: true
          title: City
        state:
          description: State/province of the billing address.
          type: string
          example: NY
          nullable: true
          title: State
        postal_code:
          description: Postal/ZIP code of the billing address.
          type: string
          example: '10001'
          nullable: true
          title: Postal code
        country:
          description: Country of the billing address.
          type: string
          example: US
          maxLength: 2
          nullable: true
          title: Country
      title: Ecommerce Address
      x-apideck-schema-id: EcommerceAddress
      x-apideck-strict-required:
        - line1
        - city
        - state
        - postal_code
        - country
      x-apideck-weights:
        line1: critical
        city: critical
        state: critical
        postal_code: critical
        country: critical
        company_name: low
    EcommerceCustomer:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: Full name of the customer
          type: string
          example: John Doe
          nullable: true
          title: Full Name
        first_name:
          description: First name of the customer
          type: string
          example: John
          nullable: true
          title: First Name
        last_name:
          description: Last name of the customer
          type: string
          example: Doe
          nullable: true
          title: Last Name
        company_name:
          description: Company name of the customer
          type: string
          example: Acme Inc.
          nullable: true
          title: Company Name
        status:
          description: The current status of the customer
          type: string
          example: active
          enum:
            - active
            - archived
          nullable: true
          title: Customer status
          x-apideck-enum-id: ecommerce.customer.status
        currency:
          $ref: '#/components/schemas/Currency'
        emails:
          description: An array of email addresses for the customer.
          type: array
          items:
            $ref: '#/components/schemas/Email'
          nullable: true
          title: Email Addresses
        phone_numbers:
          description: An array of phone numbers for the customer.
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
          nullable: true
          title: Phone Numbers
        addresses:
          description: An array of addresses for the customer.
          type: array
          items:
            type: object
            additionalProperties: false
            x-apideck-weights:
              line1: critical
              city: critical
              state: critical
              postal_code: critical
              country: critical
            x-apideck-strict-required:
              - line1
              - city
              - state
              - postal_code
              - country
            properties:
              type:
                type: string
                example: billing
                enum:
                  - billing
                  - shipping
                  - other
                x-apideck-enum-id: ecommerce.customer.addresses.type
              id:
                $ref: '#/components/schemas/IdOrNull'
              line1:
                description: First line of the street address of the customer
                type: string
                example: Main street
                nullable: true
                title: Address Line 1
              line2:
                description: Second line of the street address of the customer
                type: string
                example: 'apt #'
                nullable: true
                title: Address Line 2
              city:
                description: City of the customer
                type: string
                example: Anytown
                nullable: true
                title: City
              state:
                description: State of the customer
                type: string
                example: Ohio
                nullable: true
                title: State
              postal_code:
                description: Postal code of the customer
                type: string
                example: '12345'
                nullable: true
                title: Postal Code
              country:
                description: Country of the customer
                type: string
                example: US
                nullable: true
                title: Country
          title: Addresses
        orders:
          type: array
          items:
            $ref: '#/components/schemas/LinkedEcommerceOrder'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      required:
        - id
      x-apideck-schema-id: EcommerceCustomer
      x-apideck-strict-any-of:
        - required:
            - name
            - first_name
            - last_name
        - required:
            - company_name
      x-apideck-strict-required:
        - emails
        - addresses
      x-apideck-weights:
        id: critical
        emails: critical
        first_name: critical
        last_name: critical
        name: critical
        currency: edge-case
    EcommerceCustomersFilter:
      type: object
      properties:
        email:
          description: Customer email address to filter on
          type: string
          example: elon@musk.com
        phone_number:
          description: Customer phone number to filter on
          type: string
          example: 111-111-1111
      example:
        email: elon@musk.com
        phone_number: 111-111-1111
      additionalProperties: false
      x-apideck-schema-id: EcommerceCustomersFilter
    EcommerceDiscount:
      description: An object representing a discount applied to an ecommerce order or product.
      type: object
      properties:
        code:
          description: The code used to apply the discount.
          type: string
          example: SUMMER20
          nullable: true
          title: Discount code
        amount:
          description: The fixed amount of the discount.
          type: string
          example: '5.99'
          nullable: true
          title: Discount amount
        percentage:
          description: The percentage of the discount.
          type: string
          example: '0.1'
          nullable: true
          title: Discount percentage
      title: Ecommerce Discount
      x-apideck-schema-id: EcommerceDiscount
      x-apideck-strict-one-of:
        - required:
            - amount
        - required:
            - percentage
      x-apideck-weights:
        code: low
    EcommerceOrder:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        order_number:
          description: 'Order number, if any.'
          type: string
          example: '123456789'
          nullable: true
          title: Order number
        currency:
          $ref: '#/components/schemas/Currency'
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceDiscount'
        sub_total:
          description: 'Sub-total amount, normally before tax.'
          type: string
          example: '45.17'
          nullable: true
          title: Sub-total amount
        shipping_cost:
          description: 'Shipping cost, if any.'
          type: string
          example: '5.17'
          nullable: true
          title: Shipping cost
        coupon_discount:
          description: 'Coupon discount, if any.'
          type: string
          example: '5.5'
          nullable: true
          title: Coupon discount
        total_discount:
          description: 'Total discount, if any.'
          type: string
          example: '5.5'
          nullable: true
          title: Total discount
        total_tax:
          description: 'Total tax, if any.'
          type: string
          example: '5.16'
          nullable: true
          title: Total tax
        total_amount:
          description: Total amount due.
          type: string
          example: '50.17'
          nullable: true
          title: Total amount
        refunded_amount:
          description: 'Refunded amount, if any.'
          type: string
          example: '5.5'
          nullable: true
          title: Refunded amount
        status:
          $ref: '#/components/schemas/EcommerceOrderStatus'
        payment_status:
          description: Current payment status of the order.
          type: string
          example: paid
          enum:
            - pending
            - authorized
            - paid
            - partial
            - refunded
            - voided
            - unknown
          nullable: true
          title: Payment status
          x-apideck-enum-id: ecommerce.order.payment_status
        fulfillment_status:
          description: Current fulfillment status of the order.
          type: string
          example: shipped
          enum:
            - pending
            - shipped
            - partial
            - delivered
            - cancelled
            - returned
            - unknown
          nullable: true
          title: Fulfillment status
          x-apideck-enum-id: ecommerce.order.fulfillment_status
        payment_method:
          description: Payment method used for this order.
          type: string
          example: credit_card
          nullable: true
          title: Payment method
        customer:
          $ref: '#/components/schemas/LinkedEcommerceCustomer'
        billing_address:
          $ref: '#/components/schemas/EcommerceAddress'
        shipping_address:
          $ref: '#/components/schemas/EcommerceAddress'
        tracking:
          type: array
          items:
            $ref: '#/components/schemas/TrackingItem'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceOrderLineItem'
        note:
          description: Note for the order.
          type: string
          example: Special instructions for delivery
          nullable: true
          title: Note
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      required:
        - id
      x-apideck-schema-id: EcommerceOrder
      x-apideck-strict-any-of:
        - required:
            - status
        - required:
            - payment_status
        - required:
            - fulfillment_status
      x-apideck-strict-required:
        - currency
        - total_tax
        - total_amount
        - customer
        - billing_address
        - shipping_address
        - line_items
      x-apideck-weights:
        id: critical
        order_number: medium
        currency: critical
        discounts: low
        sub_total: medium
        shipping_cost: medium
        total_discount: medium
        coupon_discount: medium
        total_tax: critical
        total_amount: critical
        refunded_amount: medium
        status: critical
        payment_status: critical
        fulfillment_status: critical
        payment_method: critical
        customer: critical
        billing_address: critical
        shipping_address: critical
        tracking: medium
        line_items: critical
        note: medium
        created_at: medium
        updated_at: medium
    EcommerceOrderLineItem:
      description: 'A single line item of an ecommerce order, representing a product or variant with associated options, quantity, and pricing information.'
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdOrNull'
        product_id:
          description: A unique identifier for the product associated with the line item.
          type: string
          example: def456
          nullable: true
          title: Product ID
        variant_id:
          description: 'A unique identifier for the variant of the product associated with the line item, if applicable.'
          type: string
          example: ghi789
          nullable: true
          title: Variant ID
        sku:
          description: The SKU of the product or variant associated with the line item.
          type: string
          example: MBP123-16GB-SILVER-13
          nullable: true
          title: SKU
        name:
          description: The name of the product or variant associated with the line item.
          type: string
          example: Midnight 16inch MacBook Pro
          nullable: true
          title: Name
        description:
          description: The description of the product or variant associated with the line item.
          type: string
          example: 'Powerful and portable, the MacBook Pro is perfect for professionals and creatives.'
          nullable: true
          title: Description
        options:
          type: array
          items:
            properties:
              id:
                description: A unique identifier for the option.
                type: string
                example: jkl012
                nullable: true
                title: Option identifier
              name:
                description: The name of the option.
                type: string
                example: Color
                nullable: true
                title: Option Name
              value:
                description: The value of the option.
                type: string
                example: Silver
                nullable: true
                title: Option Value
        quantity:
          description: The quantity of the product or variant associated with the line item.
          type: string
          example: '2'
          nullable: true
          title: Quantity
        unit_price:
          description: The unit price of the product or variant associated with the line item.
          type: string
          example: '19.99'
          nullable: true
          title: Unit price
        tax_rate:
          description: The tax rate applied to the product or variant associated with the line item.
          type: string
          example: '0.08'
          nullable: true
          title: Tax rate
        tax_amount:
          description: The total tax amount applied to the product or variant associated with the line item.
          type: string
          example: '1.6'
          nullable: true
          title: Tax amount
        is_refunded:
          description: Whether the line item has been refunded.
          type: boolean
          example: false
          nullable: true
          title: Is refunded
        refunded_amount:
          description: The amount of the line item that has been refunded.
          type: string
          example: '0'
          nullable: true
          title: Refunded amount
        refunded_quantity:
          description: The quantity of the line item that has been refunded.
          type: string
          example: '0'
          nullable: true
          title: Refunded quantity
        sub_total:
          description: 'The sub total for the product(s) or variant associated with the line item, excluding taxes and discounts.'
          type: string
          example: '43.18'
          nullable: true
          title: Sub total
        total_amount:
          description: 'The total amount for the product(s) or variant associated with the line item, including taxes and discounts.'
          type: string
          example: '43.18'
          nullable: true
          title: Total amount
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceDiscount'
      required:
        - name
        - quantity
        - total_amount
      title: Ecommerce Order Line Item
      x-apideck-schema-id: EcommerceOrderLineItem
      x-apideck-strict-any-of:
        - required:
            - id
        - required:
            - product_id
      x-apideck-strict-required:
        - name
        - quantity
        - total_amount
      x-apideck-weights:
        id: high
        product_id: medium
        variant_id: medium
        sku: medium
        name: critical
        description: medium
        options: medium
        quantity: critical
        unit_price: critical
        tax_rate: medium
        tax_amount: medium
        is_refunded: medium
        refunded_amount: medium
        refunded_quantity: medium
        sub_total: medium
        total_amount: critical
        discounts: medium
    EcommerceOrderStatus:
      description: Current status of the order.
      type: string
      example: active
      enum:
        - active
        - completed
        - cancelled
        - archived
        - unknown
        - other
      nullable: true
      title: Order Status
      x-apideck-enum-id: order.status
    EcommerceOrdersFilter:
      type: object
      properties:
        email:
          description: Customer email address to filter on
          type: string
          example: elon@musk.com
        customer_id:
          description: Customer id to filter on
          type: string
          example: '123'
        updated_since:
          description: Minimum date the order was last modified
          type: string
          example: '2020-09-30T07:43:32.000Z'
        created_since:
          description: Minimum date the order was created
          type: string
          example: '2020-09-30T07:43:32.000Z'
      example:
        email: elon@musk.com
        customer_id: '123'
        updated_since: '2020-09-30T07:43:32.000Z'
        created_since: '2020-09-30T07:43:32.000Z'
      additionalProperties: false
      x-apideck-schema-id: EcommerceOrdersFilter
    EcommerceProduct:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: The name of the product as it should be displayed to customers.
          type: string
          example: MacBook Pro
          nullable: true
          title: Product Name
        description:
          description: A detailed description of the product.
          type: string
          example: 'Powerful and portable, the MacBook Pro is perfect for professionals and creatives.'
          nullable: true
          title: Product Description
        status:
          description: The current status of the product (active or archived).
          type: string
          example: active
          enum:
            - active
            - archived
          nullable: true
          title: Product Status
          x-apideck-enum-id: ecommerce.products.status
        price:
          description: The price of the product.
          type: string
          example: '1999.99'
          nullable: true
          title: Product Price
        sku:
          description: The stock keeping unit of the product.
          type: string
          example: MBP123
          nullable: true
          title: Product SKU
        inventory_quantity:
          description: The quantity of the product in stock.
          type: string
          example: '10'
          nullable: true
          title: Inventory Quantity
        images:
          description: An array of image URLs for the product.
          type: array
          items:
            type: object
            x-apideck-strict-required:
              - url
            properties:
              id:
                $ref: '#/components/schemas/IdOrNull'
              url:
                description: The URL of an image of the product.
                type: string
                example: 'https://example.com/macbook-pro.jpg'
                nullable: true
                title: Image URL
          nullable: true
          title: Product Images
        weight:
          description: The weight of the product.
          type: string
          example: '1.25'
          nullable: true
          title: Product Weight
        weight_unit:
          description: The unit of measurement for the weight of the product.
          type: string
          example: lb
          nullable: true
          title: Weight Unit
        options:
          description: An array of options for the product.
          type: array
          items:
            type: object
            x-apideck-strict-required:
              - name
              - values
            properties:
              id:
                description: A unique identifier for the option of the product.
                type: string
                example: '1'
                nullable: true
                title: Option ID
              name:
                description: The name of the option for the product.
                type: string
                example: Color
                nullable: true
                title: Option Name
              values:
                type: array
                items:
                  type: string
                  example: Red
                  title: Option Values
                  description: The possible values of the option for the product.
                  nullable: true
          title: Product Options
        variants:
          type: array
          items:
            type: object
            x-apideck-strict-required:
              - id
              - name
              - price
              - options
            properties:
              id:
                description: A unique identifier for the variant of the product.
                type: string
                example: '1'
                nullable: true
                title: Variant ID
              name:
                description: 'The name for the variant, used for displaying to customers.'
                type: string
                example: Midnight 16inch MacBook Pro
                nullable: true
                title: Variant Name
              price:
                description: The price of the variant.
                type: string
                example: '1999.99'
                nullable: true
                title: Variant Price
              sku:
                description: The stock keeping unit of the variant.
                type: string
                example: MBP123-16GB-SILVER-13
                nullable: true
                title: Variant SKU
              inventory_quantity:
                description: The quantity of the variant in stock.
                type: string
                example: '5'
                nullable: true
                title: Inventory Quantity
              weight:
                description: The weight of the variant.
                type: string
                example: '1.25'
                nullable: true
                title: Weight
              weight_unit:
                description: The unit of measurement for the weight of the variant.
                type: string
                example: lb
                nullable: true
                title: Weight Unit
              options:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      description: A unique identifier for the option of the variant.
                      type: string
                      example: '1'
                      nullable: true
                      title: Option ID
                    name:
                      description: The name of the option for the variant.
                      type: string
                      example: Color
                      nullable: true
                      title: Option Name
                    value:
                      description: The value of the option for the variant.
                      type: string
                      example: Silver
                      nullable: true
                      title: Option Value
              images:
                type: array
                items:
                  type: object
                  x-apideck-strict-required:
                    - url
                  properties:
                    id:
                      $ref: '#/components/schemas/IdOrNull'
                    url:
                      description: The URL of an image of the variant.
                      type: string
                      example: 'https://example.com/macbook-pro.jpg'
                      nullable: true
                      title: Image URL
        tags:
          description: 'An array of tags for the product, used for organization and searching.'
          type: array
          items:
            type: string
            example: Apple
            nullable: true
          title: Product Tags
        categories:
          description: 'An array of categories for the product, used for organization and searching.'
          type: array
          items:
            type: object
            x-apideck-strict-required:
              - name
            properties:
              id:
                $ref: '#/components/schemas/IdOrNull'
              name:
                description: The name of the category.
                type: string
                example: Laptops
                nullable: true
                title: Product Category Name
          title: Product Categories
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      required:
        - id
      x-apideck-schema-id: EcommerceProduct
      x-apideck-strict-any-of:
        - required:
            - price
        - required:
            - variants
      x-apideck-strict-required:
        - name
      x-apideck-weights:
        id: critical
        name: critical
        description: medium
        status: medium
        price: critical
        sku: medium
        inventory_quantity: medium
        images: medium
        weight: medium
        weight_unit: medium
        options: medium
        variants: medium
        tags: medium
        categories: medium
        created_at: medium
        updated_at: medium
    EcommerceStore:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: The store's name
          type: string
          example: My Store
          nullable: true
          title: Store name
        store_url:
          description: The store's website URL
          type: string
          format: uri
          example: 'https://mybrand.com/shop'
          nullable: true
          pattern: '^https?://'
          title: Store URL
        admin_url:
          description: The store's admin login URL
          type: string
          format: uri
          example: 'https://mybrand.com/admin'
          nullable: true
          pattern: '^https?://'
          title: Store Admin URL
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      additionalProperties: false
      required:
        - id
      x-apideck-schema-id: EcommerceStore
    Gender:
      description: The gender represents the gender identity of a person.
      type: string
      example: male
      enum:
        - male
        - female
        - unisex
        - other
        - not_specified
      nullable: true
      title: Gender
      x-apideck-enum-id: genders
    GetEcommerceCustomerResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: shopify
        resource:
          description: Unified API resource name
          type: string
          example: customers
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/EcommerceCustomer'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetEcommerceCustomerResponse
    GetEcommerceCustomersResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: shopify
        resource:
          description: Unified API resource name
          type: string
          example: customers
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceCustomer'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetEcommerceCustomersResponse
    GetEcommerceOrderResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: shopify
        resource:
          description: Unified API resource name
          type: string
          example: orders
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/EcommerceOrder'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetEcommerceOrderResponse
    GetEcommerceOrdersResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: shopify
        resource:
          description: Unified API resource name
          type: string
          example: orders
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceOrder'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetEcommerceOrdersResponse
    GetProductResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: shopify
        resource:
          description: Unified API resource name
          type: string
          example: products
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/EcommerceProduct'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetProductResponse
    GetProductsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: shopify
        resource:
          description: Unified API resource name
          type: string
          example: products
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/EcommerceProduct'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetProductsResponse
    GetStoreResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: shopify
        resource:
          description: Unified API resource name
          type: string
          example: stores
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/EcommerceStore'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetStoreResponse
    IdOrNull:
      description: A unique identifier for an object.
      type: string
      example: '12345'
      nullable: true
      readOnly: true
      title: ID
    LinkedEcommerceCustomer:
      description: The customer this entity is linked to.
      type: object
      properties:
        id:
          description: The ID of the customer this entity is linked to.
          type: string
          example: '12345'
          nullable: true
          title: Customer ID
        name:
          description: Full name of the customer
          type: string
          example: John Doe
          nullable: true
          title: Full Name
        first_name:
          description: First name of the customer
          type: string
          example: John
          nullable: true
          title: First Name
        last_name:
          description: Last name of the customer
          type: string
          example: Doe
          nullable: true
          title: Last Name
        company_name:
          description: Company name of the customer
          type: string
          example: Acme Inc.
          nullable: true
          title: Company Name
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
      additionalProperties: false
      required:
        - id
      title: LinkedEcommerceCustomer
      x-apideck-schema-id: LinkedEcommerceCustomer
      x-apideck-strict-any-of:
        - required:
            - name
            - first_name
            - last_name
        - required:
            - company_name
      x-apideck-strict-required:
        - emails
      x-apideck-weights:
        id: critical
        first_name: medium
        last_name: medium
        company_name: medium
        emails: medium
        phone_numbers: medium
    LinkedEcommerceOrder:
      description: The order this entity is linked to.
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        total:
          description: The total amount of the order.
          type: string
          example: '199.99'
          nullable: true
          title: Order Total
        status:
          $ref: '#/components/schemas/EcommerceOrderStatus'
      additionalProperties: false
      title: LinkedEcommerceOrder
      x-apideck-schema-id: LinkedEcommerceOrder
      x-apideck-weights:
        id: critical
    PaymentUnit:
      description: Unit of measurement for employee compensation.
      type: string
      example: year
      enum:
        - hour
        - week
        - month
        - year
        - paycheck
        - other
      nullable: true
      title: Payment Unit
      x-apideck-enum-id: payment_unit
    PhotoUrl:
      description: The URL of the photo of a person.
      type: string
      example: 'https://unavatar.io/elon-musk'
      nullable: true
      title: Photo URL
    TrackingItem:
      description: Represents the tracking information associated with an ecommerce order.
      type: object
      properties:
        provider:
          description: The name or code of the carrier or shipping company that is handling the shipment.
          type: string
          example: UPS
          nullable: true
          title: Provider
        number:
          description: ' The tracking number associated with the shipment, which can be used to track the progress of the delivery.'
          type: string
          example: 1Z9999999999999999
          nullable: true
          title: Tracking number
        url:
          description: 'The URL of the carrier''s tracking page, which can be used to view detailed information about the shipment''s progress.'
          type: string
          example: 'https://www.ups.com/track?tracknum=1Z9999999999999999'
          nullable: true
          title: Tracking url
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      required:
        - provider
        - number
      title: Ecommerce Order Tracking Item
      x-apideck-schema-id: EcommerceOrderLineItem
      x-apideck-strict-required:
        - provider
        - number
      x-apideck-weights:
        provider: high
        number: critical
        url: medium
        updated_at: medium
    OrdersSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Orders
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
            - name
          x-apideck-enum-id: orders.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: OrdersSort
    CopyFolderRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: The name of the folder.
          type: string
          example: Documents
        parent_folder_id:
          $ref: '#/components/schemas/ParentFolderId'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - parent_folder_id
      x-apideck-schema-id: CopyFolderRequest
    CreateDriveGroupResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: DriveGroups
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateDriveGroupResponse
    CreateDriveResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: Drives
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateDriveResponse
    CreateFolderRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: The name of the folder.
          type: string
          example: Documents
        description:
          description: Optional description of the folder.
          type: string
          example: My Personal Documents
        parent_folder_id:
          $ref: '#/components/schemas/ParentFolderId'
        drive_id:
          description: ID of the drive to create the folder in.
          type: string
          example: '1234'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - name
        - parent_folder_id
      x-apideck-schema-id: CreateFolderRequest
    CreateFolderResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: undefined
        resource:
          description: Unified API resource name
          type: string
          example: Folders
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateFolderResponse
    CreateSharedLinkResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: dropbox
        resource:
          description: Unified API resource name
          type: string
          example: Shared Links
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateSharedLinkResponse
    CreateUploadSessionRequest:
      type: object
      properties:
        name:
          description: The name of the file.
          type: string
          example: Documents
        parent_folder_id:
          $ref: '#/components/schemas/ParentFolderId'
        drive_id:
          description: ID of the drive to upload to.
          type: string
          example: '1234'
        size:
          $ref: '#/components/schemas/FileSize'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - name
        - parent_folder_id
        - size
      x-apideck-schema-id: CreateUploadSessionRequest
    CreateUploadSessionResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: dropbox
        resource:
          description: Unified API resource name
          type: string
          example: UploadSessions
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateUploadSessionResponse
    DeleteDriveGroupResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: DriveGroups
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteDriveGroupResponse
    DeleteDriveResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: Drives
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteDriveResponse
    DeleteFileResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: files
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteFileResponse
    DeleteFolderResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: undefined
        resource:
          description: Unified API resource name
          type: string
          example: Folders
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteFolderResponse
    DeleteSharedLinkResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: dropbox
        resource:
          description: Unified API resource name
          type: string
          example: Shared Links
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteSharedLinkResponse
    DeleteUploadSessionResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: dropbox
        resource:
          description: Unified API resource name
          type: string
          example: UploadSessions
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteUploadSessionResponse
    Drive:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: The name of the drive
          type: string
          example: Project Resources
        description:
          $ref: '#/components/schemas/Description'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - id
        - name
      x-apideck-schema-id: Drive
      x-apideck-weights:
        id: critical
        name: critical
        updated_at: critical
        updated_by: edge-case
        created_at: critical
        created_by: edge-case
    DriveGroup:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: The name of the drive group
          type: string
          example: accounting
        display_name:
          description: The display name of the drive group
          type: string
          example: accounting
          nullable: true
        description:
          $ref: '#/components/schemas/Description'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - id
        - name
      x-apideck-schema-id: DriveGroup
      x-apideck-weights:
        id: critical
        name: critical
        updated_at: critical
        updated_by: edge-case
        created_at: critical
        created_by: edge-case
    DriveGroupsFilter:
      type: object
      properties:
        parent_group_id:
          description: ID of the drive group to filter on
          type: string
          example: '1234'
      additionalProperties: false
      x-apideck-schema-id: DriveGroupsFilter
    DrivesFilter:
      type: object
      properties:
        group_id:
          description: ID of the drive group to filter on
          type: string
          example: '1234'
      additionalProperties: false
      x-apideck-schema-id: DrivesFilter
    ExpiresAt:
      type: string
      format: date-time
      example: '2022-09-30T07:43:32.000Z'
      nullable: true
      readOnly: true
    FilesFilter:
      type: object
      properties:
        drive_id:
          description: ID of the drive to filter on
          type: string
          example: '1234'
        folder_id:
          description: ID of the folder to filter on. The root folder has an alias "root"
          type: string
          example: root
        shared:
          description: Only return files and folders that are shared
          type: boolean
          example: true
      additionalProperties: false
      x-apideck-schema-id: FilesFilter
    FileSize:
      description: The size of the file in bytes
      type: integer
      example: 1810673
      nullable: true
      x-apideck-schema-id: FileSize
    FilesSearch:
      type: object
      properties:
        query:
          description: The query to search for. May match across multiple fields.
          type: string
          example: logo jpg
        drive_id:
          description: ID of the drive to filter on
          type: string
          example: '1234'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      example:
        query: logo jpg
      additionalProperties: false
      required:
        - query
      x-apideck-schema-id: FilesSearch
    FilesSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Files
          type: string
          example: updated_at
          enum:
            - updated_at
            - name
          x-apideck-enum-id: files.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: updated_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: FilesSort
    FileType:
      description: 'The type of resource. Could be file, folder or url'
      type: string
      example: file
      enum:
        - file
        - folder
        - url
      nullable: true
      readOnly: true
      x-apideck-enum-id: files.type
      x-apideck-schema-id: FileType
    Folder:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: The name of the folder
          type: string
          example: Documents
        description:
          description: Optional description of the folder
          type: string
          example: My Personal Documents
          nullable: true
        path:
          description: The full path of the folder (includes the folder name)
          type: string
          example: /Personal/Documents
          nullable: true
          readOnly: true
        size:
          description: The size of the folder in bytes
          type: integer
          example: 1810673
          nullable: true
          readOnly: true
        owner:
          $ref: '#/components/schemas/Owner'
        parent_folders:
          description: 'The parent folders of the file, starting from the root'
          type: array
          items:
            $ref: '#/components/schemas/LinkedFolder'
        parent_folders_complete:
          description: Whether the list of parent folder is complete. Some connectors only return the direct parent of a folder
          type: boolean
          readOnly: true
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      additionalProperties: false
      required:
        - name
        - parent_folders
      x-apideck-schema-id: Folder
      x-apideck-weights:
        id: critical
        name: critical
        size: low
        parent_folders: high
        parent_folders_complete: critical
        updated_at: critical
        created_at: high
    GetDriveGroupResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: DriveGroups
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/DriveGroup'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetDriveGroupResponse
    GetDriveGroupsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: DriveGroups
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/DriveGroup'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetDriveGroupsResponse
    GetDriveResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: Drives
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Drive'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetDriveResponse
    GetDrivesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: Drives
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Drive'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetDrivesResponse
    GetFileResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: files
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UnifiedFile'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetFileResponse
    GetFilesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: files
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/UnifiedFile'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetFilesResponse
    GetFolderResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: undefined
        resource:
          description: Unified API resource name
          type: string
          example: Folders
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Folder'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetFolderResponse
    GetSharedLinkResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: dropbox
        resource:
          description: Unified API resource name
          type: string
          example: Shared Links
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/SharedLink'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetSharedLinkResponse
    GetSharedLinksResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: dropbox
        resource:
          description: Unified API resource name
          type: string
          example: Shared Links
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/SharedLink'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetSharedLinksResponse
    GetUploadSessionResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: dropbox
        resource:
          description: Unified API resource name
          type: string
          example: UploadSessions
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/UploadSession'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetUploadSessionResponse
    LinkedFolder:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: The name of the folder
          type: string
          example: Personal
          nullable: true
      required:
        - id
      x-apideck-schema-id: LinkedFolder
      x-apideck-weights:
        id: critical
    Owner:
      type: object
      properties:
        id:
          description: ID of the owner
          type: string
          example: '12345'
          readOnly: true
        email:
          description: Email of the owner
          type: string
          example: hello@apideck.com
          nullable: true
          readOnly: true
        name:
          description: Name of the owner
          type: string
          example: Elon Musk
          nullable: true
          readOnly: true
      readOnly: true
      x-apideck-schema-id: Owner
      x-apideck-weights:
        id: critical
    ParentFolderId:
      description: The parent folder to create the new file within. This can be an ID or a path depending on the downstream folder. Please see the connector section below to see downstream specific gotchas.
      type: string
      example: '1234'
      x-apideck-schema-id: ParentFolderId
    SharedLink:
      type: object
      properties:
        url:
          description: The URL that can be used to view the file.
          type: string
          example: 'https://www.box.com/s/vspke7y05sb214wjokpk'
          nullable: true
          readOnly: true
        download_url:
          description: The URL that can be used to download the file.
          type: string
          example: 'https://www.box.com/shared/static/rh935iit6ewrmw0unyul.jpeg'
          nullable: true
        target_id:
          description: The ID of the file or folder to link.
          type: string
          nullable: true
          writeOnly: true
        target:
          $ref: '#/components/schemas/SharedLinkTarget'
        scope:
          description: The scope of the shared link.
          type: string
          example: company
          enum:
            - public
            - company
          nullable: true
          x-apideck-enum-id: files.scope
        password_protected:
          description: Indicated if the shared link is password protected.
          type: boolean
          nullable: true
          readOnly: true
        password:
          description: Optional password for the shared link.
          type: string
          nullable: true
          writeOnly: true
        expires_at:
          $ref: '#/components/schemas/ExpiresAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - target_id
      x-apideck-schema-id: SharedLink
      x-apideck-weights:
        url: critical
        download_url: high
        target_id: critical
        target: critical
        scope: high
        password_protected: low
        password: low
        expires_at: high
        updated_at: medium
        created_at: medium
    SharedLinkTarget:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: The name of the file
          type: string
          example: sample.jpg
          nullable: true
        type:
          $ref: '#/components/schemas/FileType'
      additionalProperties: false
      readOnly: true
      required:
        - id
      x-apideck-schema-id: SharedLinkTarget
      x-apideck-weights:
        id: critical
    UnifiedFile:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        downstream_id:
          $ref: '#/components/schemas/DownstreamId'
        name:
          description: The name of the file
          type: string
          example: sample.jpg
          nullable: true
        description:
          description: Optional description of the file
          type: string
          example: A sample image
          nullable: true
        type:
          $ref: '#/components/schemas/FileType'
        path:
          description: The full path of the file or folder (includes the file name)
          type: string
          example: /Documents/sample.jpg
          nullable: true
        mime_type:
          description: The MIME type of the file.
          type: string
          example: image/jpeg
          nullable: true
        downloadable:
          description: Whether the current user can download this file
          type: boolean
        size:
          $ref: '#/components/schemas/FileSize'
        owner:
          $ref: '#/components/schemas/Owner'
        parent_folders:
          description: 'The parent folders of the file, starting from the root'
          type: array
          items:
            $ref: '#/components/schemas/LinkedFolder'
        parent_folders_complete:
          description: Whether the list of parent folders is complete. Some connectors only return the direct parent of a file
          type: boolean
        permissions:
          description: Permissions the current user has on this file.
          type: object
          properties:
            download:
              description: Whether the current user can download this file.
              type: boolean
        exportable:
          description: Whether the current file is exportable to other file formats. This property is relevant for proprietary file formats such as Google Docs or Dropbox Paper.
          type: boolean
        export_formats:
          description: The available file formats when exporting this file.
          type: array
          items:
            type: string
            example: application/pdf
            description: An available file format (typically MIME type) to export this file.
          example:
            - application/pdf
            - application/vnd.oasis.opendocument.presentation
            - text/plain
          nullable: true
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      additionalProperties: false
      required:
        - id
        - name
        - type
      x-apideck-schema-id: UnifiedFile
      x-apideck-weights:
        id: critical
        name: critical
        type: critical
        mime_type: high
        downloadable: high
        size: high
        parent_folders: high
        parent_folders_complete: critical
        updated_at: critical
        created_at: high
        downstream_id: edge-case
    UpdateDriveGroupResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: DriveGroups
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateDriveGroupResponse
    UpdateDriveResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: Drives
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateDriveResponse
    UpdateFileRequest:
      type: object
      properties:
        name:
          description: The name of the file.
          type: string
          example: New Name.pdf
        description:
          description: Optional description of the file.
          type: string
          example: Renamed PDF Document
        parent_folder_id:
          $ref: '#/components/schemas/ParentFolderId'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: UpdateFileRequest
    UpdateFileResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: google-drive
        resource:
          description: Unified API resource name
          type: string
          example: files
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateFileResponse
    UpdateFolderRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: The name of the folder.
          type: string
          example: Documents
        description:
          description: Optional description of the folder.
          type: string
          example: My Personal Documents
        parent_folder_id:
          $ref: '#/components/schemas/ParentFolderId'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: UpdateFolderRequest
    UpdateFolderResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: undefined
        resource:
          description: Unified API resource name
          type: string
          example: Folders
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateFolderResponse
    UpdateSharedLinkResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: dropbox
        resource:
          description: Unified API resource name
          type: string
          example: Shared Links
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateSharedLinkResponse
    UploadSession:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        success:
          description: Indicates if the upload session was completed successfully.
          type: boolean
          example: true
          readOnly: true
        part_size:
          description: Size in bytes of each part of the file that you will upload. Uploaded parts need to be this size for the upload to be successful.
          type: number
          example: 1000000
          readOnly: true
        parallel_upload_supported:
          description: Indicates if parts of the file can uploaded in parallel.
          type: boolean
          example: true
          readOnly: true
        uploaded_byte_range:
          description: The range of bytes that was successfully uploaded.
          type: string
          example: 0-42
          readOnly: true
        expires_at:
          $ref: '#/components/schemas/ExpiresAt'
      additionalProperties: false
      x-apideck-schema-id: UploadSession
      x-apideck-weights:
        id: critical
        success: critical
        part_size: critical
        parallel_upload_supported: critical
        uploaded_byte_range: low
        expires_at: medium
    Benefit:
      type: object
      properties:
        name:
          description: The name of the benefit.
          type: string
          example: Health Insurance
          nullable: true
        employee_deduction:
          description: The amount deducted for benefit.
          type: number
          example: 142.94
          nullable: true
        employer_contribution:
          description: The amount of employer contribution.
          type: number
          example: 141.14
          nullable: true
      x-apideck-schema-id: Benefit
      x-apideck-weights:
        name: critical
        employee_deduction: high
        employer_contribution: high
    Birthday:
      description: The date of birth of the person.
      type: string
      format: date
      example: '2000-08-12'
      nullable: true
      title: Birth Date
    CompanyId:
      description: The unique identifier of the company.
      type: string
      example: '23456'
      nullable: true
      title: Company ID
    Compensation:
      type: object
      properties:
        employee_id:
          $ref: '#/components/schemas/IdOrNull'
        net_pay:
          description: The employee's net pay. Only available when payroll has been processed
          type: number
          example: 2199.93
          nullable: true
        gross_pay:
          description: The employee's gross pay. Only available when payroll has been processed
          type: number
          example: 3000
          nullable: true
        taxes:
          description: An array of employer and employee taxes for the pay period.
          type: array
          items:
            $ref: '#/components/schemas/Tax'
          nullable: true
        deductions:
          description: An array of employee deductions for the pay period.
          type: array
          items:
            $ref: '#/components/schemas/Deduction'
          nullable: true
        benefits:
          description: An array of employee benefits for the pay period.
          type: array
          items:
            $ref: '#/components/schemas/Benefit'
          nullable: true
      additionalProperties: false
      required:
        - employee_id
      x-apideck-schema-id: Compensation
      x-apideck-weights:
        employee_id: critical
        net_pay: high
        gross_pay: critical
        taxes: high
        deductions: high
        benefits: high
    Country:
      description: Country code according to ISO 3166-1 alpha-2.
      type: string
      example: US
      maxLength: 2
      minLength: 2
      nullable: true
      title: Country Code
    CreateDepartmentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: workday
        resource:
          description: Unified API resource name
          type: string
          example: Departments
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateDepartmentResponse
    CreateEmployeeResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sage-hr
        resource:
          description: Unified API resource name
          type: string
          example: Employees
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateEmployeeResponse
    CreateHrisCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: undefined
        resource:
          description: Unified API resource name
          type: string
          example: Companies
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateHrisCompanyResponse
    CreateTimeOffRequestResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: bamboohr
        resource:
          description: Unified API resource name
          type: string
          example: time-off-requests
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeceasedOn:
      description: The date the person deceased.
      type: string
      format: date
      example: '2000-08-12'
      nullable: true
      title: Deceased Date
    Deduction:
      type: object
      properties:
        name:
          description: The name of the deduction.
          type: string
          example: Company Car
          nullable: true
        amount:
          description: The amount deducted.
          type: number
          example: 10.97
          nullable: true
      x-apideck-schema-id: Deduction
      x-apideck-weights:
        name: critical
        amount: critical
    DeleteDepartmentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: workday
        resource:
          description: Unified API resource name
          type: string
          example: Departments
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteDepartmentResponse
    DeleteEmployeeResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sage-hr
        resource:
          description: Unified API resource name
          type: string
          example: Employees
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteEmployeeResponse
    DeleteHrisCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: undefined
        resource:
          description: Unified API resource name
          type: string
          example: Companies
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteHrisCompanyResponse
    DeleteTimeOffRequestResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: bamboohr
        resource:
          description: Unified API resource name
          type: string
          example: time-off-requests
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    DeprecatedDepartment:
      description: 'The department the person is currently in. [Deprecated](https://developers.apideck.com/changelog) in favor of the dedicated department_id and department_name field.'
      type: string
      example: R&D
      deprecated: true
      nullable: true
      title: Department
    Employee:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/WritableId'
        first_name:
          $ref: '#/components/schemas/FirstName'
        last_name:
          $ref: '#/components/schemas/LastName'
        middle_name:
          $ref: '#/components/schemas/MiddleName'
        display_name:
          description: 'The name used to display the employee, often a combination of their first and last names.'
          type: string
          example: Technoking
          nullable: true
          title: Display name
        preferred_name:
          description: 'The name the employee prefers to be addressed by, which may be different from their legal name.'
          type: string
          example: Elon Musk
          nullable: true
          title: Preferred name
        initials:
          $ref: '#/components/schemas/Initials'
        salutation:
          $ref: '#/components/schemas/Salutation'
        title:
          $ref: '#/components/schemas/Title'
        marital_status:
          description: The marital status of the employee.
          type: string
          example: married
          nullable: true
          title: Marital status
        partner:
          $ref: '#/components/schemas/Person'
        division:
          $ref: '#/components/schemas/Division'
        division_id:
          description: Unique identifier of the division this employee belongs to.
          type: string
          example: '12345'
          nullable: true
          title: Division ID
        department:
          $ref: '#/components/schemas/DeprecatedDepartment'
        department_id:
          description: Unique identifier of the department ID this employee belongs to.
          type: string
          example: '12345'
          nullable: true
          title: Department ID
        department_name:
          description: Name of the department this employee belongs to.
          type: string
          example: '12345'
          nullable: true
          title: Department Name
        team:
          $ref: '#/components/schemas/Team'
        company_id:
          $ref: '#/components/schemas/CompanyId'
        company_name:
          $ref: '#/components/schemas/CompanyName'
        employment_start_date:
          description: A Start Date is the date that the employee started working at the company
          type: string
          example: '2021-10-26'
          nullable: true
          title: Employee start date
        employment_end_date:
          description: An End Date is the date that the employee ended working at the company
          type: string
          example: '2028-10-26'
          nullable: true
          title: Employee end date
        leaving_reason:
          description: The reason because the employment ended.
          type: string
          example: resigned
          enum:
            - dismissed
            - resigned
            - redundancy
            - other
          nullable: true
          x-apideck-enum-id: employees.leaving_reason
        employee_number:
          $ref: '#/components/schemas/EmployeeNumber'
        employment_status:
          $ref: '#/components/schemas/EmploymentStatus'
        employment_role:
          type: object
          properties:
            type:
              description: The type of employment relationship the employee has with the organization.
              type: string
              enum:
                - contractor
                - employee
                - freelance
                - temp
                - internship
                - other
              nullable: true
              title: Employment type
              x-apideck-enum-id: employees.employment_role.type
            sub_type:
              description: The work schedule of the employee.
              type: string
              enum:
                - full_time
                - part_time
                - hourly
                - other
                - not_specified
              nullable: true
              title: Employment sub type
              x-apideck-enum-id: employees.employment_role.sub_type
          x-apideck-weights:
            type: critical
            sub_type: medium
        ethnicity:
          description: The ethnicity of the employee
          type: string
          example: African American
          nullable: true
        manager:
          type: object
          additionalProperties: false
          properties:
            id:
              $ref: '#/components/schemas/WritableId'
            name:
              description: 'The name of the manager, often a combination of their first and last names.'
              type: string
              example: Elon Musk
              nullable: true
              title: Manager name
            first_name:
              $ref: '#/components/schemas/FirstName'
            last_name:
              $ref: '#/components/schemas/LastName'
            email:
              description: The email address of the manager.
              type: string
              format: email
              example: elon@musk.com
              nullable: true
              title: Email address
            employment_status:
              $ref: '#/components/schemas/EmploymentStatus'
          x-apideck-weights:
            id: critical
            name: medium
            first_name: medium
            last_name: medium
            email: medium
            employment_status: low
        direct_reports:
          description: Direct reports is an array of ids that reflect the individuals in an organizational hierarchy who are directly supervised by this specific employee.
          type: array
          items:
            type: string
          example:
            - a0d636c6-43b3-4bde-8c70-85b707d992f4
            - a98lfd96-43b3-4bde-8c70-85b707d992e6
          nullable: true
          title: Direct reports
        social_security_number:
          $ref: '#/components/schemas/SocialSecurityNumber'
        birthday:
          $ref: '#/components/schemas/Birthday'
        deceased_on:
          $ref: '#/components/schemas/DeceasedOn'
        country_of_birth:
          $ref: '#/components/schemas/Country'
        description:
          $ref: '#/components/schemas/Description'
        gender:
          $ref: '#/components/schemas/Gender'
        pronouns:
          $ref: '#/components/schemas/Pronouns'
        preferred_language:
          $ref: '#/components/schemas/Language'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Language'
        nationalities:
          type: array
          items:
            $ref: '#/components/schemas/Nationality'
        photo_url:
          $ref: '#/components/schemas/PhotoUrl'
        timezone:
          $ref: '#/components/schemas/Timezone'
        source:
          description: 'When the employee is imported as a new hire, this field indicates what system (e.g. the name of the ATS) this employee was imported from.'
          type: string
          example: lever
          nullable: true
          title: Source
        source_id:
          description: Unique identifier of the employee in the system this employee was imported from (e.g. the ID in the ATS).
          type: string
          example: '12345'
          nullable: true
          title: Source ID
        record_url:
          $ref: '#/components/schemas/RecordUrl'
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeJob'
          nullable: true
        compensations:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeCompensation'
          nullable: true
        works_remote:
          description: Indicates if the employee works from a remote location.
          type: boolean
          example: true
          nullable: true
          title: Remote
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        social_links:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        bank_accounts:
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
        tax_code:
          type: string
          example: '1111'
          nullable: true
          title: Tax Code
        tax_id:
          type: string
          example: 234-32-0000
          nullable: true
          title: Tax ID
        dietary_preference:
          description: Indicate the employee's dietary preference.
          type: string
          example: Veggie
          nullable: true
          title: Dietary preference
        food_allergies:
          description: Indicate the employee's food allergies.
          type: array
          items:
            type: string
          example:
            - No allergies
          nullable: true
          title: Food allergies
        probation_period:
          type: object
          properties:
            start_date:
              description: The date that the employee started their probation period at the company.
              type: string
              format: date
              example: '2021-10-01'
              nullable: true
              title: Probation start date
            end_date:
              description: The date that the employee ended their probation period at the company.
              type: string
              format: date
              example: '2021-11-28'
              nullable: true
              title: Probation end date
          title: Probation period
        tags:
          $ref: '#/components/schemas/Tags'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        row_version:
          $ref: '#/components/schemas/RowVersion'
        deleted:
          $ref: '#/components/schemas/Deleted'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: Employee
      x-apideck-weights:
        id: medium
        first_name: critical
        last_name: critical
        middle_name: medium
        display_name: edge-case
        preferred_name: medium
        initials: low
        salutation: medium
        title: critical
        marital_status: medium
        partner: low
        division: medium
        division_id: low
        department: low
        department_id: critical
        department_name: low
        team: critical
        company_id: critical
        company_name: medium
        employment_start_date: critical
        employment_end_date: critical
        leaving_reason: edge-case
        employee_number: critical
        employment_status: critical
        employment_role: critical
        manager: critical
        ethnicity: critical
        gender: critical
        direct_reports: edge-case
        social_security_number: edge-case
        birthday: critical
        deceased_on: low
        country_of_birth: high
        description: edge-case
        pronouns: medium
        preferred_language: high
        languages: low
        nationalities: high
        photo_url: medium
        timezone: low
        source: edge-case
        source_id: edge-case
        jobs: critical
        record_url: low
        compensations: critical
        works_remote: low
        addresses: critical
        phone_numbers: critical
        emails: critical
        custom_fields: critical
        social_links: edge-case
        bank_accounts: high
        tax_code: edge-case
        tax_id: edge-case
        dietary_preference: edge-case
        food_allergies: edge-case
        tags: low
        probation_period: low
        row_version: edge-case
        deleted: medium
        updated_by: edge-case
        created_by: edge-case
        updated_at: high
        created_at: medium
    EmployeeCompensation:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdOrNull'
        job_id:
          description: The ID of the job to which the compensation belongs.
          type: string
          example: '12345'
          nullable: true
          readOnly: true
          title: Job ID
        rate:
          description: The amount paid per payment unit.
          type: number
          example: 72000
          nullable: true
          readOnly: false
          title: Rate
        payment_unit:
          $ref: '#/components/schemas/PaymentUnit'
        currency:
          $ref: '#/components/schemas/Currency'
        flsa_status:
          description: The FLSA status for this compensation.
          type: string
          enum:
            - exempt
            - salaried-nonexempt
            - nonexempt
            - owner
            - other
          nullable: true
          readOnly: false
          x-apideck-enum-id: employees.compensations.flsa_status
        effective_date:
          description: The date on which a change to an employee's compensation takes effect.
          type: string
          example: '2020-08-12'
          nullable: true
          readOnly: false
          title: Effective date
        payment_frequency:
          $ref: '#/components/schemas/PaymentFrequency'
      example:
        id: '3404301363494309004'
        job_id: '3490439050957906679'
        rate: 50
        payment_unit: hour
        flsa_status: nonexempt
        effective_date: '2021-06-11'
      title: compensation
      x-apideck-strict-required:
        - rate
        - currency
        - payment_unit
      x-apideck-weights:
        id: critical
        job_id: medium
        rate: high
        payment_unit: medium
        currency: high
        flsa_status: edge-case
        effective_date: low
        payment_frequency: medium
    EmployeeJob:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdOrNull'
        employee_id:
          $ref: '#/components/schemas/IdOrNull'
        title:
          $ref: '#/components/schemas/Title'
        role:
          $ref: '#/components/schemas/JobRole'
        start_date:
          description: The date on which the employee starts working in their current job role.
          type: string
          format: date
          example: '2020-08-12'
          nullable: true
          title: The start date of the job.
        end_date:
          description: The date on which the employee leaves or is expected to leave their current job role.
          type: string
          format: date
          example: '2020-08-12'
          nullable: true
          title: The end date of the job.
        compensation_rate:
          description: The rate of pay for the employee in their current job role.
          type: number
          example: 72000
          nullable: true
          title: The compensation rate of the job.
        currency:
          $ref: '#/components/schemas/Currency'
        payment_unit:
          $ref: '#/components/schemas/PaymentUnit'
        hired_at:
          description: The date on which the employee was hired by the organization
          type: string
          format: date
          example: '2020-08-12'
          nullable: true
          title: Hired date
        is_primary:
          description: Indicates whether this the employee's primary job.
          type: boolean
          example: true
          nullable: true
          title: Primary
        is_manager:
          description: Indicates whether this the employee has a manager role.
          type: boolean
          example: true
          nullable: true
          title: Manager
        status:
          description: Indicates the status of the job.
          type: string
          example: active
          enum:
            - active
            - inactive
            - other
          nullable: true
          title: Status
          x-apideck-enum-id: jobs.status
        location:
          $ref: '#/components/schemas/Address'
      title: job
      x-apideck-schema-id: EmployeeJob
      x-apideck-weights:
        id: critical
        employee_id: edge-case
        title: critical
        role: medium
        start_date: high
        end_date: high
        compensation_rate: medium
        currency: medium
        payment_unit: medium
        hired_at: medium
        is_primary: medium
        status: medium
        location: medium
    EmployeeId:
      description: ID of the employee
      type: string
      example: '12345'
      nullable: true
      title: Employee ID
    EmployeeNumber:
      description: 'An Employee Number, Employee ID or Employee Code, is a unique number that has been assigned to each individual staff member within a company.'
      type: string
      example: 123456-AB
      nullable: true
      title: Employee number
    EmployeePayroll:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdOrNull'
        employee_id:
          $ref: '#/components/schemas/EmployeeId'
        company_id:
          $ref: '#/components/schemas/CompanyId'
        processed:
          description: Whether or not the payroll has been successfully processed. Note that processed payrolls cannot be updated.
          type: boolean
          example: false
          nullable: true
        processed_date:
          description: The date the payroll was processed.
          type: string
          example: '2022-04-08'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        check_date:
          description: The date on which employees will be paid for the payroll.
          type: string
          example: '2022-04-08'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        start_date:
          description: 'The start date, inclusive, of the pay period.'
          type: string
          example: '2022-04-08'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        end_date:
          description: 'The end date, inclusive, of the pay period.'
          type: string
          example: '2022-04-21'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        totals:
          $ref: '#/components/schemas/PayrollTotals'
        compensations:
          description: An array of compensations for the payroll.
          type: array
          items:
            $ref: '#/components/schemas/Compensation'
      additionalProperties: false
      required:
        - id
        - processed
        - check_date
        - start_date
        - end_date
      x-apideck-schema-id: EmployeePayroll
      x-apideck-weights:
        id: critical
        employee_id: critical
        company_id: high
        processed: critical
        processed_date: medium
        check_date: critical
        start_date: critical
        end_date: critical
        totals: high
        compensations: medium
    EmployeeSchedules:
      type: object
      properties:
        employee:
          $ref: '#/components/schemas/Employee'
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
          nullable: true
      x-apideck-schema-id: EmployeeSchedules
    EmployeesFilter:
      type: object
      properties:
        company_id:
          description: Company ID to filter on
          type: string
          example: '1234'
        email:
          description: Email to filter on
          type: string
          example: elon@tesla.com
        first_name:
          description: First Name to filter on
          type: string
          example: Elon
        title:
          description: Job title to filter on
          type: string
          example: Manager
        last_name:
          description: Last Name to filter on
          type: string
          example: Musk
        manager_id:
          description: Manager id to filter on
          type: string
          example: '1234'
        employment_status:
          description: Employment status to filter on
          type: string
          example: active
          enum:
            - active
            - inactive
            - terminated
            - other
        employee_number:
          description: Employee number to filter on
          type: string
          example: 123456-AB
        department_id:
          description: ID of the department to filter on
          type: string
          example: '1234'
      example:
        company_id: '1234'
        email: elon@tesla.com
        first_name: Elon
        last_name: Musk
        title: Manager
        manager_id: '1234'
        employment_status: active
        employee_number: 123456-AB
        department_id: '1234'
      additionalProperties: false
      x-apideck-schema-id: EmployeesFilter
    EmployeesOneFilter:
      type: object
      properties:
        company_id:
          description: Company ID to filter on
          type: string
          example: '1234'
      example:
        company_id: '1234'
      additionalProperties: false
      x-apideck-schema-id: EmployeesOneFilter
    EmployeesSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Employees
          type: string
          example: created_at
          enum:
            - first_name
            - last_name
            - created_at
            - updated_at
          x-apideck-enum-id: Employees.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: EmployeesSort
    EmploymentStatus:
      description: 'The employment status of the employee, indicating whether they are currently employed, inactive, terminated, or in another status.'
      type: string
      example: active
      enum:
        - active
        - inactive
        - terminated
        - other
      nullable: true
      title: Employment status
      x-apideck-enum-id: employees.employment_status
    GetDepartmentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: workday
        resource:
          description: Unified API resource name
          type: string
          example: Departments
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Department'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetDepartmentResponse
    GetDepartmentsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: workday
        resource:
          description: Unified API resource name
          type: string
          example: Departments
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Department'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetDepartmentsResponse
    GetEmployeePayrollResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: undefined
        resource:
          description: Unified API resource name
          type: string
          example: Companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/EmployeePayroll'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetEmployeePayrollResponse
    GetEmployeePayrollsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sage-hr
        resource:
          description: Unified API resource name
          type: string
          example: Employees
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayroll'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetEmployeePayrollsResponse
    GetEmployeeResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sage-hr
        resource:
          description: Unified API resource name
          type: string
          example: Employees
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Employee'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetEmployeeResponse
    GetEmployeeSchedulesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sage-hr
        resource:
          description: Unified API resource name
          type: string
          example: Employees
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          $ref: '#/components/schemas/EmployeeSchedules'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetEmployeeSchedulesResponse
    GetEmployeesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sage-hr
        resource:
          description: Unified API resource name
          type: string
          example: Employees
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetEmployeesResponse
    GetHrisCompaniesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: undefined
        resource:
          description: Unified API resource name
          type: string
          example: Companies
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/HrisCompany'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetHrisCompaniesResponse
    GetHrisCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: undefined
        resource:
          description: Unified API resource name
          type: string
          example: Companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/HrisCompany'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetHrisCompanyResponse
    GetPayrollResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: undefined
        resource:
          description: Unified API resource name
          type: string
          example: Companies
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Payroll'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetPayrollResponse
    GetPayrollsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sage-hr
        resource:
          description: Unified API resource name
          type: string
          example: Employees
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Payroll'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetPayrollsResponse
    GetTimeOffRequestResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: bamboohr
        resource:
          description: Unified API resource name
          type: string
          example: time-off-requests
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/TimeOffRequest'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    GetTimeOffRequestsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: bamboohr
        resource:
          description: Unified API resource name
          type: string
          example: time-off-requests
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffRequest'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    HrisCompany:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        legal_name:
          type: string
          example: SpaceX
          minLength: 1
          nullable: true
        display_name:
          type: string
          example: SpaceX
          minLength: 1
          nullable: true
        subdomain:
          type: string
          example: company
          minLength: 1
          nullable: true
        status:
          type: string
          example: active
          enum:
            - active
            - inactive
            - trial
            - other
          x-apideck-enum-id: companies.status
        company_number:
          description: 'An Company Number, Company ID or Company Code, is a unique number that has been assigned to each company.'
          type: string
          example: 123456-AB
          nullable: true
          title: Company number
        currency:
          $ref: '#/components/schemas/Currency'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        websites:
          type: array
          items:
            $ref: '#/components/schemas/Website'
        debtor_id:
          type: string
          example: '12345'
          minLength: 1
          nullable: true
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        deleted:
          type: boolean
          example: false
          readOnly: true
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - legal_name
      x-apideck-schema-id: HrisCompany
      x-apideck-weights:
        id: critical
        legal_name: critical
        subdomain: low
        company_number: high
        updated_at: high
        debtor_id: edge-case
        currency: low
    JobRole:
      description: The position and responsibilities of the person within the organization.
      type: string
      example: Sales
      nullable: true
      title: Job role
    Nationality:
      description: 'The nationality of the person, represented as a two-letter country code according to ISO 3166-1 alpha-2.'
      type: string
      example: US
      nullable: true
      title: Nationality
    PaymentFrequency:
      description: Frequency of employee compensation.
      type: string
      example: monthly
      enum:
        - weekly
        - biweekly
        - monthly
        - pro-rata
        - other
      nullable: true
      title: Payment Frequency
      x-apideck-enum-id: payment_frequency
    Payroll:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdOrNull'
        company_id:
          $ref: '#/components/schemas/CompanyId'
        processed:
          description: Whether or not the payroll has been successfully processed. Note that processed payrolls cannot be updated.
          type: boolean
          example: false
          nullable: true
        processed_date:
          description: The date the payroll was processed.
          type: string
          example: '2022-04-08'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        check_date:
          description: The date on which employees will be paid for the payroll.
          type: string
          example: '2022-04-08'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        start_date:
          description: 'The start date, inclusive, of the pay period.'
          type: string
          example: '2022-04-08'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        end_date:
          description: 'The end date, inclusive, of the pay period.'
          type: string
          example: '2022-04-21'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        totals:
          $ref: '#/components/schemas/PayrollTotals'
        compensations:
          description: An array of compensations for the payroll.
          type: array
          items:
            $ref: '#/components/schemas/Compensation'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
      additionalProperties: false
      required:
        - id
        - processed
        - check_date
        - start_date
        - end_date
      x-apideck-schema-id: Payroll
      x-apideck-weights:
        id: critical
        company_id: high
        processed: critical
        processed_date: medium
        check_date: critical
        start_date: critical
        end_date: critical
        totals: high
        compensations: medium
    PayrollTotals:
      description: The overview of the payroll totals.
      type: object
      properties:
        company_debit:
          description: The total company debit for the payroll.
          type: number
          example: 27992.49
          nullable: true
        tax_debit:
          description: The total tax debit for the payroll.
          type: number
          example: 8655.32
          nullable: true
        check_amount:
          description: The total check amount for the payroll.
          type: number
          example: 27966.23
          nullable: true
        net_pay:
          description: The net pay amount for the payroll.
          type: number
          example: 19337.17
          nullable: true
        gross_pay:
          description: The gross pay amount for the payroll.
          type: number
          example: 27966.23
          nullable: true
        employer_taxes:
          description: The total amount of employer paid taxes for the payroll.
          type: number
          example: 2038.93
          nullable: true
        employee_taxes:
          description: The total amount of employee paid taxes for the payroll.
          type: number
          example: 6616.39
          nullable: true
        employer_benefit_contributions:
          description: The total amount of company contributed benefits for the payroll.
          type: number
          example: 0
          nullable: true
        employee_benefit_deductions:
          description: The total amount of employee deducted benefits for the payroll.
          type: number
          example: 0
          nullable: true
      x-apideck-schema-id: PayrollTotals
    PayrollsFilter:
      type: object
      properties:
        start_date:
          description: Return payrolls whose pay period is after the start date
          type: string
          example: '2022-04-08'
          pattern: '^\d{4}-\d{2}-\d{2}$'
        end_date:
          description: Return payrolls whose pay period is before the end date
          type: string
          example: '2022-04-21'
          pattern: '^\d{4}-\d{2}-\d{2}$'
      example:
        start_date: '2022-04-08'
        end_date: '2022-04-21'
      additionalProperties: false
      x-apideck-schema-id: PayrollsFilter
    Person:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdOrNull'
        first_name:
          $ref: '#/components/schemas/FirstName'
        last_name:
          $ref: '#/components/schemas/LastName'
        middle_name:
          $ref: '#/components/schemas/MiddleName'
        gender:
          $ref: '#/components/schemas/Gender'
        initials:
          description: Initials of the person
          type: string
          example: EM
          nullable: true
          title: Initials
        birthday:
          description: Date of birth
          type: string
          format: date
          example: '2000-08-12'
          nullable: true
        deceased_on:
          description: Date of death
          type: string
          format: date
          example: '2000-08-12'
          nullable: true
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
      additionalProperties: false
      title: Person
      x-apideck-schema-id: Person
      x-apideck-weights:
        id: low
        first_name: critical
        last_name: critical
        middle_name: low
        gender: medium
        initials: medium
        birthday: low
        deceased_on: low
    Pronouns:
      description: The preferred pronouns of the person.
      type: string
      example: 'she,her'
      nullable: true
      title: Pronouns
    PolicyType:
      description: The policy type of the time off request
      type: string
      example: sick
    Salutation:
      description: 'A formal salutation for the person. For example, ''Mr'', ''Mrs'''
      type: string
      example: Mr
      nullable: true
    Schedule:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        start_date:
          description: 'The start date, inclusive, of the schedule period.'
          type: string
          example: '2022-04-08'
          pattern: '^\d{4}-\d{2}-\d{2}$'
        end_date:
          description: 'The end date, inclusive, of the schedule period.'
          type: string
          example: '2022-04-21'
          pattern: '^\d{4}-\d{2}-\d{2}$'
        work_pattern:
          type: object
          properties:
            odd_weeks:
              type: object
              properties:
                hours_monday:
                  type: number
                  format: double
                  example: 8
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_tuesday:
                  type: number
                  format: double
                  example: 8
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_wednesday:
                  type: number
                  format: double
                  example: 4
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_thursday:
                  type: number
                  format: double
                  example: 7.5
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_friday:
                  type: number
                  format: double
                  example: 4
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_saturday:
                  type: number
                  format: double
                  example: 0
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_sunday:
                  type: number
                  format: double
                  example: 0
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
            even_weeks:
              type: object
              properties:
                hours_monday:
                  type: number
                  format: double
                  example: 8
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_tuesday:
                  type: number
                  format: double
                  example: 8
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_wednesday:
                  type: number
                  format: double
                  example: 4
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_thursday:
                  type: number
                  format: double
                  example: 7.5
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_friday:
                  type: number
                  format: double
                  example: 4
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_saturday:
                  type: number
                  format: double
                  example: 0
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
                hours_sunday:
                  type: number
                  format: double
                  example: 0
                  maximum: 24
                  minimum: 0
                  nullable: false
                  pattern: '^(\d{1,2})(\.\d{1,2})?$'
                  readOnly: false
      additionalProperties: false
      required:
        - id
        - start_date
        - end_date
        - work_pattern
      x-apideck-schema-id: Schedule
      x-apideck-weights:
        id: critical
        start_date: critical
        end_date: critical
        work_pattern: critical
    SocialSecurityNumber:
      description: A unique identifier assigned by the government. This field is considered sensitive information and may be subject to special security and privacy restrictions.
      type: string
      example: '123456789'
      nullable: true
      title: Social Security Number
    Tax:
      type: object
      properties:
        name:
          description: The name of the tax.
          type: string
          example: CA State Income Tax
          nullable: true
        employer:
          description: Paid by employer.
          type: boolean
          example: false
          nullable: true
        amount:
          description: The amount of the tax.
          type: number
          example: 1.97
          nullable: true
      x-apideck-schema-id: Tax
      x-apideck-weights:
        name: high
        employer: high
        amount: high
    Team:
      description: The team the person is currently in.
      type: object
      properties:
        id:
          description: The unique identifier of the team.
          type: string
          example: '1234'
          nullable: true
        name:
          description: The name of the team.
          type: string
          example: Full Stack Engineers
          nullable: true
      additionalProperties: false
      nullable: true
      x-apideck-schema-id: Team
    TimeOffRequest:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        employee_id:
          $ref: '#/components/schemas/EmployeeId'
        policy_id:
          description: ID of the policy
          type: string
          example: '12345'
          nullable: true
          title: Policy ID
        status:
          description: The status of the time off request.
          type: string
          example: approved
          enum:
            - requested
            - approved
            - declined
            - cancelled
            - deleted
            - other
          nullable: true
          title: Status
          x-apideck-enum-id: time-off-requests.status
        description:
          description: Description of the time off request.
          type: string
          example: Enjoying some sun.
          nullable: true
          title: Description
        start_date:
          description: The start date of the time off request.
          type: string
          example: '2022-04-01'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        end_date:
          description: The end date of the time off request.
          type: string
          example: '2022-04-01'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        request_date:
          description: The date the request was made.
          type: string
          example: '2022-03-21'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        request_type:
          description: The type of request
          type: string
          example: vacation
          enum:
            - vacation
            - sick
            - personal
            - jury_duty
            - volunteer
            - bereavement
            - other
          nullable: true
          x-apideck-enum-id: time-off-requests.type
        approval_date:
          description: The date the request was approved
          type: string
          example: '2022-03-21'
          nullable: true
          pattern: '^\d{4}-\d{2}-\d{2}$'
        units:
          description: 'The unit of time off requested. Possible values include: `hours`, `days`, or `other`.'
          type: string
          example: hours
          enum:
            - days
            - hours
            - other
          nullable: true
          x-apideck-enum-id: time-off-requests.units
        amount:
          description: The amount of time off requested.
          type: number
          example: 3.5
          nullable: true
        day_part:
          description: The day part of the time off request.
          type: string
          example: morning
          nullable: true
        notes:
          type: object
          properties:
            employee:
              type: string
              example: Relaxing on the beach for a few hours.
              nullable: true
              title: Employee note
            manager:
              type: string
              example: Enjoy!
              nullable: true
              title: Manager note
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          $ref: '#/components/schemas/UpdatedBy'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
        policy_type:
          $ref: '#/components/schemas/PolicyType'
      additionalProperties: false
      x-apideck-weights:
        id: high
        employee_id: high
        policy_id: low
        status: high
        description: medium
        start_date: high
        end_date: high
        request_date: medium
        request_type: medium
        approval_date: medium
        units: medium
        amount: medium
        notes: low
        updated_by: edge-case
        created_by: edge-case
        updated_at: medium
        created_at: medium
        policy_type: edge-case
        day_part: edge-case
    TimeOffRequestsFilter:
      type: object
      properties:
        start_date:
          description: Start date
          type: string
          example: '2022-04-08'
          pattern: '^\d{4}-\d{2}-\d{2}$'
        end_date:
          description: End date
          type: string
          example: '2022-04-21'
          pattern: '^\d{4}-\d{2}-\d{2}$'
        updated_since:
          description: Minimum date the time off request was last created or modified
          type: string
          example: '2020-09-30T07:43:32.000Z'
        employee_id:
          description: Employee ID
          type: string
          example: '1234'
        time_off_request_status:
          description: Time off request status to filter on
          type: string
          example: requested
          enum:
            - requested
            - approved
            - declined
            - cancelled
            - deleted
            - other
        company_id:
          description: Company ID
          type: string
          example: '1234'
      example:
        start_date: '2022-04-08'
        end_date: '2022-04-21'
        updated_since: '2020-09-30T07:43:32.000Z'
        employee_id: '1234'
        time_off_request_status: approved
        company_id: '1234'
      additionalProperties: false
    Timezone:
      description: 'The time zone related to the resource. The value is a string containing a standard time zone identifier, e.g. Europe/London.'
      type: string
      example: Europe/London
      nullable: true
      title: Timezone
    UpdateDepartmentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: workday
        resource:
          description: Unified API resource name
          type: string
          example: Departments
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateDepartmentResponse
    UpdateEmployeeResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sage-hr
        resource:
          description: Unified API resource name
          type: string
          example: Employees
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateEmployeeResponse
    UpdateHrisCompanyResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: undefined
        resource:
          description: Unified API resource name
          type: string
          example: Companies
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateHrisCompanyResponse
    UpdateTimeOffRequestResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: bamboohr
        resource:
          description: Unified API resource name
          type: string
          example: time-off-requests
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
    CreateMessageResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: twilio
        resource:
          description: Unified API resource name
          type: string
          example: Messages
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateMessageResponse
    DeleteMessageResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: twilio
        resource:
          description: Unified API resource name
          type: string
          example: Messages
        operation:
          description: Operation performed
          type: string
          example: delete
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteMessageResponse
    GetMessageResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: twilio
        resource:
          description: Unified API resource name
          type: string
          example: Messages
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Message'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetMessageResponse
    GetMessagesResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: twilio
        resource:
          description: Unified API resource name
          type: string
          example: Messages
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetMessagesResponse
    Message:
      type: object
      properties:
        id:
          description: A unique identifier for an object.
          type: string
          example: '12345'
          readOnly: true
          title: ID
        from:
          description: The phone number that initiated the message.
          type: string
          example: '+15017122661'
          title: From
        to:
          description: The phone number that received the message.
          type: string
          example: '+15017122662'
          title: Message Body
        subject:
          type: string
          example: Picture
          title: Message Subject
        body:
          description: The message text.
          type: string
          example: Hi! How are you doing?
          maxLength: 1600
          title: Message Body
        type:
          description: Set to sms for SMS messages and mms for MMS messages.
          type: string
          example: sms
          enum:
            - sms
            - mms
          title: Message type
          x-apideck-enum-id: messages.type
        number_of_units:
          description: The number of units that make up the complete message. Messages can be split up due to the constraints of the message size.
          type: integer
          example: 1
          readOnly: true
          title: Number of units
        number_of_media_files:
          description: The number of media files associated with the message.
          type: integer
          example: 1
          readOnly: true
          title: Number of media files
        direction:
          description: The direction of the message.
          type: string
          example: outbound-api
          enum:
            - inbound
            - outbound-api
            - outbound-call
            - outbound-reply
            - unknown
          readOnly: true
          title: Direction
          x-apideck-enum-id: messages.direction
        status:
          description: Status of the delivery of the message.
          type: string
          example: sent
          enum:
            - accepted
            - scheduled
            - canceled
            - queued
            - sending
            - sent
            - failed
            - delivered
            - undelivered
            - receiving
            - received
            - read
          readOnly: true
          title: Status
          x-apideck-enum-id: messages.status
        scheduled_at:
          description: The scheduled date and time of the message.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
        sent_at:
          description: The date and time that the message was sent
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          readOnly: true
        webhook_url:
          description: Define a webhook to receive delivery notifications.
          type: string
          example: 'https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms'
          title: Webhook URL
        reference:
          description: A client reference.
          type: string
          example: CUST001
          title: Reference
        price:
          description: Price of the message.
          type: object
          example:
            per_unit: '0.01'
            total_amount: '0.01'
            currency: USD
          properties:
            per_unit:
              description: ''
              type: string
              example: '0.01'
              readOnly: true
              title: Price per unit
            total_amount:
              description: ''
              type: string
              example: '0.01'
              readOnly: true
              title: Price Amount
            currency:
              $ref: '#/components/schemas/Currency'
          readOnly: true
          title: Price
        error:
          description: The error returned if your message status is failed or undelivered.
          type: object
          example:
            code: X1
            message: Something went wrong
          properties:
            code:
              description: 'The error_code provides more information about the failure. If the message was successful, this value is null'
              type: string
              example: X1
              readOnly: true
              title: Error Code
            message:
              type: string
              example: Something went wrong
              readOnly: true
              title: Error Message
          readOnly: true
          title: Error
        messaging_service_id:
          description: The ID of the Messaging Service used with the message. In case of Plivo this links to the Powerpack ID.
          type: string
          example: '123456'
          title: Messaging Service ID
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_by:
          description: The user who last updated the object.
          type: string
          example: '12345'
          nullable: true
          readOnly: true
          title: Updated by
        created_by:
          description: The user who created the object.
          type: string
          example: '12345'
          nullable: true
          readOnly: true
          title: Created by
        updated_at:
          description: The date and time when the object was last updated.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
          title: Updated at (timestamp)
        created_at:
          description: The date and time when the object was created.
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
          title: Created at (timestamp)
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - from
        - to
        - body
      x-apideck-schema-id: Message
      x-apideck-weights:
        id: critical
        from: critical
        to: critical
        subject: medium
        body: critical
        type: high
        status: high
        price: edge-case
        error: edge-case
        messaging_service_id: edge-case
        number_of_units: low
        number_of_media_files: edge-case
        webhook_url: low
    UpdateMessageResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: twilio
        resource:
          description: Unified API resource name
          type: string
          example: Messages
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateMessageResponse
    Assignee:
      type: object
      properties:
        id:
          description: A unique identifier for an object.
          type: string
          example: '12345'
          title: ID
        username:
          type: string
          example: Cocoa
          nullable: true
          readOnly: true
          title: Name
      additionalProperties: false
      required:
        - id
      x-apideck-schema-id: Assignee
      x-apideck-weights:
        id: critical
        username: medium
    Collection:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        parent_id:
          description: The collections's parent ID
          type: string
          example: '12345'
          nullable: true
        type:
          description: The collections's type
          type: string
          example: Technical
          nullable: true
          title: Type
        name:
          description: Name of the collection
          type: string
          example: Main IT Issues
          nullable: true
          title: name
        description:
          description: Description of the collection
          type: string
          example: IT Issues
          nullable: true
          title: Description
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      additionalProperties: false
      required:
        - id
      x-apideck-schema-id: Collection
      x-apideck-weights:
        id: critical
        name: high
        updated_at: high
        created_at: high
    CollectionTag:
      type: object
      properties:
        id:
          description: A unique identifier for an object.
          type: string
          example: '12345'
          nullable: true
          title: ID
        name:
          description: The name of the tag.
          type: string
          example: User Experience
          nullable: true
          readOnly: true
          title: Name
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
      additionalProperties: false
      required:
        - id
      x-apideck-schema-id: Tag
      x-apideck-weights:
        id: critical
        name: medium
    CollectionTicketComment:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        body:
          description: Body of the comment
          type: string
          example: What internet provider do you use?
          nullable: true
          title: Body
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      x-apideck-schema-id: Comment
      x-apideck-weights:
        id: critical
        body: critical
        created_by: critical
        created_at: critical
        updated_at: medium
    CollectionUser:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdOrNull'
        name:
          description: Full name of the user
          type: string
          example: Elon Musk
          nullable: true
          title: Name
        first_name:
          description: First name of the user
          type: string
          example: Elon
          nullable: true
        last_name:
          description: Last name of the user
          type: string
          example: Musk
          nullable: true
        email:
          description: Email address of the user
          type: string
          example: elon@musk.com
          nullable: true
        photo_url:
          $ref: '#/components/schemas/PhotoUrl'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      additionalProperties: false
      x-apideck-schema-id: CollectionUser
      x-apideck-weights:
        id: high
        name: critical
        first_name: high
        last_name: high
        email: medium
        updated_at: medium
        created_at: medium
    CollectionsSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Collections
          type: string
          example: name
          enum:
            - name
            - created_at
            - updated_at
          x-apideck-enum-id: Collections.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: name
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: CollectionsSort
    CommentsSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Comments
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
          x-apideck-enum-id: Comments.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: CommentsSort
    CreateCommentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: jira
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateCommentResponse
    CreateTicketResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: jira
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: CreateTicketResponse
    DeleteCommentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: jira
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteCommentResponse
    DeleteTicketResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: jira
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: add
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: DeleteTicketResponse
    GetCollectionResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: jira
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Collection'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCollectionResponse
    GetCollectionTagsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: jira
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/CollectionTag'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetTagsResponse
    GetCollectionUserResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: jira
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/CollectionUser'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCollectionUserResponse
    GetCollectionUsersResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: jira
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/CollectionUser'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCollectionUsersResponse
    GetCollectionsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: jira
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Collection'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCollectionsResponse
    GetCommentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sage-hr
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/CollectionTicketComment'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCommentResponse
    GetCommentsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: jira
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/CollectionTicketComment'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetCommentsResponse
    GetTicketResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: sage-hr
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: one
        data:
          $ref: '#/components/schemas/Ticket'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetTicketResponse
    GetTicketsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: jira
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: all
        data:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: GetTicketsResponse
    IssuesFilter:
      type: object
      properties:
        status:
          description: 'Filter by ticket status, can be `open`, `closed` or `all`. Will passthrough if none of the above match'
          type: array
          items:
            type: string
          example:
            - closed
          default: []
          title: ticket status
          uniqueItems: true
        since:
          description: Only return tickets since a specific date
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          title: Since date (timestamp)
        assignee_id:
          description: Only return tickets assigned to a specific user
          type: string
          example: 2332bd9c2eaaa5dcfa14721c
          title: Assignee ID
      example:
        status:
          - open
      additionalProperties: false
      x-apideck-schema-id: IssuesFilter
    Ticket:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        parent_id:
          description: The ticket's parent ID
          type: string
          example: '12345'
          nullable: true
        collection_id:
          description: The ticket's collection ID
          type: string
          example: '12345'
          nullable: true
          readOnly: true
        type:
          description: The ticket's type
          type: string
          example: Technical
          nullable: true
          title: Type
        subject:
          description: Subject of the ticket
          type: string
          example: Technical Support Request
          nullable: true
          title: Subject
        description:
          description: The ticket's description. HTML version of description is mapped if supported by the third-party platform
          type: string
          example: I am facing issues with my internet connection
          nullable: true
          title: Description
        status:
          description: 'The current status of the ticket. Possible values include: open, in_progress, closed, or - in cases where there is no clear mapping - the original value passed through.'
          type: string
          example: open
          nullable: true
        priority:
          description: Priority of the ticket
          type: string
          example: high
          enum:
            - low
            - normal
            - high
            - urgent
          nullable: true
          title: Priority
          x-apideck-enum-id: tickets.priority
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/Assignee'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        created_by:
          $ref: '#/components/schemas/CreatedBy'
        due_date:
          description: Due date of the ticket
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          title: Due date (timestamp)
        completed_at:
          description: When the ticket was completed
          type: string
          format: date-time
          example: '2020-09-30T07:43:32.000Z'
          nullable: true
          readOnly: true
          title: Completed at (timestamp)
        tags:
          type: array
          items:
            $ref: '#/components/schemas/CollectionTag'
        custom_mappings:
          $ref: '#/components/schemas/CustomMappings'
        pass_through:
          $ref: '#/components/schemas/PassThroughBody'
      additionalProperties: false
      required:
        - id
      x-apideck-schema-id: Ticket
      x-apideck-weights:
        id: critical
        type: medium
        status: critical
        subject: high
        description: high
        assignees: high
        collection_id: high
        updated_at: critical
        created_at: critical
        due_date: medium
        completed_at: medium
        tags: high
    TicketsSort:
      type: object
      properties:
        by:
          description: The field on which to sort the Tickets
          type: string
          example: created_at
          enum:
            - created_at
            - updated_at
          x-apideck-enum-id: Tickets.sort_by
        direction:
          $ref: '#/components/schemas/SortDirection'
      example:
        by: created_at
        direction: desc
      additionalProperties: false
      x-apideck-schema-id: TicketsSort
    UpdateCommentResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: github
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateCommentResponse
    UpdateTicketResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        service:
          description: Apideck ID of service provider
          type: string
          example: github
        resource:
          description: Unified API resource name
          type: string
          example: Tickets
        operation:
          description: Operation performed
          type: string
          example: update
        data:
          $ref: '#/components/schemas/UnifiedId'
      required:
        - status_code
        - status
        - service
        - resource
        - operation
        - data
      x-apideck-schema-id: UpdateTicketResponse
    Api:
      type: object
      properties:
        id:
          description: ID of the API.
          type: string
          example: file-storage
          readOnly: true
        type:
          description: 'Indicates whether the API is a Unified API. If unified_api is false, the API is a Platform API.'
          type: string
          enum:
            - platform
            - unified
        name:
          description: Name of the API.
          type: string
          example: File Storage API
        description:
          description: Description of the API.
          type: string
          example: 'Manage API keys, access tokens, OAuth flows and integrations.'
          nullable: true
        status:
          $ref: '#/components/schemas/ApiStatus'
        spec_url:
          description: Link to the latest OpenAPI specification of the API.
          type: string
          example: 'https://specs.apideck.com/file-storage.yml'
        api_reference_url:
          description: Link to the API reference of the API.
          type: string
          example: 'https://developers.apideck.com/apis/file-storage/reference'
        postman_collection_id:
          description: ID of the Postman collection of the API.
          type: string
          example: 1311564-00e7266b-a3d6-4f40-b172-baaa66a3ed6f
          nullable: true
        categories:
          description: List of categories the API belongs to.
          type: array
          items:
            type: string
          example:
            - files
            - file-storage
            - cloud-storage
            - object-storage
        resources:
          description: List of resources supported in this API.
          type: array
          items:
            type: object
            properties:
              id:
                description: 'ID of the resource, typically a lowercased version of its name.'
                type: string
                example: companies
              name:
                description: Name of the resource (plural)
                type: string
                example: Companies
              status:
                $ref: '#/components/schemas/ResourceStatus'
              excluded_from_coverage:
                description: Exclude from mapping coverage
                type: boolean
                example: false
        events:
          description: List of event types this API supports.
          type: array
          items:
            type: string
          example:
            - crm.contact.updated
            - accounting.invoice.created
      x-apideck-schema-id: Api
    ApiResource:
      type: object
      properties:
        id:
          description: 'ID of the resource, typically a lowercased version of name.'
          type: string
          example: companies
        name:
          description: Name of the resource (plural)
          type: string
          example: Companies
        status:
          $ref: '#/components/schemas/ResourceStatus'
        linked_resources:
          description: List of linked resources.
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/ResourceId'
              unified_property:
                $ref: '#/components/schemas/UnifiedProperty'
        schema:
          description: JSON Schema of the resource in our Unified API
          type: object
          example:
            required:
              - name
              - company_name
            x-pii:
              - name
              - email
              - first_name
              - last_name
            additionalProperties: false
            properties:
              id:
                type: string
                example: '12345'
                readOnly: true
              name:
                type: string
                example: Elon Musk
                minLength: 1
              updated_at:
                type: string
                example: '2020-09-30T07:43:32.000Z'
                readOnly: true
              created_at:
                type: string
                example: '2020-09-30T07:43:32.000Z'
                readOnly: true
          x-json-schema: true
      x-apideck-schema-id: ApiResource
    ApiResourceCoverage:
      type: object
      properties:
        id:
          description: 'ID of the resource, typically a lowercased version of name.'
          type: string
          example: companies
        name:
          description: Name of the resource (plural)
          type: string
          example: Companies
        status:
          $ref: '#/components/schemas/ResourceStatus'
        coverage:
          type: array
          items:
            type: object
            properties:
              downstream_id:
                description: ID of the resource in the Connector's API (downstream)
                type: string
                example: accounts
              downstream_name:
                description: Name of the resource in the Connector's API (downstream)
                type: string
                example: Accounts
              pagination_supported:
                description: Indicates if pagination (cursor and limit parameters) is supported on the list endpoint of the resource.
                type: boolean
              pagination:
                $ref: '#/components/schemas/PaginationCoverage'
              supported_operations:
                description: List of supported operations on the resource.
                type: array
                items:
                  type: string
                example:
                  - all
                  - one
                  - add
                  - update
                  - delete
              supported_filters:
                description: Supported filters on the list endpoint of the resource.
                type: array
                items:
                  type: string
                example:
                  - name
                  - email
              supported_sort_by:
                description: Supported sorting properties on the list endpoint of the resource.
                type: array
                items:
                  type: string
                example:
                  - updated_at
                  - created_at
                  - name
              supported_fields:
                description: Supported fields on the detail endpoint.
                type: array
                items:
                  $ref: '#/components/schemas/SupportedProperty'
              supported_list_fields:
                description: Supported fields on the list endpoint.
                type: array
                items:
                  $ref: '#/components/schemas/SupportedProperty'
      x-apideck-schema-id: ApiResourceCoverage
    ApisFilter:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/ApiStatus'
      example:
        status: beta
      additionalProperties: false
      x-apideck-schema-id: ApisFilter
    ApiStatus:
      description: Status of the API. APIs with status live or beta are callable.
      type: string
      enum:
        - live
        - beta
        - development
        - considering
    Connector:
      type: object
      properties:
        id:
          description: ID of the connector.
          type: string
          example: crm+salesforce
          readOnly: true
        name:
          description: Name of the connector.
          type: string
          example: Salesforce
        status:
          $ref: '#/components/schemas/ConnectorStatus'
        description:
          description: A description of the object.
          type: string
          example: A description
          nullable: true
          title: Description
        icon_url:
          description: Link to a small square icon for the connector.
          type: string
          format: uri
          example: 'https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png'
        logo_url:
          description: Link to the full logo for the connector.
          type: string
          format: uri
          example: 'https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg'
        website_url:
          description: Link to the connector's website.
          type: string
          format: uri
          example: 'https://www.salesforce.com'
        signup_url:
          description: Link to the connector's signup page.
          type: string
          format: uri
          example: 'https://www.salesforce.com/signup'
        partner_signup_url:
          description: Link to the connector's partner program signup page.
          type: string
          format: uri
          example: 'https://www.salesforce.com/partners'
        free_trial_available:
          description: Set to `true` when the connector offers a free trial. Use `signup_url` to sign up for a free trial
          type: boolean
        auth_type:
          description: Type of authorization used by the connector
          type: string
          example: oauth2
          enum:
            - oauth2
            - apiKey
            - basic
            - custom
            - none
          readOnly: true
          x-apideck-enum-id: auth_types
        auth_only:
          description: 'Indicates whether a connector only supports authentication. In this case the connector is not mapped to a Unified API, but can be used with the Proxy API'
          type: boolean
          example: true
          readOnly: true
        blind_mapped:
          description: 'Set to `true` when connector was implemented from downstream docs only and without API access. This state indicates that integration will require Apideck support, and access to downstream API to validate mapping quality.'
          type: boolean
          example: true
          readOnly: true
        oauth_grant_type:
          description: 'OAuth grant type used by the connector. More info: https://oauth.net/2/grant-types'
          type: string
          example: authorization_code
          enum:
            - authorization_code
            - client_credentials
            - password
          readOnly: true
          x-apideck-enum-id: oauth_grant_types
        oauth_credentials_source:
          description: Location of the OAuth client credentials. For most connectors the OAuth client credentials are stored on integration and managed by the application owner. For others they are stored on connection and managed by the consumer in Vault.
          type: string
          example: integration
          enum:
            - integration
            - connection
          readOnly: true
          x-apideck-enum-id: oauth_credentials_source
        oauth_scopes:
          description: List of OAuth Scopes available for this connector.
          type: array
          items:
            type: object
            properties:
              id:
                description: ID of the OAuth scope.
                type: string
                example: 'contacts:all'
              label:
                description: Label of the OAuth scope.
                type: string
                example: Read/write on the Contacts resource
              default_apis:
                description: List of Unified APIs that request this OAuth Scope by default. Application owners can customize the requested scopes.
                type: array
                items:
                  type: string
                  description: ID of the Unified API.
                  example: crm
        custom_scopes:
          description: Set to `true` when connector allows the definition of custom scopes.
          type: boolean
          example: true
          readOnly: true
        has_sandbox_credentials:
          description: Indicates whether Apideck Sandbox OAuth credentials are available.
          type: boolean
          example: true
        settings:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorSetting'
        service_id:
          $ref: '#/components/schemas/ServiceId'
        unified_apis:
          description: List of Unified APIs that feature this connector.
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/UnifiedApiId'
              name:
                description: Name of the API.
                type: string
                example: File Storage API
              auth_only:
                description: 'Indicates whether a connector only supports authentication. In this case the connector is not mapped to a Unified API, but can be used with the Proxy API'
                type: boolean
                example: true
                readOnly: true
              oauth_scopes:
                type: array
                items:
                  type: object
                  description: OAuth scopes required for the connector. Add these scopes to your OAuth app.
                  example:
                    id: 'contacts:all'
                    label: Read/write on the Contacts resource
                  properties:
                    id:
                      description: ID of the OAuth scope.
                      type: string
                      example: 'contacts:all'
                    label:
                      description: Label of the OAuth scope.
                      type: string
                      example: Read/write on the Contacts resource
              supported_resources:
                description: List of resources that are supported on the connector.
                type: array
                items:
                  $ref: '#/components/schemas/LinkedConnectorResource'
              downstream_unsupported_resources:
                description: List of resources that are not supported on the downstream.
                type: array
                items:
                  $ref: '#/components/schemas/ResourceId'
              supported_events:
                description: List of events that are supported on the connector for this Unified API.
                type: array
                items:
                  $ref: '#/components/schemas/ConnectorEvent'
        supported_resources:
          description: List of resources that are supported on the connector.
          type: array
          items:
            $ref: '#/components/schemas/LinkedConnectorResource'
        configurable_resources:
          description: List of resources that have settings that can be configured.
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
          example:
            - leads
            - companies
        supported_events:
          description: List of events that are supported on the connector across all Unified APIs.
          type: array
          items:
            $ref: '#/components/schemas/ConnectorEvent'
        webhook_support:
          $ref: '#/components/schemas/WebhookSupport'
        schema_support:
          $ref: '#/components/schemas/SchemaSupport'
        docs:
          type: array
          items:
            $ref: '#/components/schemas/ConnectorDoc'
        tls_support:
          type: object
          properties:
            type:
              type: string
            description:
              description: Description of the TLS support
              type: string
      x-apideck-schema-id: Connector
    ConnectorDoc:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Id'
        name:
          description: Name of the doc.
          type: string
          example: connection
        audience:
          description: Audience for the doc.
          type: string
          enum:
            - application_owner
            - consumer
        format:
          description: Format of the doc.
          type: string
          enum:
            - markdown
        url:
          description: Link to fetch the content of the doc.
          type: string
          format: uri
          example: 'https://unify.apideck.com/connector/connectors/workday/docs/consumer+connection'
      x-apideck-schema-id: ConnectorDoc
    ConnectorEvent:
      description: Unify event that is supported on the connector. Events are delivered via Webhooks.
      type: object
      properties:
        event_type:
          description: Unify event type
          type: string
          example: employee.created
        event_source:
          description: Unify event source
          type: string
          example: native
          enum:
            - native
            - virtual
        downstream_event_type:
          description: Downstream event type
          type: string
          example: person_created
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ResourceId'
        entity_type:
          description: Unify entity type
          type: string
          example: employee
      x-apideck-schema-id: ConnectorEvent
    ConnectorResource:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        name:
          description: Name of the resource (plural)
          type: string
          example: Companies
        downstream_id:
          description: ID of the resource in the Connector's API (downstream)
          type: string
          example: accounts
        downstream_name:
          description: Name of the resource in the Connector's API (downstream)
          type: string
          example: Accounts
        status:
          $ref: '#/components/schemas/ResourceStatus'
        pagination_supported:
          description: Indicates if pagination (cursor and limit parameters) is supported on the list endpoint of the resource.
          type: boolean
        pagination:
          $ref: '#/components/schemas/PaginationCoverage'
        custom_fields_supported:
          description: Indicates if custom fields are supported on this resource.
          type: boolean
        supported_operations:
          description: List of supported operations on the resource.
          type: array
          items:
            type: string
          example:
            - all
            - one
            - add
            - update
            - delete
        downstream_unsupported_operations:
          description: List of operations that are not supported on the downstream.
          type: array
          items:
            type: string
          example:
            - upload
        supported_filters:
          description: Supported filters on the list endpoint of the resource.
          type: array
          items:
            type: string
          example:
            - name
            - email
        supported_sort_by:
          description: Supported sorting properties on the list endpoint of the resource.
          type: array
          items:
            type: string
          example:
            - updated_at
            - created_at
            - name
        supported_fields:
          description: Supported fields on the detail endpoint.
          type: array
          items:
            $ref: '#/components/schemas/SupportedProperty'
        supported_list_fields:
          description: Supported fields on the list endpoint.
          type: array
          items:
            $ref: '#/components/schemas/SupportedProperty'
      x-apideck-schema-id: ConnectorResource
    ConnectorSetting:
      type: object
      properties:
        id:
          type: string
          example: pipeline_id
        label:
          type: string
          example: Pipeline
        type:
          example: select
          enum:
            - text
            - checkbox
            - tel
            - email
            - url
            - textarea
            - select
            - filtered-select
            - multi-select
            - datetime
            - date
            - time
            - number
            - password
      x-apideck-schema-id: ConnectorSetting
    ConnectorsFilter:
      type: object
      properties:
        unified_api:
          $ref: '#/components/schemas/UnifiedApiId'
        status:
          $ref: '#/components/schemas/ConnectorStatus'
      example:
        unified_api: file-storage
      additionalProperties: false
      x-apideck-schema-id: ConnectorsFilter
    ConnectorStatus:
      description: Status of the connector. Connectors with status live or beta are callable.
      type: string
      enum:
        - live
        - beta
        - development
        - considering
    GetApiResourceCoverageResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/ApiResourceCoverage'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetApiResourceCoverageResponse
    GetApiResourceResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/ApiResource'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetApiResourceResponse
    GetApiResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Api'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetApiResponse
    GetApisResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/Api'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetApisResponse
    GetConnectorResourceResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/ConnectorResource'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetConnectorResourceResponse
    GetConnectorResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Connector'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetConnectorResponse
    GetConnectorsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/Connector'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetConnectorsResponse
    LinkedConnectorResource:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        name:
          description: Name of the resource (plural)
          type: string
          example: Companies
        status:
          $ref: '#/components/schemas/ResourceStatus'
        downstream_id:
          description: ID of the resource in the Connector's API (downstream)
          type: string
          example: accounts
        downstream_name:
          description: Name of the resource in the Connector's API (downstream)
          type: string
          example: Accounts
      x-apideck-schema-id: LinkedConnectorResource
    PaginationCoverage:
      type: object
      properties:
        mode:
          description: 'How pagination is implemented on this connector. Native mode means Apideck is using the pagination parameters of the connector. With virtual pagination, the connector does not support pagination, but Apideck emulates it.'
          type: string
          example: native
          enum:
            - native
            - virtual
        paging_support:
          description: Indicates whether the connector supports paging through results using the cursor parameter.
          type: boolean
        limit_support:
          description: Indicates whether the connector supports changing the page size by using the limit parameter.
          type: boolean
      x-apideck-schema-id: ConnectorResource
    ResourceId:
      description: 'ID of the resource, typically a lowercased version of name.'
      type: string
      example: companies
    ResourceStatus:
      description: Status of the resource. Resources with status live or beta are callable.
      type: string
      enum:
        - live
        - beta
        - development
        - upcoming
        - considering
      x-apideck-enum-id: connector.resource.status
    ServiceId:
      description: Service provider identifier
      type: string
      example: close
    SchemaSupport:
      description: 'When a connector has schema_support, a call can be made to retrieve a json schema that describes a downstream resource.'
      type: object
      properties:
        supported:
          description: Can a resource schema be retrieved for this connector?
          type: boolean
          example: true
      x-apideck-schema-id: SchemaSupport
    SupportedProperty:
      type: object
      properties:
        unified_property:
          $ref: '#/components/schemas/UnifiedProperty'
        child_properties:
          description: List of child properties of the unified property.
          type: array
          items:
            $ref: '#/components/schemas/SupportedProperty'
    UnifiedApiId:
      description: Name of Apideck Unified API
      type: string
      example: crm
      enum:
        - accounting
        - ats
        - calendar
        - crm
        - csp
        - customer-support
        - ecommerce
        - email
        - email-marketing
        - expense-management
        - file-storage
        - form
        - hris
        - lead
        - payroll
        - pos
        - procurement
        - project-management
        - script
        - sms
        - spreadsheet
        - team-messaging
        - issue-tracking
        - time-registration
        - transactional-email
        - vault
        - data-warehouse
      x-apideck-enum-id: unified_api
    UnifiedProperty:
      description: Name of the property in our Unified API.
      type: string
      example: owner_id
    WebhookSupport:
      description: 'How webhooks are supported for the connector. Sometimes the connector natively supports webhooks, other times Apideck virtualizes them based on polling.'
      type: object
      properties:
        mode:
          description: Mode of the webhook support.
          type: string
          example: native
          enum:
            - native
            - virtual
            - none
        subscription_level:
          description: Received events are scoped to connection or across integration.
          type: string
          example: integration
          enum:
            - connection
            - integration
        managed_via:
          description: How the subscription is managed in the downstream.
          type: string
          example: api
          enum:
            - manual
            - api
        virtual_webhooks:
          description: Virtual webhook config for the connector.
          type: object
          additionalProperties: false
          properties:
            request_rate:
              description: The rate at which requests for resources will be made to downstream.
              type: object
              additionalProperties: false
              properties:
                rate:
                  description: The number of requests per window unit.
                  type: integer
                  title: Rate
                size:
                  description: Size of request window.
                  type: integer
                  title: Size of rate window
                unit:
                  description: The window unit for the rate.
                  type: string
                  enum:
                    - second
                    - minute
                    - hour
                    - day
                  title: Unit
              required:
                - rate
                - size
                - unit
              title: Request Rate
            resources:
              description: The resources that will be requested from downstream.
              type: object
              additionalProperties:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: string
              title: Resources
          required:
            - request_rate
          title: Virtual Webhooks
      x-apideck-schema-id: WebhookSupport
    ApplicationId:
      description: ID of your Apideck Application
      type: string
      example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
    AuthType:
      description: Type of authorization used by the connector
      type: string
      example: oauth2
      enum:
        - oauth2
        - apiKey
        - basic
        - custom
        - none
      readOnly: true
      x-apideck-enum-id: auth_types
    Connection:
      type: object
      properties:
        id:
          description: The unique identifier of the connection.
          type: string
          example: crm+salesforce
          readOnly: true
        service_id:
          description: The ID of the service this connection belongs to.
          type: string
          example: salesforce
          readOnly: true
        name:
          description: The name of the connection
          type: string
          example: Salesforce
          readOnly: true
        tag_line:
          type: string
          example: 'CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.'
          readOnly: true
        unified_api:
          description: The unified API category where the connection belongs to.
          type: string
          example: crm
          readOnly: true
        state:
          $ref: '#/components/schemas/ConnectionState'
        integration_state:
          $ref: '#/components/schemas/IntegrationState'
        auth_type:
          $ref: '#/components/schemas/AuthType'
        oauth_grant_type:
          $ref: '#/components/schemas/OAuthGrantType'
        status:
          description: Status of the connection.
          type: string
          enum:
            - live
            - upcoming
            - requested
          readOnly: true
          x-apideck-enum-id: connections.status
        enabled:
          description: Whether the connection is enabled or not. You can enable or disable a connection using the Update Connection API.
          type: boolean
          example: true
        website:
          description: The website URL of the connection
          type: string
          example: 'https://www.salesforce.com'
          readOnly: true
        icon:
          description: 'A visual icon of the connection, that will be shown in the Vault'
          type: string
          example: 'https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png'
          readOnly: true
        logo:
          description: 'The logo of the connection, that will be shown in the Vault'
          type: string
          example: 'https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg'
          readOnly: true
        authorize_url:
          description: 'The OAuth redirect URI. Redirect your users to this URI to let them authorize your app in the connector''s UI. Before you can use this URI, you must add `redirect_uri` as a query parameter to the `authorize_url`. Be sure to URL encode the `redirect_uri` part. Your users will be redirected to this `redirect_uri` after they granted access to your app in the connector''s UI.'
          type: string
          example: 'https://unify.apideck.com/vault/authorize/salesforce/<application-id>?state=<state>'
          nullable: true
          readOnly: true
        revoke_url:
          description: 'The OAuth revoke URI. Redirect your users to this URI to revoke this connection. Before you can use this URI, you must add `redirect_uri` as a query parameter. Your users will be redirected to this `redirect_uri` after they granted access to your app in the connector''s UI.'
          type: string
          example: 'https://unify.apideck.com/vault/revoke/salesforce/<application-id>?state=<state>'
          nullable: true
          readOnly: true
        settings:
          description: Connection settings. Values will persist to `form_fields` with corresponding id
          type: object
          example:
            instance_url: 'https://eu28.salesforce.com'
            api_key: 12345xxxxxx
          additionalProperties: true
          nullable: true
        metadata:
          description: Attach your own consumer specific metadata
          type: object
          example:
            account:
              name: My Company
              id: c01458a5-7276-41ce-bc19-639906b0450a
            plan: enterprise
          additionalProperties: true
          nullable: true
        form_fields:
          description: The settings that are wanted to create a connection.
          type: array
          items:
            $ref: '#/components/schemas/FormField'
          example:
            - id: instance_url
              label: Instance url
              value: 'https://eu28.salesforce.com'
              placeholder: ''
              mask: false
              type: text
              required: true
              disabled: false
              custom_field: false
              sensitive: false
            - id: api_key
              label: API Key
              value: '123455677'
              placeholder: ''
              mask: false
              type: text
              required: true
              disabled: false
              custom_field: false
              sensitive: true
          readOnly: true
        configuration:
          type: array
          items:
            type: object
            properties:
              resource:
                type: string
                example: leads
              defaults:
                type: array
                items:
                  type: object
                  properties:
                    target:
                      type: string
                      example: custom_fields
                      enum:
                        - custom_fields
                        - resource
                      readOnly: true
                      x-apideck-enum-id: connections.configuration.defaults.target
                    id:
                      type: string
                      example: ProductInterest
                    options:
                      type: array
                      items:
                        $ref: '#/components/schemas/FormFieldOption'
                    value:
                      anyOf:
                        - type: string
                          example: GC5000 series
                        - type: integer
                          example: 10
                        - type: number
                          example: 10.5
                        - type: boolean
                          example: true
                        - type: array
                          items:
                            anyOf:
                              - type: string
                                example: GC6000 series
                              - type: integer
                                example: 10
                              - type: number
                                example: 10.5
        configurable_resources:
          type: array
          items:
            type: string
          example:
            - opportunities
            - companies
            - contacts
            - leads
          readOnly: true
        resource_schema_support:
          type: array
          items:
            type: string
          example:
            - leads
          readOnly: true
        resource_settings_support:
          type: array
          items:
            type: string
          example:
            - leads
          readOnly: true
        validation_support:
          type: boolean
          readOnly: true
        schema_support:
          type: boolean
          readOnly: true
        settings_required_for_authorization:
          description: List of settings that are required to be configured on integration before authorization can occur
          type: array
          items:
            type: string
          example:
            - client_id
            - client_secret
          readOnly: true
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/WebhookSubscription'
          readOnly: true
        has_guide:
          description: 'Whether the connector has a guide available in the developer docs or not (https://docs.apideck.com/connectors/{service_id}/docs/consumer+connection).'
          type: boolean
          example: true
          readOnly: true
        created_at:
          type: number
          example: 1615563533390
          readOnly: true
        custom_mappings:
          description: List of custom mappings configured for this connection
          type: array
          items:
            $ref: '#/components/schemas/CustomMapping'
        updated_at:
          type: number
          example: 1616662325753
          nullable: true
          readOnly: true
      x-apideck-schema-id: Connection
    ConnectionImportData:
      type: object
      properties:
        credentials:
          type: object
          example:
            access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
            refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.cThIIoDvwdueQB468K5xDc5633seEFoqwxjF_xSJyQQ
          additionalProperties: false
          properties:
            refresh_token:
              description: The refresh token can be used to obtain a new access token.
              type: string
              example: 1234567890abcdefghijklmnopqrstuvwxyz
              nullable: true
            access_token:
              description: Access token
              type: string
              example: 1234567890abcdefghijklmnopqrstuvwxyz
            issued_at:
              description: The datetime at which the token was issued. If omitted the token will be queued for refresh.
              type: string
              format: date-time
              example: '2020-01-01T00:00:00Z'
              nullable: true
            expires_in:
              description: The number of seconds until the token expires. If omitted the token will be queued for refresh.
              type: integer
              example: 3600
              nullable: true
        settings:
          description: Connection settings. Values will persist to `form_fields` with corresponding id
          type: object
          example:
            instance_url: 'https://eu28.salesforce.com'
          nullable: true
        metadata:
          description: Attach your own consumer specific metadata
          type: object
          example:
            account:
              name: My Company
              id: c01458a5-7276-41ce-bc19-639906b0450a
            plan: enterprise
          additionalProperties: true
          nullable: true
      x-apideck-schema-id: ConnectionImportData
    ConnectionState:
      description: '[Connection state flow](#section/Connection-state)'
      type: string
      example: authorized
      enum:
        - available
        - callable
        - added
        - authorized
        - invalid
      readOnly: true
      x-apideck-enum-id: connections.state
      x-apideck-schema-id: ConnectionState
    Consumer:
      type: object
      properties:
        consumer_id:
          $ref: '#/components/schemas/ConsumerId'
        application_id:
          description: ID of your Apideck Application
          type: string
          example: dSBdXd2H6Mqwfg0atXHXYcysLJE9qyn1VwBtXHX
          readOnly: true
        metadata:
          $ref: '#/components/schemas/ConsumerMetadata'
        connections:
          type: array
          items:
            $ref: '#/components/schemas/ConsumerConnection'
          readOnly: true
        services:
          type: array
          items:
            type: string
            example: salesforce
          example:
            - salesforce
            - stripe
          readOnly: true
        aggregated_request_count:
          type: number
          example: 101
          readOnly: true
        request_counts:
          $ref: '#/components/schemas/RequestCountAllocation'
        created:
          type: string
          example: '2021-05-07T12:55:42.242Z'
          readOnly: true
        modified:
          type: string
          example: '2021-05-07T12:55:42.242Z'
          readOnly: true
        request_count_updated:
          type: string
          example: '2021-05-07T12:55:42.242Z'
          readOnly: true
      required:
        - consumer_id
      x-apideck-schema-id: Consumer
    ConsumerConnection:
      type: object
      properties:
        id:
          type: string
          example: 1111+test_user_id
          readOnly: true
        name:
          type: string
          example: Salesforce
        icon:
          type: string
          example: 'https://res.cloudinary.com/apideck/image/upload/v1529456047/catalog/salesforce/icon128x128.png'
        logo:
          type: string
          example: 'https://c1.sfdcstatic.com/content/dam/web/en_us/www/images/home/logo-salesforce-m.svg'
        website:
          type: string
          example: 'https://www.salesforce.com'
          readOnly: true
        tag_line:
          type: string
          example: 'CRM software solutions and enterprise cloud computing from Salesforce, the leader in customer relationship management (CRM) and PaaS. Free 30 day trial.'
          readOnly: true
        service_id:
          type: string
          example: teamleader
        unified_api:
          type: string
          example: crm
        consumer_id:
          type: string
          example: test_user_id
        auth_type:
          $ref: '#/components/schemas/AuthType'
        enabled:
          type: boolean
          example: true
        settings:
          description: Connection settings. Values will persist to `form_fields` with corresponding id
          type: object
          example:
            instance_url: 'https://eu28.salesforce.com'
          nullable: true
        metadata:
          description: Attach your own consumer specific metadata
          type: object
          example:
            account:
              name: My Company
              id: c01458a5-7276-41ce-bc19-639906b0450a
            plan: enterprise
          additionalProperties: true
          nullable: true
        created_at:
          type: string
          example: '2020-09-19T12:18:37.071Z'
        updated_at:
          type: string
          example: '2020-09-19T12:18:37.071Z'
          nullable: true
        state:
          $ref: '#/components/schemas/ConnectionState'
      x-apideck-schema-id: ConsumerConnection
    ConsumerId:
      description: 'Unique consumer identifier. You can freely choose a consumer ID yourself. Most of the time, this is an ID of your internal data model that represents a user or account in your system (for example account:12345). If the consumer doesn''t exist yet, Vault will upsert a consumer based on your ID.'
      type: string
      example: test_consumer_id
    ConsumerMetadata:
      description: 'The metadata of the consumer. This is used to display the consumer in the sidebar. This is optional, but recommended.'
      type: object
      properties:
        account_name:
          description: The name of the account as shown in the sidebar.
          type: string
          example: SpaceX
          title: Account name
        user_name:
          description: The name of the user as shown in the sidebar.
          type: string
          example: Elon Musk
          title: User name
        email:
          description: The email of the user as shown in the sidebar.
          type: string
          example: elon@musk.com
          title: Email
        image:
          description: The avatar of the user in the sidebar. Must be a valid URL
          type: string
          example: 'https://www.spacex.com/static/images/share.jpg'
          title: Image
      x-apideck-schema-id: ConsumerMetadata
    ConsumerRequestCountsInDateRangeResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: object
          properties:
            application_id:
              type: string
              example: '1111'
            consumer_id:
              type: string
              example: test_user_id
            start_datetime:
              type: string
              example: '2021-05-01T12:00:00.000Z'
            end_datetime:
              type: string
              example: '2021-05-10T12:00:00.000Z'
            aggregated_request_count:
              type: number
              example: 40
            request_counts:
              $ref: '#/components/schemas/RequestCountAllocation'
          x-apideck-schema-id: ConsumerRequestCountsInDateRange
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: ConsumerRequestCountsInDateRangeResponse
    CreateConnectionResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 201
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Connection'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: CreateConnectionResponse
    CreateConsumerResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Consumer'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetConsumerResponse
    CreateSessionResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: object
          additionalProperties: false
          properties:
            session_uri:
              type: string
              example: 'http://vault.apideck.com/session/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj'
              readOnly: true
            session_token:
              type: string
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb25zdW1lcl9pZCI6InRlc3RfdXNlcl9pZCIsImFwcGxpY2F0aW9uX2lkIj
              readOnly: true
          required:
            - session_uri
            - session_token
      additionalProperties: false
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: CreateSessionResponse
    CustomFieldFinder:
      type: object
      properties:
        id:
          description: Custom Field ID
          type: string
          example: '123456'
          readOnly: true
        name:
          description: Custom Field name to use as a label if provided
          type: string
          example: SSN
          nullable: true
          readOnly: true
        description:
          description: More information about the custom field
          type: string
          example: Employee Level
          nullable: true
          title: Description
        value:
          description: Custom Field value
          example: '495172776'
        finder:
          description: JSONPath finder for retrieving this value when mapping a response payload from downstream
          type: string
          readOnly: true
      additionalProperties: false
      x-apideck-schema-id: CustomFieldFinder
    CustomMapping:
      type: object
      properties:
        id:
          description: Target Field ID
          type: string
          example: hris+employees+first_aid_training
          readOnly: true
        label:
          description: Target Field name to use as a label
          type: string
          example: First Aid Training
          readOnly: true
        description:
          description: Target Field description
          type: string
          example: First Aid Training completed after 2019-01-01
          nullable: true
          readOnly: true
        value:
          description: Target Field Mapping value
          type: string
          example: $.root.training.first_aid
        key:
          description: Target Field Key
          type: string
          example: first_aid_training
          readOnly: true
        required:
          description: Target Field Mapping is required
          type: boolean
          example: false
          readOnly: true
        custom_field:
          description: This mapping represents a finder for a custom field
          type: boolean
          example: true
          readOnly: true
        consumer_id:
          description: Consumer ID
          type: string
          example: test_user_id
          nullable: true
          readOnly: true
        example:
          description: Target Field Mapping example value from downstream
          type: string
          example: Some value
          nullable: true
          readOnly: true
      additionalProperties: false
      x-apideck-schema-id: CustomMapping
    DeleteConsumerResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          properties:
            consumer_id:
              $ref: '#/components/schemas/ConsumerId'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetConsumerResponse
    FormField:
      type: object
      properties:
        id:
          description: The unique identifier of the form field.
          type: string
          example: channel
        label:
          description: The label of the field
          type: string
          example: Channel
        placeholder:
          description: The placeholder for the form field
          type: string
          example: Select a channel
          nullable: true
        description:
          description: The description of the form field
          type: string
          example: Slack channel to push notification to
          nullable: true
        type:
          example: select
          enum:
            - text
            - checkbox
            - tel
            - email
            - url
            - textarea
            - select
            - filtered-select
            - multi-select
            - datetime
            - date
            - time
            - number
        required:
          description: 'Indicates if the form field is required, which means it must be filled in before the form can be submitted'
          type: boolean
          example: true
        custom_field:
          type: boolean
          example: false
        allow_custom_values:
          description: Only applicable to select fields. Allow the user to add a custom value though the option select if the desired value is not in the option select list.
          type: boolean
          example: false
          default: false
          title: Allow custom values
        disabled:
          description: Indicates if the form field is displayed in a “read-only” mode.
          type: boolean
          example: false
          nullable: true
        hidden:
          description: Indicates if the form field is not displayed but the value that is being stored on the connection.
          type: boolean
          example: false
          nullable: true
        deprecated:
          description: 'When the setting is deprecated, it should be hidden from the user interface. The value will still be stored on the connection for the sake of backwards compatibility.'
          type: boolean
          example: false
          nullable: true
        sensitive:
          description: 'Indicates if the form field contains sensitive data, which will display the value as a masked input.'
          type: boolean
          example: false
          nullable: true
        prefix:
          description: Prefix to display in front of the form field.
          type: string
          example: 'https://'
          nullable: true
        suffix:
          description: Suffix to display next to the form field.
          type: string
          example: .shopify.com
          nullable: true
        options:
          type: array
          items:
            $ref: '#/components/schemas/FormFieldOption'
          example:
            - label: General Channel
              value: general
      x-apideck-schema-id: FormField
    FormFieldOption:
      anyOf:
        - $ref: '#/components/schemas/SimpleFormFieldOption'
        - $ref: '#/components/schemas/FormFieldOptionGroup'
    FormFieldOptionGroup:
      type: object
      properties:
        id:
          type: string
          example: '1234'
        label:
          type: string
          example: General Channel
        options:
          type: array
          items:
            $ref: '#/components/schemas/SimpleFormFieldOption'
      x-apideck-schema-id: FormFieldOptionGroup
    GetConnectionResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Connection'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetConnectionResponse
    GetConnectionsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetConnectionsResponse
    GetConsumerResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Consumer'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetConsumerResponse
    GetConsumersResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: array
          items:
            type: object
            properties:
              consumer_id:
                type: string
                example: test_consumer_id
              application_id:
                type: string
                example: '1111'
              metadata:
                $ref: '#/components/schemas/ConsumerMetadata'
              aggregated_request_count:
                type: number
                example: 101
              request_counts:
                $ref: '#/components/schemas/RequestCountAllocation'
              created:
                type: string
                example: '2021-05-07T12:55:42.242Z'
              modified:
                type: string
                example: '2021-05-07T12:55:42.242Z'
              request_count_updated:
                type: string
                example: '2021-05-07T12:55:42.242Z'
              services:
                type: array
                items:
                  type: string
                  example: salesforce
                example:
                  - salesforce
                  - stripe
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetConsumersResponse
    GetCustomFieldsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldFinder'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetCustomFieldsResponse
    GetCustomMappingsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/CustomMapping'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetCustomMappingsResponse
    GetLogsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/Log'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetLogsResponse
    IntegrationState:
      description: The current state of the Integration.
      type: string
      example: configured
      enum:
        - disabled
        - needs_configuration
        - configured
      readOnly: true
      x-apideck-enum-id: integrations.state
      x-apideck-schema-id: IntegrationState
    Log:
      type: object
      properties:
        api_style:
          description: Indicates if the request was made via REST or Graphql endpoint.
          type: string
          example: REST
        base_url:
          description: The Apideck base URL the request was made to.
          type: string
          example: unify.apideck.com
        child_request:
          description: Indicates whether or not this is a child or parent request.
          type: boolean
          example: false
        consumer_id:
          description: The consumer Id associated with the request.
          type: string
          example: test-consumer
        duration:
          description: The entire execution time in milliseconds it took to call the Apideck service provider.
          type: number
          example: 2220.379304
        error_message:
          description: 'If error occurred, this is brief explanation'
          type: string
          example: Refresh token is invalid
          nullable: true
        execution:
          description: The entire execution time in milliseconds it took to make the request.
          type: integer
          example: 2248
        has_children:
          description: 'When request is a parent request, this indicates if there are child requests associated.'
          type: boolean
          example: false
        http_method:
          description: HTTP Method of request.
          type: string
          example: GET
        id:
          description: UUID acting as Request Identifier.
          type: string
          example: 0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f
        latency:
          description: Latency added by making this request via Unified Api.
          type: number
          example: 27.620695999999953
        operation:
          description: The request as defined in OpenApi Spec.
          type: object
          additionalProperties: false
          properties:
            id:
              description: The OpenApi Operation Id associated with the request
              type: string
              example: connectionsAll
            name:
              description: The OpenApi Operation name associated with the request
              type: string
              example: Get All Connections
          required:
            - id
            - name
        parent_id:
          description: 'When request is a child request, this UUID indicates it''s parent request.'
          type: string
          example: 0b5f7480-5550-4f5c-a5fc-3c01ac43dd0f
          nullable: true
        path:
          description: The path component of the URI the request was made to.
          type: string
          example: /vault/connections
        sandbox:
          description: Indicates whether the request was made using Apidecks sandbox credentials or not.
          type: boolean
          example: false
        service:
          description: Apideck service provider associated with request.
          type: object
          additionalProperties: false
          properties:
            id:
              description: Apideck service provider id.
              type: string
              example: apideck-vault
            name:
              description: Apideck service provider name.
              type: string
              example: Apideck Vault
          required:
            - id
            - name
        source_ip:
          description: The IP address of the source of the request.
          type: string
          example: 94.227.131.238
          nullable: true
        status_code:
          description: HTTP Status code that was returned.
          type: integer
          example: 200
        success:
          description: Whether or not the request was successful.
          type: boolean
          example: true
        timestamp:
          description: ISO Date and time when the request was made.
          type: string
          example: '2021-07-12T14:26:17.420Z'
        unified_api:
          description: Which Unified Api request was made to.
          type: string
          example: vault
          enum:
            - crm
            - lead
            - proxy
            - vault
            - accounting
            - hris
            - ats
            - ecommerce
            - issue-tracking
            - pos
            - file-storage
            - sms
          x-apideck-enum-id: logs.unified_api
      additionalProperties: false
      required:
        - id
        - parent_id
        - api_style
        - base_url
        - child_request
        - consumer_id
        - duration
        - execution
        - has_children
        - http_method
        - latency
        - operation
        - path
        - sandbox
        - service
        - status_code
        - success
        - timestamp
        - unified_api
      x-apideck-schema-id: Log
    LogsFilter:
      type: object
      properties:
        connector_id:
          type: string
          example: crm+salesforce
          nullable: true
        status_code:
          type: number
          example: 201
          nullable: true
        exclude_unified_apis:
          type: string
          example: 'vault,proxy'
          nullable: true
      x-apideck-schema-id: LogsFilter
    OAuthGrantType:
      description: 'OAuth grant type used by the connector. More info: https://oauth.net/2/grant-types'
      type: string
      example: authorization_code
      enum:
        - authorization_code
        - client_credentials
        - password
      readOnly: true
      x-apideck-enum-id: oauth_grant_types
    ValidateConnectionStateResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: object
          properties:
            id:
              description: The unique identifier of the connection.
              type: string
              example: crm+salesforce
              readOnly: true
            state:
              $ref: '#/components/schemas/ConnectionState'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: ValidateConnectionStateResponse
    RequestCountAllocation:
      type: object
      properties:
        unify:
          type: number
          example: 100
        proxy:
          type: number
          example: 10
        vault:
          type: number
          example: 21
      readOnly: true
      x-apideck-schema-id: RequestCountAllocation
    Session:
      type: object
      properties:
        consumer_metadata:
          $ref: '#/components/schemas/ConsumerMetadata'
        redirect_uri:
          description: The URL to redirect the user to after the session has been configured.
          type: string
          example: 'https://mysaas.com/dashboard'
          title: Redirect URI
        settings:
          description: Settings to change the way the Vault is displayed.
          type: object
          additionalProperties: false
          properties:
            unified_apis:
              description: Provide the IDs of the Unified APIs you want to be visible. Leaving it empty or omitting this field will show all Unified APIs.
              type: array
              items:
                $ref: '#/components/schemas/UnifiedApiId'
            hide_resource_settings:
              description: 'A boolean that controls the display of the configurable resources for an integration. When set to true, the resource configuration options will be hidden and not shown to the user. When set to false, the resource configuration options will be displayed to the user.'
              type: boolean
              default: false
              title: Hide resource settings
            sandbox_mode:
              description: 'Configure [Vault](/apis/vault/reference#section/Get-Started) to show a banner informing the logged in user is in a test environment.'
              type: boolean
              default: false
              title: Sandbox mode
            isolation_mode:
              description: 'Configure [Vault](/apis/vault/reference#section/Get-Started) to run in isolation mode, meaning it only shows the connection settings and hides the navigation items.'
              type: boolean
              default: false
              title: Isolation mode
            session_length:
              description: The duration of time the session is valid for (maximum 1 week).
              type: string
              example: 30m
              default: 1h
              title: Session Length
            show_logs:
              description: 'Configure [Vault](/apis/vault/reference#section/Get-Started) to show the logs page. Defaults to `true`.'
              type: boolean
              default: true
              title: Show logs
            show_suggestions:
              description: 'Configure [Vault](/apis/vault/reference#section/Get-Started) to show the suggestions page. Defaults to `false`.'
              type: boolean
              default: false
              title: Show suggestions
            show_sidebar:
              description: 'Configure [Vault](/apis/vault/reference#section/Get-Started) to show the sidebar. Defaults to `true`.'
              type: boolean
              default: true
              title: Show sidebar
            auto_redirect:
              description: Automatically redirect to redirect uri after the connection has been configured as callable. Defaults to `false`.
              type: boolean
              default: false
              title: Auto-redirect
            hide_guides:
              description: 'Hide Apideck connection guides in [Vault](/apis/vault/reference#section/Get-Started). Defaults to `false`.'
              type: boolean
              default: false
              title: Hide guides
            allow_actions:
              description: |-
                Hide actions from your users in [Vault](/apis/vault/reference#section/Get-Started). Actions in `allow_actions` will be shown on a connection in Vault.
                Available actions are: `delete`, `disconnect`, `reauthorize` and `disable`.
                Empty array will hide all actions. By default all actions are visible.
              type: array
              items:
                type: string
                enum:
                  - delete
                  - disconnect
                  - reauthorize
                  - disable
              title: Allow actions
        theme:
          description: Theming options to change the look and feel of Vault.
          type: object
          properties:
            favicon:
              description: The URL to the favicon to use for Vault.
              type: string
              example: 'https://res.cloudinary.com/apideck/icons/intercom'
              title: Favicon
            logo:
              description: The URL to the logo to use for Vault.
              type: string
              example: 'https://res.cloudinary.com/apideck/icons/intercom'
              title: Logo
            primary_color:
              description: The primary color to use for Vault.
              type: string
              example: '#286efa'
              title: Primary color
            sidepanel_background_color:
              description: The background color to use for the sidebar.
              type: string
              example: '#286efa'
              title: Sidebar background color
            sidepanel_text_color:
              description: The text color to use for the sidebar.
              type: string
              example: '#FFFFFF'
              title: Sidebar text color
            vault_name:
              description: The name that will be shown in the sidebar.
              type: string
              example: Intercom
              title: Vault name
            privacy_url:
              description: The URL to the privacy policy that will be shown in the sidebar.
              type: string
              example: 'https://compliance.apideck.com/privacy-policy'
              title: Privacy URL
            terms_url:
              description: The URL to the terms and conditions that will be shown in the sidebar.
              type: string
              example: 'https://www.termsfeed.com/terms-conditions/957c85c1b089ae9e3219c83eff65377e'
              title: Terms URL
        custom_consumer_settings:
          description: Custom consumer settings that are passed as part of the session.
          type: object
          example:
            feature_flag_1: true
            tax_rates:
              - id: '6'
                label: 6%
              - id: '21'
                label: 21%
          additionalProperties: true
          title: Custom consumer settings
      additionalProperties: false
      x-apideck-schema-id: Session
    SimpleFormFieldOption:
      type: object
      properties:
        label:
          type: string
          example: General Channel
        value:
          anyOf:
            - type: string
              example: general
            - type: integer
              example: 123
            - type: number
              example: 12.5
            - type: boolean
              example: true
            - type: array
              items:
                anyOf:
                  - type: string
                  - type: integer
                  - type: number
              example:
                - team
                - general
      x-apideck-schema-id: SimpleFormFieldOption
    UpdateConnectionResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Connection'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: UpdateConnectionResponse
    UpdateConsumerRequest:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/ConsumerMetadata'
      additionalProperties: false
      x-apideck-schema-id: UpdateConsumerRequest
    UpdateConsumerResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Consumer'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetConsumerResponse
    WebhookSubscription:
      type: object
      properties:
        downstream_id:
          description: The ID of the downstream service
          type: string
          example: 5f5f5f5f5f5f5f5f5f5f5f5f
        unify_event_types:
          description: The list of Unify Events this connection is subscribed to
          type: array
          items:
            type: string
            description: The Unify Event Type
            example: crm.contact.created
        downstream_event_types:
          description: The list of downstream Events this connection is subscribed to
          type: array
          items:
            type: string
            description: The Downstream Event Type
            example: contacts.CREATED
        execute_url:
          description: The URL the downstream is sending to when the event is triggered
          type: string
          example: 'https://unify.apideck.com/webhook/w/{lookupIdToken}/{serviceId}?e={downstreamEventType}'
        created_at:
          description: The date and time the webhook subscription was created downstream
          type: string
          example: '2020-10-01T12:00:00.000Z'
      additionalProperties: false
      readOnly: true
      x-apideck-schema-id: WebhookSubscription
    CreateCallbackState:
      type: object
      properties:
        redirect_uri:
          description: The redirect URI to be used after the connection is created.
          type: string
          example: 'https://example.com/callback'
      x-apideck-schema-id: CreateCallbackState
    CreateCallbackStateResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: object
          properties:
            state:
              description: Callback state
              type: string
              example: 123e4567-e89b-12d3-a456-426614174000
              readOnly: true
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: CreateCallbackStateResponse
    CreateWebhookRequest:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/Description'
        unified_api:
          $ref: '#/components/schemas/UnifiedApiId'
        status:
          $ref: '#/components/schemas/Status'
        delivery_url:
          $ref: '#/components/schemas/DeliveryUrl'
        events:
          description: 'The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.'
          type: array
          items:
            $ref: '#/components/schemas/WebhookEventType'
          example:
            - vault.connection.created
            - vault.connection.updated
          title: Subscribed events
      additionalProperties: false
      required:
        - delivery_url
        - status
        - events
        - unified_api
      x-apideck-schema-id: CreateWebhookRequest
    CreateWebhookResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Webhook'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: CreateWebhookResponse
    DeleteWebhookResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Webhook'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: DeleteWebhookResponse
    DeliveryUrl:
      description: The delivery url of the webhook endpoint.
      type: string
      format: uri
      example: 'https://example.com/my/webhook/endpoint'
      pattern: '^(https?)://'
    ExecuteBaseUrl:
      description: The Unify Base URL events from connectors will be sent to after service id is appended.
      type: string
      format: uri
      example: 'https://unify.apideck.com/webhook/webhooks/1234/execute'
      pattern: '^(https?)://'
      readOnly: true
    GetWebhookEventLogsResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEventLog'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetWebhookEventLogsResponse
    GetWebhookResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Webhook'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetWebhookResponse
    GetWebhooksResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          type: array
          items:
            $ref: '#/components/schemas/Webhook'
        meta:
          $ref: '#/components/schemas/Meta'
        links:
          $ref: '#/components/schemas/Links'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: GetWebhooksResponse
    Status:
      description: The status of the webhook.
      type: string
      example: enabled
      enum:
        - enabled
        - disabled
      x-apideck-enum-id: webhooks.status
    UpdateWebhookRequest:
      type: object
      properties:
        description:
          $ref: '#/components/schemas/Description'
        status:
          $ref: '#/components/schemas/Status'
        delivery_url:
          $ref: '#/components/schemas/DeliveryUrl'
        events:
          description: 'The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.'
          type: array
          items:
            $ref: '#/components/schemas/WebhookEventType'
          example:
            - vault.connection.created
            - vault.connection.updated
          title: Subscribed events
      additionalProperties: false
      x-apideck-schema-id: UpdateWebhookRequest
    UpdateWebhookResponse:
      type: object
      properties:
        status_code:
          description: HTTP Response Status Code
          type: integer
          example: 200
        status:
          description: HTTP Response Status
          type: string
          example: OK
        data:
          $ref: '#/components/schemas/Webhook'
      required:
        - status_code
        - status
        - data
      x-apideck-schema-id: UpdateWebhookResponse
    Webhook:
      type: object
      properties:
        id:
          type: string
          example: '1234'
          readOnly: true
        description:
          $ref: '#/components/schemas/Description'
        unified_api:
          $ref: '#/components/schemas/UnifiedApiId'
        status:
          $ref: '#/components/schemas/Status'
        disabled_reason:
          description: Indicates if the webhook has has been disabled as it reached its retry limit or if account is over the usage allocated by it's plan.
          type: string
          example: retry_limit
          enum:
            - none
            - retry_limit
            - usage_limit
          x-apideck-enum-id: webhook.disabled_reasons
        delivery_url:
          $ref: '#/components/schemas/DeliveryUrl'
        execute_base_url:
          $ref: '#/components/schemas/ExecuteBaseUrl'
        events:
          description: 'The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.'
          type: array
          items:
            $ref: '#/components/schemas/WebhookEventType'
          example:
            - vault.connection.created
            - vault.connection.updated
          title: Subscribed events
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
      additionalProperties: false
      required:
        - delivery_url
        - status
        - events
        - unified_api
        - execute_base_url
      x-apideck-schema-id: Webhook
    WebhookEventLog:
      type: object
      properties:
        id:
          type: string
          example: 1d174c4d-fe9e-4377-a76c-6da22fe9cd87
        status_code:
          description: HTTP Status code that was returned.
          type: integer
          example: 200
        success:
          description: Whether or not the request was successful.
          type: boolean
          example: true
        application_id:
          $ref: '#/components/schemas/ApplicationId'
        consumer_id:
          $ref: '#/components/schemas/ConsumerId'
        unified_api:
          $ref: '#/components/schemas/UnifiedApiId'
        service:
          description: Apideck service provider associated with event.
          type: object
          additionalProperties: false
          properties:
            id:
              description: Apideck service provider id.
              type: string
              example: 101-data-solution
            name:
              description: Apideck service provider name.
              type: string
              example: 101 Data Solution
          required:
            - id
            - name
        endpoint:
          description: The URL of the webhook endpoint.
          type: string
          format: uri
          example: 'https://example.com/my/webhook/endpoint'
          pattern: '^(https?)://'
        event_type:
          description: Name of source event that webhook is subscribed to.
          type: string
          example: vault.connection.updated
        execution_attempt:
          description: Number of attempts webhook endpoint was called before a success was returned or eventually failed
          type: number
          example: 3
        http_method:
          description: HTTP Method of request to endpoint.
          type: string
          example: GET
        timestamp:
          description: ISO Date and time when the request was made.
          type: string
          example: '2021-07-12T14:26:17.420Z'
        entity_type:
          description: Name of the Entity described by the attributes delivered within payload
          type: string
          example: Connection
        request_body:
          description: The JSON stringified payload that was delivered to the webhook endpoint.
          type: string
          example: '{"entity":{"id":"2222+test_user_id","application_id":"2222","consumer_id":"test_user_id","name":"ActiveCampaign","icon":"https://res.cloudinary.com/apideck/image/upload/v1529455970/catalog/activecampaign/icon128x128.png","logo":"https://www.activecampaign.com/site/assets/social-2x.png","unified_api":"crm","service_id":"activecampaign","auth_type":"apiKey","enabled":true,"tag_line":"Integrated email marketing, marketing automation, and small business CRM. Save time while growing your business with sales automation.","website":"https://www.activecampaign.com/","settings":{"instance_url":"https://eu28.salesforce.com","base_url":"https://updated.api-us1.com"},"metadata":{"plan":"enterprise","account":{"name":"My Company"}},"state":"callable","created_at":"2021-09-10T10:39:49.628Z","updated_at":"2021-09-10T10:39:52.715Z"},"entityType":"Connection"}'
        response_body:
          description: The JSON stringified response that was returned from the webhook endpoint.
          type: string
          example: '{"status":"OK"}'
        retry_scheduled:
          description: If the request has not hit the max retry limit and will be retried.
          type: boolean
          example: true
        attempts:
          description: record of each attempt to call webhook endpoint
          type: array
          items:
            type: object
            properties:
              timestamp:
                description: ISO Date and time when the request was made.
                type: string
                example: '2021-07-12T14:26:17.420Z'
              execution_attempt:
                description: Number of attempts webhook endpoint was called before a success was returned or eventually failed
                type: number
                example: 3
              status_code:
                description: HTTP Status code that was returned.
                type: integer
                example: 200
              success:
                description: Whether or not the request was successful.
                type: boolean
                example: true
      additionalProperties: false
      x-apideck-schema-id: WebhookEventLog
    WebhookEventLogsFilter:
      type: object
      properties:
        exclude_apis:
          type: string
          example: 'vault,proxy'
          nullable: true
        service:
          type: object
          nullable: true
          properties:
            id:
              type: string
        consumer_id:
          type: string
          example: test_user_id
          nullable: true
        entity_type:
          type: string
          example: Connection
          nullable: true
        event_type:
          type: string
          example: vault.connection.callable
          nullable: true
      x-apideck-schema-id: WebhookEventLogsFilter
    WebhookEventType:
      type: string
      example: crm.company.created
      enum:
        - '*'
        - crm.activity.created
        - crm.activity.updated
        - crm.activity.deleted
        - crm.company.created
        - crm.company.updated
        - crm.company.deleted
        - crm.contact.created
        - crm.contact.updated
        - crm.contact.deleted
        - crm.lead.created
        - crm.lead.updated
        - crm.lead.deleted
        - crm.note.created
        - crm.notes.updated
        - crm.notes.deleted
        - crm.opportunity.created
        - crm.opportunity.updated
        - crm.opportunity.deleted
        - lead.lead.created
        - lead.lead.updated
        - lead.lead.deleted
        - vault.connection.created
        - vault.connection.updated
        - vault.connection.disabled
        - vault.connection.deleted
        - vault.connection.callable
        - vault.connection.revoked
        - vault.connection.token_refresh.failed
        - ats.job.created
        - ats.job.updated
        - ats.job.deleted
        - ats.applicant.created
        - ats.applicant.updated
        - ats.applicant.deleted
        - accounting.customer.created
        - accounting.customer.updated
        - accounting.customer.deleted
        - accounting.invoice.created
        - accounting.invoice.updated
        - accounting.invoice.deleted
        - accounting.invoice_item.created
        - accounting.invoice_item.updated
        - accounting.invoice_item.deleted
        - accounting.ledger_account.created
        - accounting.ledger_account.updated
        - accounting.ledger_account.deleted
        - accounting.tax_rate.created
        - accounting.tax_rate.updated
        - accounting.tax_rate.deleted
        - accounting.bill.created
        - accounting.bill.updated
        - accounting.bill.deleted
        - accounting.payment.created
        - accounting.payment.updated
        - accounting.payment.deleted
        - accounting.supplier.created
        - accounting.supplier.updated
        - accounting.supplier.deleted
        - accounting.purchase_order.created
        - accounting.purchase_order.updated
        - accounting.purchase_order.deleted
        - pos.order.created
        - pos.order.updated
        - pos.order.deleted
        - pos.product.created
        - pos.product.updated
        - pos.product.deleted
        - pos.payment.created
        - pos.payment.updated
        - pos.payment.deleted
        - pos.merchant.created
        - pos.merchant.updated
        - pos.merchant.deleted
        - pos.location.created
        - pos.location.updated
        - pos.location.deleted
        - pos.item.created
        - pos.item.updated
        - pos.item.deleted
        - pos.modifier.created
        - pos.modifier.updated
        - pos.modifier.deleted
        - pos.modifier-group.created
        - pos.modifier-group.updated
        - pos.modifier-group.deleted
        - hris.employee.created
        - hris.employee.updated
        - hris.employee.deleted
        - hris.employee.terminated
        - hris.company.created
        - hris.company.updated
        - hris.company.deleted
        - file-storage.file.created
        - file-storage.file.updated
        - file-storage.file.deleted
        - issue-tracking.ticket.created
        - issue-tracking.ticket.updated
        - issue-tracking.ticket.deleted
        - ats.application.created
        - ats.application.updated
        - ats.application.deleted
        - accounting.expense.created
        - accounting.expense.updated
        - accounting.expense.deleted
      x-apideck-enum-id: webhooks.event_type
  responses:
    BadRequestResponse:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestResponse'
    CreateBillResponse:
      description: Bill created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateBillResponse'
    CreateCreditNoteResponse:
      description: Credit Note created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCreditNoteResponse'
    CreateCustomerResponse:
      description: Customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCustomerResponse'
    CreateInvoiceItemResponse:
      description: InvoiceItems
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInvoiceItemResponse'
    CreateInvoiceResponse:
      description: Invoice created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateInvoiceResponse'
    CreateLedgerAccountResponse:
      description: LedgerAccount created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateLedgerAccountResponse'
    CreatePaymentResponse:
      description: Payment created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePaymentResponse'
    CreateSupplierResponse:
      description: Supplier created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSupplierResponse'
    CreateTaxRateResponse:
      description: TaxRate created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTaxRateResponse'
    DeleteBillResponse:
      description: Bill deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteBillResponse'
    DeleteCreditNoteResponse:
      description: Credit Note deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteCreditNoteResponse'
    DeleteCustomerResponse:
      description: Customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteCustomerResponse'
    DeleteInvoiceItemResponse:
      description: InvoiceItems
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteTaxRateResponse'
    DeleteInvoiceResponse:
      description: Invoice deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteInvoiceResponse'
    DeleteLedgerAccountResponse:
      description: LedgerAccount deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteLedgerAccountResponse'
    DeletePaymentResponse:
      description: Payment deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeletePaymentResponse'
    DeleteSupplierResponse:
      description: Supplier deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteSupplierResponse'
    DeleteTaxRateResponse:
      description: TaxRates deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteTaxRateResponse'
    GetBalanceSheetResponse:
      description: BalanceSheet
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBalanceSheetResponse'
    GetBillResponse:
      description: Bill
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBillResponse'
    GetBillsResponse:
      description: Bills
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBillsResponse'
    GetCompanyInfoResponse:
      description: CompanyInfo
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCompanyInfoResponse'
    GetCreditNoteResponse:
      description: Credit Note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCreditNoteResponse'
    GetCreditNotesResponse:
      description: Credit Notes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCreditNotesResponse'
    GetCustomerResponse:
      description: Customer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCustomerResponse'
    GetCustomersResponse:
      description: Customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCustomersResponse'
    GetInvoiceItemResponse:
      description: InvoiceItems
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInvoiceItemResponse'
    GetInvoiceItemsResponse:
      description: InvoiceItems
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInvoiceItemsResponse'
    GetInvoiceResponse:
      description: Invoice
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInvoiceResponse'
    GetInvoicesResponse:
      description: Invoices
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetInvoicesResponse'
    GetLedgerAccountResponse:
      description: LedgerAccount
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLedgerAccountResponse'
    GetLedgerAccountsResponse:
      description: LedgerAccounts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLedgerAccountsResponse'
    GetPaymentResponse:
      description: Payment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPaymentResponse'
    GetPaymentsResponse:
      description: Payments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPaymentsResponse'
    CreateSubsidiaryResponse:
      description: Subsidiaries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSubsidiaryResponse'
    DeleteSubsidiaryResponse:
      description: Subsidiarys
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteSubsidiaryResponse'
    GetSubsidiariesResponse:
      description: Subsidiaries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSubsidiariesResponse'
    GetSubsidiaryResponse:
      description: Subsidiary
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSubsidiaryResponse'
    GetAccountingLocationsResponse:
      description: Locations
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAccountingLocationsResponse'
    GetAccountingLocationResponse:
      description: Location
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAccountingLocationResponse'
    CreateAccountingLocationResponse:
      description: Location
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAccountingLocationResponse'
    UpdateAccountingLocationResponse:
      description: Location
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAccountingLocationResponse'
    DeleteAccountingLocationResponse:
      description: Location deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteAccountingLocationResponse'
    GetAccountingDepartmentsResponse:
      description: Departments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAccountingDepartmentsResponse'
    GetAccountingDepartmentResponse:
      description: Location
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAccountingDepartmentResponse'
    CreateAccountingDepartmentResponse:
      description: Department
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAccountingDepartmentResponse'
    UpdateAccountingDepartmentResponse:
      description: Department
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAccountingDepartmentResponse'
    DeleteAccountingDepartmentResponse:
      description: Department deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteAccountingDepartmentResponse'
    UpdateSubsidiaryResponse:
      description: Subsidiaries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSubsidiaryResponse'
    GetSupplierResponse:
      description: Supplier
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSupplierResponse'
    GetSuppliersResponse:
      description: Suppliers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSuppliersResponse'
    GetTaxRateResponse:
      description: TaxRate
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTaxRateResponse'
    GetTaxRatesResponse:
      description: TaxRates
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTaxRatesResponse'
    NotFoundResponse:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
    PaymentRequiredResponse:
      description: Payment Required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentRequiredResponse'
    UnauthorizedResponse:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedResponse'
    UnexpectedErrorResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnexpectedErrorResponse'
    UnprocessableResponse:
      description: Unprocessable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnprocessableResponse'
    UpdateBillResponse:
      description: Bill Updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateBillResponse'
    UpdateCreditNoteResponse:
      description: Credit Note updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCreditNoteResponse'
    UpdateCustomerResponse:
      description: Customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCustomerResponse'
    UpdateInvoiceItemResponse:
      description: InvoiceItems
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateInvoiceItemsResponse'
    UpdateInvoiceResponse:
      description: Invoice updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateInvoiceResponse'
    UpdateLedgerAccountResponse:
      description: LedgerAccount updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLedgerAccountResponse'
    UpdatePaymentResponse:
      description: Payment Updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePaymentResponse'
    UpdateSupplierResponse:
      description: Supplier updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSupplierResponse'
    UpdateTaxRateResponse:
      description: TaxRate updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTaxRateResponse'
    GetProfitAndLossResponse:
      description: Profit & Loss Report
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProfitAndLossResponse'
    CreateJournalEntryResponse:
      description: JournalEntries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateJournalEntryResponse'
    DeleteJournalEntryResponse:
      description: JournalEntries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteJournalEntryResponse'
    GetJournalEntryResponse:
      description: JournalEntries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetJournalEntryResponse'
    GetJournalEntriesResponse:
      description: JournalEntry
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetJournalEntriesResponse'
    UpdateJournalEntryResponse:
      description: JournalEntries
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateJournalEntryResponse'
    CreatePurchaseOrderResponse:
      description: PurchaseOrders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePurchaseOrderResponse'
    DeletePurchaseOrderResponse:
      description: PurchaseOrders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeletePurchaseOrderResponse'
    GetPurchaseOrderResponse:
      description: PurchaseOrders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPurchaseOrderResponse'
    GetPurchaseOrdersResponse:
      description: PurchaseOrders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPurchaseOrdersResponse'
    UpdatePurchaseOrderResponse:
      description: PurchaseOrders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePurchaseOrderResponse'
    GetAttachmentsResponse:
      description: Attachments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAttachmentsResponse'
    DeleteAttachmentResponse:
      description: Attachments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteAttachmentResponse'
    GetAttachmentResponse:
      description: Attachments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetAttachmentResponse'
    GetAttachmentDownloadResponse:
      description: Attachment Download
      content:
        '*/*':
          schema:
            type: string
            format: binary
    GetTrackingCategoriesResponse:
      description: Tracking categories
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTrackingCategoriesResponse'
    GetTrackingCategoryResponse:
      description: Tracking category
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTrackingCategoryResponse'
    CreateTrackingCategoryResponse:
      description: Tracking category created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTrackingCategoryResponse'
    UpdateTrackingCategoryResponse:
      description: Tracking category updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTrackingCategoryResponse'
    DeleteTrackingCategoryResponse:
      description: Tracking category deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteTrackingCategoryResponse'
    GetBillPaymentsResponse:
      description: Bill Payments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBillPaymentsResponse'
    GetBillPaymentResponse:
      description: Bill Payment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetBillPaymentResponse'
    CreateBillPaymentResponse:
      description: Bill Payment created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateBillPaymentResponse'
    UpdateBillPaymentResponse:
      description: Bill Payment updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateBillPaymentResponse'
    DeleteBillPaymentResponse:
      description: Bill Payment deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteBillPaymentResponse'
    CreateExpenseResponse:
      description: Expenses
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateExpenseResponse'
    DeleteExpenseResponse:
      description: Expenses
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteExpenseResponse'
    GetExpenseResponse:
      description: Expenses
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetExpenseResponse'
    GetExpensesResponse:
      description: Expenses
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetExpensesResponse'
    UpdateExpenseResponse:
      description: Expenses
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateExpenseResponse'
    GetJobResponse:
      description: Jobs
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetJobResponse'
    GetJobsResponse:
      description: Jobs
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetJobsResponse'
    CreateApplicantResponse:
      description: Applicants
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateApplicantResponse'
    DeleteApplicantResponse:
      description: Applicants
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteApplicantResponse'
    GetApplicantResponse:
      description: Applicants
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApplicantResponse'
    GetApplicantsResponse:
      description: Applicants
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApplicantsResponse'
    UpdateApplicantResponse:
      description: Applicants
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateApplicantResponse'
    CreateApplicationResponse:
      description: Applications
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateApplicationResponse'
    DeleteApplicationResponse:
      description: Applications
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteApplicationResponse'
    GetApplicationResponse:
      description: Applications
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApplicationResponse'
    GetApplicationsResponse:
      description: Applications
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApplicationsResponse'
    UpdateApplicationResponse:
      description: Applications
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateApplicationResponse'
    CreateActivityResponse:
      description: Activity created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateActivityResponse'
    CreateCompanyResponse:
      description: Company created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCompanyResponse'
    CreateContactResponse:
      description: Contact created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateContactResponse'
    CreateLeadResponse:
      description: Lead created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateLeadResponse'
    CreateNoteResponse:
      description: Note created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateNoteResponse'
    CreateOpportunityResponse:
      description: Opportunity created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOpportunityResponse'
    CreatePipelineResponse:
      description: Pipeline created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePipelineResponse'
    CreateUserResponse:
      description: User created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserResponse'
    DeleteActivityResponse:
      description: Activity deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteActivityResponse'
    DeleteCompanyResponse:
      description: Company deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteCompanyResponse'
    DeleteContactResponse:
      description: Contact deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteContactResponse'
    DeleteLeadResponse:
      description: Lead deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteLeadResponse'
    DeleteNoteResponse:
      description: Note deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteNoteResponse'
    DeleteOpportunityResponse:
      description: Opportunity deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteOpportunityResponse'
    DeletePipelineResponse:
      description: Pipeline deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeletePipelineResponse'
    DeleteUserResponse:
      description: User deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteUserResponse'
    GetActivitiesResponse:
      description: Activities
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetActivitiesResponse'
    GetActivityResponse:
      description: Activity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetActivityResponse'
      links:
        company:
          operationId: companiesOne
          parameters:
            id: $response.body#/data/company_id
        contact:
          operationId: contactsOne
          parameters:
            id: $response.body#/data/contact_id
        opportunity:
          operationId: opportunitiesOne
          parameters:
            id: $response.body#/data/opportunity_id
        lead:
          operationId: leadsOne
          parameters:
            id: $response.body#/data/lead_id
        owner:
          operationId: usersOne
          parameters:
            id: $response.body#/data/owner_id
    GetCompaniesResponse:
      description: Companies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCompaniesResponse'
    GetCompanyResponse:
      description: Company
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCompanyResponse'
      links:
        parentById:
          operationId: companiesOne
          parameters:
            id: $response.body#/data/parent_id
        owner:
          operationId: usersOne
          parameters:
            id: $response.body#/data/owner_id
    GetContactResponse:
      description: Contact
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetContactResponse'
      links:
        company:
          operationId: companiesOne
          parameters:
            id: $response.body#/data/company_id
        lead:
          operationId: leadsOne
          parameters:
            id: $response.body#/data/lead_id
        owner:
          operationId: usersOne
          parameters:
            id: $response.body#/data/owner_id
    GetContactsResponse:
      description: Contacts
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetContactsResponse'
    GetCrmLeadResponse:
      description: Lead
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLeadResponse'
      links:
        company:
          operationId: companiesOne
          parameters:
            id: $response.body#/data/company_id
        contact:
          operationId: contactsOne
          parameters:
            id: $response.body#/data/contact_id
        owner:
          operationId: usersOne
          parameters:
            id: $response.body#/data/owner_id
    GetLeadsResponse:
      description: Leads
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLeadsResponse'
    GetNoteResponse:
      description: Note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNoteResponse'
      links:
        company:
          operationId: companiesOne
          parameters:
            id: $response.body#/data/company_id
        contact:
          operationId: contactsOne
          parameters:
            id: $response.body#/data/contact_id
        opportunity:
          operationId: opportunitiesOne
          parameters:
            id: $response.body#/data/opportunity_id
        lead:
          operationId: leadsOne
          parameters:
            id: $response.body#/data/lead_id
        owner:
          operationId: usersOne
          parameters:
            id: $response.body#/data/owner_id
    GetNotesResponse:
      description: Notes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetNotesResponse'
    GetOpportunitiesResponse:
      description: Opportunities
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetOpportunitiesResponse'
    GetOpportunityResponse:
      description: Opportunity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetOpportunityResponse'
      links:
        company:
          operationId: companiesOne
          parameters:
            id: $response.body#/data/company_id
        primarycontact:
          operationId: contactsOne
          parameters:
            id: $response.body#/data/primary_contact_id
        contact:
          operationId: contactsOne
          parameters:
            id: $response.body#/data/contact_id
        lead:
          operationId: leadsOne
          parameters:
            id: $response.body#/data/lead_id
        pipelineById:
          operationId: pipelinesOne
          parameters:
            id: $response.body#/data/pipeline_id
        owner:
          operationId: usersOne
          parameters:
            id: $response.body#/data/owner_id
    GetPipelineResponse:
      description: Pipeline
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPipelineResponse'
    GetPipelinesResponse:
      description: Pipelines
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPipelinesResponse'
    GetUserResponse:
      description: User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUserResponse'
    GetUsersResponse:
      description: Users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUsersResponse'
    UpdateActivityResponse:
      description: Activity updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateActivityResponse'
    UpdateCompanyResponse:
      description: Company updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCompanyResponse'
    UpdateContactResponse:
      description: Contact updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateContactResponse'
    UpdateLeadResponse:
      description: Lead updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateLeadResponse'
    UpdateNoteResponse:
      description: Note updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateNoteResponse'
    UpdateOpportunityResponse:
      description: Opportunity updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateOpportunityResponse'
    UpdatePipelineResponse:
      description: Pipeline updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdatePipelineResponse'
    UpdateUserResponse:
      description: User updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUserResponse'
    GetEcommerceCustomerResponse:
      description: Customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEcommerceCustomerResponse'
    GetEcommerceCustomersResponse:
      description: Customers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEcommerceCustomersResponse'
    GetEcommerceOrderResponse:
      description: Orders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEcommerceOrderResponse'
    GetEcommerceOrdersResponse:
      description: Orders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEcommerceOrdersResponse'
    GetProductResponse:
      description: Products
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProductResponse'
    GetProductsResponse:
      description: Products
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProductsResponse'
    GetStoreResponse:
      description: Stores
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetStoreResponse'
    CreateFolderResponse:
      description: Folders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateFolderResponse'
    CreateSharedLinkResponse:
      description: Shared Links
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSharedLinkResponse'
    CreateUploadSessionResponse:
      description: UploadSessions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUploadSessionResponse'
    DeleteFileResponse:
      description: Files
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteFileResponse'
    DeleteFolderResponse:
      description: Folders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteFolderResponse'
    DeleteSharedLinkResponse:
      description: Shared Links
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteSharedLinkResponse'
    DeleteUploadSessionResponse:
      description: UploadSessions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteUploadSessionResponse'
    GetFileDownloadResponse:
      description: File Download
      content:
        '*/*':
          schema:
            type: string
            format: binary
    GetFileResponse:
      description: File
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetFileResponse'
    GetFilesResponse:
      description: Files
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetFilesResponse'
    GetFolderResponse:
      description: Folders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetFolderResponse'
    GetSharedLinkResponse:
      description: Shared Link
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSharedLinkResponse'
    GetSharedLinksResponse:
      description: Shared Links
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetSharedLinksResponse'
    GetUploadSessionResponse:
      description: UploadSessions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetUploadSessionResponse'
    UpdateFileResponse:
      description: Files
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateFileResponse'
    UpdateFolderResponse:
      description: Folders
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateFolderResponse'
    UpdateSharedLinkResponse:
      description: Shared Links
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateSharedLinkResponse'
    CreateDriveResponse:
      description: Drives
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateDriveResponse'
    DeleteDriveResponse:
      description: Drives
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteDriveResponse'
    GetDriveResponse:
      description: Drives
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDriveResponse'
    GetDrivesResponse:
      description: Drives
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDrivesResponse'
    UpdateDriveResponse:
      description: Drives
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateDriveResponse'
    CreateDriveGroupResponse:
      description: DriveGroups
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateDriveGroupResponse'
    DeleteDriveGroupResponse:
      description: DriveGroups
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteDriveGroupResponse'
    GetDriveGroupResponse:
      description: DriveGroups
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDriveGroupResponse'
    GetDriveGroupsResponse:
      description: DriveGroups
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDriveGroupsResponse'
    UpdateDriveGroupResponse:
      description: DriveGroups
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateDriveGroupResponse'
    CreateHrisCompanyResponse:
      description: Companies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateHrisCompanyResponse'
    CreateEmployeeResponse:
      description: Employees
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateEmployeeResponse'
    DeleteHrisCompanyResponse:
      description: Companies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteHrisCompanyResponse'
    DeleteEmployeeResponse:
      description: Employees
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteEmployeeResponse'
    GetHrisCompaniesResponse:
      description: Companies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetHrisCompaniesResponse'
    GetHrisCompanyResponse:
      description: Company
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetHrisCompanyResponse'
    GetEmployeeResponse:
      description: Employees
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEmployeeResponse'
    GetEmployeesResponse:
      description: Employees
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEmployeesResponse'
    UpdateHrisCompanyResponse:
      description: Companies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateHrisCompanyResponse'
    UpdateEmployeeResponse:
      description: Employees
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateEmployeeResponse'
    CreateDepartmentResponse:
      description: Departments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateDepartmentResponse'
    DeleteDepartmentResponse:
      description: Departments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteDepartmentResponse'
    GetDepartmentResponse:
      description: Departments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDepartmentResponse'
    GetDepartmentsResponse:
      description: Departments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetDepartmentsResponse'
    UpdateDepartmentResponse:
      description: Departments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateDepartmentResponse'
    GetPayrollsResponse:
      description: Payrolls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPayrollsResponse'
    GetPayrollResponse:
      description: Payrolls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetPayrollResponse'
    GetEmployeePayrollResponse:
      description: Payrolls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEmployeePayrollResponse'
    GetEmployeePayrollsResponse:
      description: EmployeePayrolls
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEmployeePayrollsResponse'
    GetEmployeeSchedulesResponse:
      description: EmployeeSchedules
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEmployeeSchedulesResponse'
    CreateTimeOffRequestResponse:
      description: TimeOffRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTimeOffRequestResponse'
    DeleteTimeOffRequestResponse:
      description: TimeOffRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteTimeOffRequestResponse'
    GetTimeOffRequestResponse:
      description: TimeOffRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTimeOffRequestResponse'
    GetTimeOffRequestsResponse:
      description: TimeOffRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTimeOffRequestsResponse'
    UpdateTimeOffRequestResponse:
      description: TimeOffRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTimeOffRequestResponse'
    CreateMessageResponse:
      description: Messages
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateMessageResponse'
    DeleteMessageResponse:
      description: Messages
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteMessageResponse'
    GetMessageResponse:
      description: Messages
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetMessageResponse'
    GetMessagesResponse:
      description: Messages
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetMessagesResponse'
    UpdateMessageResponse:
      description: Messages
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateMessageResponse'
    CreateTicketResponse:
      description: Create a Ticket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTicketResponse'
    UpdateTicketResponse:
      description: Update a Ticket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateTicketResponse'
    DeleteTicketResponse:
      description: Delete a Ticket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteTicketResponse'
    GetTicketResponse:
      description: Get a Ticket
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTicketResponse'
    GetTicketsResponse:
      description: List Tickets
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetTicketsResponse'
    GetCommentResponse:
      description: Get a Comment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCommentResponse'
    GetCommentsResponse:
      description: List Comments
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCommentsResponse'
    CreateCommentResponse:
      description: Create a Comment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCommentResponse'
    UpdateCommentResponse:
      description: Update a Comment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCommentResponse'
    DeleteCommentResponse:
      description: Delete a Comment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteCommentResponse'
    GetCollectionResponse:
      description: Get a Collection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCollectionResponse'
    GetCollectionsResponse:
      description: List Collections
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCollectionsResponse'
    GetCollectionUserResponse:
      description: User
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCollectionUserResponse'
    GetCollectionUsersResponse:
      description: Users
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCollectionUsersResponse'
    GetCollectionTagsResponse:
      description: List Tags
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCollectionTagsResponse'
    GetApiResponse:
      description: Apis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApiResponse'
    GetApisResponse:
      description: Apis
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApisResponse'
    GetConnectorResourceResponse:
      description: ConnectorResources
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConnectorResourceResponse'
    GetApiResourceResponse:
      description: ApiResources
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApiResourceResponse'
    GetApiResourceCoverageResponse:
      description: ApiResources
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetApiResourceCoverageResponse'
    GetConnectorResponse:
      description: Connectors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConnectorResponse'
    GetConnectorDocResponse:
      description: Connectors
      content:
        text/markdown:
          schema:
            type: string
            format: markdown
    GetConnectorsResponse:
      description: Connectors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConnectorsResponse'
    ConsumerRequestCountsInDateRangeResponse:
      description: Consumers Request Counts within Date Range
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConsumerRequestCountsInDateRangeResponse'
    CreateConnectionResponse:
      description: Connection created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateConnectionResponse'
    CreateConsumerResponse:
      description: Consumer created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateConsumerResponse'
    CreateSessionResponse:
      description: Session created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateSessionResponse'
    DeleteConsumerResponse:
      description: Consumer deleted
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteConsumerResponse'
    GetConnectionResponse:
      description: Connection
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConnectionResponse'
    GetConnectionsResponse:
      description: Connections
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConnectionsResponse'
    GetConsumerResponse:
      description: Consumer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConsumerResponse'
    GetConsumersResponse:
      description: Consumers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetConsumersResponse'
    GetCustomFieldsResponse:
      description: Custom mapping
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCustomFieldsResponse'
    GetCustomMappingsResponse:
      description: Custom mapping
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetCustomMappingsResponse'
    GetLogsResponse:
      description: Logs
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetLogsResponse'
    ValidateConnectionStateResponse:
      description: Connection access token refreshed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidateConnectionStateResponse'
    UpdateConnectionResponse:
      description: Connection updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateConnectionResponse'
    UpdateConsumerResponse:
      description: Consumer updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateConsumerResponse'
    CreateCallbackStateResponse:
      description: Callback state created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCallbackStateResponse'
    CreateWebhookResponse:
      description: Webhooks
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateWebhookResponse'
    DeleteWebhookResponse:
      description: Webhooks
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeleteWebhookResponse'
    GetWebhookEventLogsResponse:
      description: EventLogs
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetWebhookEventLogsResponse'
    GetWebhookResponse:
      description: Webhooks
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetWebhookResponse'
    GetWebhooksResponse:
      description: Webhooks
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetWebhooksResponse'
    UpdateWebhookResponse:
      description: Webhooks
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateWebhookResponse'
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: Authorization
      description: |
        To use API you have to sign up and get your own API key. Unify API accounts have sandbox mode and live mode API keys.
        To change modes just use the appropriate key to get a live or test object. You can find your API keys on the unify settings of your Apideck app.
        Your Apideck application_id can also be found on the same page.

        Authenticate your API requests by including your test or live secret API key in the request header.

        - Bearer authorization header: `Authorization: Bearer "YOUR_API_KEY_HERE"`
        - Application id header: `x-apideck-app-id: "YOUR_APP_ID_HERE"`

        You should use the public keys on the SDKs and the secret keys to authenticate API requests.

        **Do not share or include your secret API keys on client side code.** Your API keys carry significant privileges. Please ensure to keep them 100% secure and be sure to not share your secret API keys in areas that are publicly accessible like GitHub.

        Learn how to set the Authorization header inside Postman https://learning.postman.com/docs/postman/sending-api-requests/authorization/#api-key

        Go to Unify to grab your API KEY https://app.apideck.com/unify/api-keys
    applicationId:
      type: apiKey
      in: header
      name: x-apideck-app-id
      description: The ID of your Unify application
    consumerId:
      type: apiKey
      in: header
      name: x-apideck-consumer-id
      description: The ID of the consumer which you want to get or push data from
tags:
  - name: accounting
  - name: ats
  - name: crm
  - name: ecommerce
  - name: fileStorage
  - name: hris
  - name: sms
  - name: issueTracking
  - name: connector
  - name: vault
  - name: webhook
externalDocs:
  description: Apideck Developer Docs
  url: 'https://developers.apideck.com'
security:
  - apiKey: []
x-speakeasy-globals:
  parameters:
    - $ref: '#/components/parameters/consumerId'
    - $ref: '#/components/parameters/applicationId'
x-speakeasy-retries:
  strategy: backoff
  backoff:
    initialInterval: 500
    maxInterval: 60000
    maxElapsedTime: 3600000
    exponent: 1.5
  statusCodes:
    - 5XX
  retryConnectionErrors: true
